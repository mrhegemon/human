
  /*
  Human library
  homepage: <https://github.com/vladmandic/human>
  author: <https://github.com/vladmandic>'
  */

var UB=Object.create,Hh=Object.defineProperty,qB=Object.getPrototypeOf,HB=Object.prototype.hasOwnProperty,KB=Object.getOwnPropertyNames,XB=Object.getOwnPropertyDescriptor;var YB=r=>Hh(r,"__esModule",{value:!0});var ht=(r,e)=>()=>(e||(e={exports:{}},r(e.exports,e)),e.exports),Ye=(r,e)=>{for(var t in e)Hh(r,t,{get:e[t],enumerable:!0})},ZB=(r,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of KB(e))!HB.call(r,n)&&n!=="default"&&Hh(r,n,{get:()=>e[n],enumerable:!(t=XB(e,n))||t.enumerable});return r},Dc=r=>r&&r.__esModule?r:ZB(YB(Hh(r!=null?UB(qB(r)):{},"default",{value:r,enumerable:!0})),r);var uN=ht(()=>{});var GN=ht((VN,qw)=>{(function(r,e,t){function n(i){var l=this,u=a();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(i),l.s0<0&&(l.s0+=1),l.s1-=u(i),l.s1<0&&(l.s1+=1),l.s2-=u(i),l.s2<0&&(l.s2+=1),u=null}function o(i,l){return l.c=i.c,l.s0=i.s0,l.s1=i.s1,l.s2=i.s2,l}function s(i,l){var u=new n(i),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&o(c,u),p.state=function(){return o(u,{})}),p}function a(){var i=4022871197,l=function(u){u=u.toString();for(var c=0;c<u.length;c++){i+=u.charCodeAt(c);var p=.02519603282416938*i;i=p>>>0,p-=i,p*=i,i=p>>>0,p-=i,i+=p*4294967296}return(i>>>0)*23283064365386963e-26};return l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(VN,typeof qw=="object"&&qw,typeof define=="function"&&define)});var WN=ht((jN,Hw)=>{(function(r,e,t){function n(a){var i=this,l="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var c=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^c^c>>>8},a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(jN,typeof Hw=="object"&&Hw,typeof define=="function"&&define)});var qN=ht((UN,Kw)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(c^c<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,u==l.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(UN,typeof Kw=="object"&&Kw,typeof define=="function"&&define)});var KN=ht((HN,Xw)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.x,c=i.i,p,m,f;return p=u[c],p^=p>>>7,m=p^p<<24,p=u[c+1&7],m^=p^p>>>10,p=u[c+3&7],m^=p^p>>>3,p=u[c+4&7],m^=p^p<<7,p=u[c+7&7],p=p^p<<13,m^=p^p<<9,u[c]=m,i.i=c+1&7,m};function l(u,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],u.x=f,u.i=0,p=256;p>0;--p)u.next()}l(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.x&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(HN,typeof Xw=="object"&&Xw,typeof define=="function"&&define)});var YN=ht((XN,Yw)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.w,c=i.X,p=i.i,m,f;return i.w=u=u+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,i.i=p,f+(u^u>>>16)|0};function l(u,c){var p,m,f,d,h,g=[],x=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,x=Math.max(x,c.length)),f=0,d=-32;d<x;++d)c&&(m^=c.charCodeAt((d+32)%c.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,p=g[d&127]^=m+h,f=p==0?f+1:0);for(f>=128&&(g[(c&&c.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;u.w=h,u.X=g,u.i=f}l(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.X&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(XN,typeof Yw=="object"&&Yw,typeof define=="function"&&define)});var JN=ht((ZN,Zw)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.b,p=i.c,m=i.d,f=i.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,i.b=c=c<<20^c>>>12^p,i.c=p=p-m|0,i.d=m<<16^p>>>16^f,i.a=f-c|0},i.a=0,i.b=0,i.c=2654435769|0,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):l+=a;for(var u=0;u<l.length+20;u++)i.b^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(ZN,typeof Zw=="object"&&Zw,typeof define=="function"&&define)});var gg=ht(()=>{});var QN=ht((lbe,xg)=>{(function(r,e){var t=this,n=256,o=6,s=52,a="random",i=e.pow(n,o),l=e.pow(2,s),u=l*2,c=n-1,p;function m(w,_,k){var E=[];_=_==!0?{entropy:!0}:_||{};var S=g(h(_.entropy?[w,b(r)]:w==null?x():w,3),E),R=new f(E),F=function(){for(var L=R.g(o),G=i,j=0;L<l;)L=(L+j)*n,G*=n,j=R.g(1);for(;L>=u;)L/=2,G/=2,j>>>=1;return(L+j)/G};return F.int32=function(){return R.g(4)|0},F.quick=function(){return R.g(4)/4294967296},F.double=F,g(b(R.S),r),(_.pass||k||function(L,G,j,U){return U&&(U.S&&d(U,R),L.state=function(){return d(R,{})}),j?(e[a]=L,G):L})(F,S,"global"in _?_.global:this==e,_.state)}e["seed"+a]=m;function f(w){var _,k=w.length,E=this,S=0,R=E.i=E.j=0,F=E.S=[];for(k||(w=[k++]);S<n;)F[S]=S++;for(S=0;S<n;S++)F[S]=F[R=c&R+w[S%k]+(_=F[S])],F[R]=_;(E.g=function(L){for(var G,j=0,U=E.i,Y=E.j,K=E.S;L--;)G=K[U=c&U+1],j=j*n+K[c&(K[U]=K[Y=c&Y+G])+(K[Y]=G)];return E.i=U,E.j=Y,j})(n)}function d(w,_){return _.i=w.i,_.j=w.j,_.S=w.S.slice(),_}function h(w,_){var k=[],E=typeof w,S;if(_&&E=="object")for(S in w)try{k.push(h(w[S],_-1))}catch(R){}return k.length?k:E=="string"?w:w+"\0"}function g(w,_){for(var k=w+"",E,S=0;S<k.length;)_[c&S]=c&(E^=_[c&S]*19)+k.charCodeAt(S++);return b(_)}function x(){try{var w;return p&&(w=p.randomBytes)?w=w(n):(w=new Uint8Array(n),(t.crypto||t.msCrypto).getRandomValues(w)),b(w)}catch(E){var _=t.navigator,k=_&&_.plugins;return[+new Date,t,k,t.screen,b(r)]}}function b(w){return String.fromCharCode.apply(0,w)}if(g(e.random(),r),typeof xg=="object"&&xg.exports){xg.exports=m;try{p=gg()}catch(w){}}else typeof define=="function"&&define.amd&&define(function(){return m})})([],Math)});var tS=ht((ube,eS)=>{var k4=GN(),v4=WN(),C4=qN(),I4=KN(),N4=YN(),S4=JN(),Fu=QN();Fu.alea=k4;Fu.xor128=v4;Fu.xorwow=C4;Fu.xorshift7=I4;Fu.xor4096=N4;Fu.tychei=S4;eS.exports=Fu});var Q1=ht((J1,O_)=>{(function(r,e,t){function n(i){var l=this,u=a();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(i),l.s0<0&&(l.s0+=1),l.s1-=u(i),l.s1<0&&(l.s1+=1),l.s2-=u(i),l.s2<0&&(l.s2+=1),u=null}function o(i,l){return l.c=i.c,l.s0=i.s0,l.s1=i.s1,l.s2=i.s2,l}function s(i,l){var u=new n(i),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&o(c,u),p.state=function(){return o(u,{})}),p}function a(){var i=4022871197,l=function(u){u=u.toString();for(var c=0;c<u.length;c++){i+=u.charCodeAt(c);var p=.02519603282416938*i;i=p>>>0,p-=i,p*=i,i=p>>>0,p-=i,i+=p*4294967296}return(i>>>0)*23283064365386963e-26};return l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(J1,typeof O_=="object"&&O_,typeof define=="function"&&define)});var tE=ht((eE,P_)=>{(function(r,e,t){function n(a){var i=this,l="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var c=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^c^c>>>8},a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(eE,typeof P_=="object"&&P_,typeof define=="function"&&define)});var nE=ht((rE,M_)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(c^c<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,u==l.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(rE,typeof M_=="object"&&M_,typeof define=="function"&&define)});var sE=ht((oE,L_)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.x,c=i.i,p,m,f;return p=u[c],p^=p>>>7,m=p^p<<24,p=u[c+1&7],m^=p^p>>>10,p=u[c+3&7],m^=p^p>>>3,p=u[c+4&7],m^=p^p<<7,p=u[c+7&7],p=p^p<<13,m^=p^p<<9,u[c]=m,i.i=c+1&7,m};function l(u,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],u.x=f,u.i=0,p=256;p>0;--p)u.next()}l(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.x&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(oE,typeof L_=="object"&&L_,typeof define=="function"&&define)});var aE=ht((iE,z_)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.w,c=i.X,p=i.i,m,f;return i.w=u=u+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,i.i=p,f+(u^u>>>16)|0};function l(u,c){var p,m,f,d,h,g=[],x=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,x=Math.max(x,c.length)),f=0,d=-32;d<x;++d)c&&(m^=c.charCodeAt((d+32)%c.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,p=g[d&127]^=m+h,f=p==0?f+1:0);for(f>=128&&(g[(c&&c.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;u.w=h,u.X=g,u.i=f}l(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.X&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(iE,typeof z_=="object"&&z_,typeof define=="function"&&define)});var uE=ht((lE,B_)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.b,p=i.c,m=i.d,f=i.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,i.b=c=c<<20^c>>>12^p,i.c=p=p-m|0,i.d=m<<16^p>>>16^f,i.a=f-c|0},i.a=0,i.b=0,i.c=2654435769|0,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):l+=a;for(var u=0;u<l.length+20;u++)i.b^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(lE,typeof B_=="object"&&B_,typeof define=="function"&&define)});var cE=ht((i3e,Rg)=>{(function(r,e){var t=this,n=256,o=6,s=52,a="random",i=e.pow(n,o),l=e.pow(2,s),u=l*2,c=n-1,p;function m(w,_,k){var E=[];_=_==!0?{entropy:!0}:_||{};var S=g(h(_.entropy?[w,b(r)]:w==null?x():w,3),E),R=new f(E),F=function(){for(var L=R.g(o),G=i,j=0;L<l;)L=(L+j)*n,G*=n,j=R.g(1);for(;L>=u;)L/=2,G/=2,j>>>=1;return(L+j)/G};return F.int32=function(){return R.g(4)|0},F.quick=function(){return R.g(4)/4294967296},F.double=F,g(b(R.S),r),(_.pass||k||function(L,G,j,U){return U&&(U.S&&d(U,R),L.state=function(){return d(R,{})}),j?(e[a]=L,G):L})(F,S,"global"in _?_.global:this==e,_.state)}e["seed"+a]=m;function f(w){var _,k=w.length,E=this,S=0,R=E.i=E.j=0,F=E.S=[];for(k||(w=[k++]);S<n;)F[S]=S++;for(S=0;S<n;S++)F[S]=F[R=c&R+w[S%k]+(_=F[S])],F[R]=_;(E.g=function(L){for(var G,j=0,U=E.i,Y=E.j,K=E.S;L--;)G=K[U=c&U+1],j=j*n+K[c&(K[U]=K[Y=c&Y+G])+(K[Y]=G)];return E.i=U,E.j=Y,j})(n)}function d(w,_){return _.i=w.i,_.j=w.j,_.S=w.S.slice(),_}function h(w,_){var k=[],E=typeof w,S;if(_&&E=="object")for(S in w)try{k.push(h(w[S],_-1))}catch(R){}return k.length?k:E=="string"?w:w+"\0"}function g(w,_){for(var k=w+"",E,S=0;S<k.length;)_[c&S]=c&(E^=_[c&S]*19)+k.charCodeAt(S++);return b(_)}function x(){try{var w;return p&&(w=p.randomBytes)?w=w(n):(w=new Uint8Array(n),(t.crypto||t.msCrypto).getRandomValues(w)),b(w)}catch(E){var _=t.navigator,k=_&&_.plugins;return[+new Date,t,k,t.screen,b(r)]}}function b(w){return String.fromCharCode.apply(0,w)}if(g(e.random(),r),typeof Rg=="object"&&Rg.exports){Rg.exports=m;try{p=gg()}catch(w){}}else typeof define=="function"&&define.amd&&define(function(){return m})})([],Math)});var mE=ht((a3e,pE)=>{var t6=Q1(),r6=tE(),n6=nE(),o6=sE(),s6=aE(),i6=uE(),Yu=cE();Yu.alea=t6;Yu.xor128=r6;Yu.xorwow=n6;Yu.xorshift7=o6;Yu.xor4096=s6;Yu.tychei=i6;pE.exports=Yu});var Sp=ht(()=>{});var BO=ht(()=>{});var VO=ht(()=>{});var GO=ht((mx,d0)=>{var h0=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};function t(){return X.buffer!=He&&kr(X.buffer),Ot}function n(){return X.buffer!=He&&kr(X.buffer),mn}function o(){return X.buffer!=He&&kr(X.buffer),_r}function s(){return X.buffer!=He&&kr(X.buffer),Gn}function a(){return X.buffer!=He&&kr(X.buffer),dn}var i=typeof e!="undefined"?e:{},l={},u;for(u in i)i.hasOwnProperty(u)&&(l[u]=i[u]);var c=[],p="./this.program",m=function(I,$){throw $},f=!1,d=!1,h=!1,g=!1;f=typeof window=="object",d=typeof importScripts=="function",h=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g=!f&&!h&&!d;var x=i.ENVIRONMENT_IS_PTHREAD||!1;x&&(He=i.buffer,ss=i.DYNAMIC_BASE,Tn=i.DYNAMICTOP_PTR);var b="";function w(I){return i.locateFile?i.locateFile(I,b):b+I}var _,k,E,S,R,F;if(h){d?b=Sp().dirname(b)+"/":b=__dirname+"/",_=function($,M){return R||(R=require("fs")),F||(F=Sp()),$=F.normalize($),R.readFileSync($,M?null:"utf8")},E=function($){var M=_($,!0);return M.buffer||(M=new Uint8Array(M)),ge(M.buffer),M},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),c=process.argv.slice(2),process.on("uncaughtException",function(I){if(!(I instanceof yI))throw I}),process.on("unhandledRejection",ea),m=function(I){process.exit(I)},i.inspect=function(){return"[Emscripten Module object]"};var L;try{L=BO()}catch(I){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),I}Worker=L.Worker}else g?(typeof read!="undefined"&&(_=function($){return read($)}),E=function($){var M;return typeof readbuffer=="function"?new Uint8Array(readbuffer($)):(M=read($,"binary"),ge(typeof M=="object"),M)},typeof scriptArgs!="undefined"?c=scriptArgs:typeof arguments!="undefined"&&(c=arguments),typeof quit=="function"&&(m=function(I){quit(I)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(f||d)&&(d?b=self.location.href:document.currentScript&&(b=document.currentScript.src),typeof r!="undefined"&&r&&(b=r),b.indexOf("blob:")!==0?b=b.substr(0,b.lastIndexOf("/")+1):b="",h?(_=function($,M){return R||(R=require("fs")),F||(F=Sp()),$=F.normalize($),R.readFileSync($,M?null:"utf8")},E=function($){var M=_($,!0);return M.buffer||(M=new Uint8Array(M)),ge(M.buffer),M}):(_=function($){var M=new XMLHttpRequest;return M.open("GET",$,!1),M.send(null),M.responseText},d&&(E=function($){var M=new XMLHttpRequest;return M.open("GET",$,!1),M.responseType="arraybuffer",M.send(null),new Uint8Array(M.response)}),k=function($,M,q){var me=new XMLHttpRequest;me.open("GET",$,!0),me.responseType="arraybuffer",me.onload=function(){if(me.status==200||me.status==0&&me.response){M(me.response);return}q()},me.onerror=q,me.send(null)}),S=function(I){document.title=I});h&&typeof performance=="undefined"&&(performance=VO().performance);var G=i.print||console.log.bind(console),j=i.printErr||console.warn.bind(console);for(u in l)l.hasOwnProperty(u)&&(i[u]=l[u]);l=null,i.arguments&&(c=i.arguments),i.thisProgram&&(p=i.thisProgram),i.quit&&(m=i.quit);var U=Atomics.load,Y=Atomics.store,K=Atomics.compareExchange,Z;i.wasmBinary&&(Z=i.wasmBinary);var te;i.noExitRuntime&&(te=i.noExitRuntime),typeof WebAssembly!="object"&&j("no native wasm support detected");var X,re=new WebAssembly.Table({initial:171,maximum:171+0,element:"anyfunc"}),ie,se=0,pe=0,ae=!1,xe=0;function ge(I,$){I||ea("Assertion failed: "+$)}function we(I){var $=i["_"+I];return ge($,"Cannot call unknown function "+I+", make sure it is exported"),$}function ke(I,$,M,q,me){var he={string:function(gn){var Za=0;if(gn!=null&&gn!==0){var ym=(gn.length<<2)+1;Za=Sc(ym),ut(gn,Za,ym)}return Za},array:function(gn){var Za=Sc(gn.length);return vt(gn,Za),Za}};function fe(gn){return $==="string"?Re(gn):$==="boolean"?Boolean(gn):gn}var Te=we(I),mt=[],mr=0;if(q)for(var Dr=0;Dr<q.length;Dr++){var Ec=he[M[Dr]];Ec?(mr===0&&(mr=hm()),mt[Dr]=Ec(q[Dr])):mt[Dr]=q[Dr]}var xm=Te.apply(null,mt);return xm=fe(xm),mr!==0&&Tc(mr),xm}function De(I,$,M,q){M=M||[];var me=M.every(function(fe){return fe==="number"}),he=$!=="string";return he&&me&&!q?we(I):function(){return ke(I,$,M,arguments,q)}}function $e(I,$,M){for(var q=$+M,me="";!($>=q);){var he=I[$++];if(!he)return me;if(!(he&128)){me+=String.fromCharCode(he);continue}var fe=I[$++]&63;if((he&224)==192){me+=String.fromCharCode((he&31)<<6|fe);continue}var Te=I[$++]&63;if((he&240)==224?he=(he&15)<<12|fe<<6|Te:he=(he&7)<<18|fe<<12|Te<<6|I[$++]&63,he<65536)me+=String.fromCharCode(he);else{var mt=he-65536;me+=String.fromCharCode(55296|mt>>10,56320|mt&1023)}}return me}function Re(I,$){return I?$e(n(),I,$):""}function qe(I,$,M,q){if(!(q>0))return 0;for(var me=M,he=M+q-1,fe=0;fe<I.length;++fe){var Te=I.charCodeAt(fe);if(Te>=55296&&Te<=57343){var mt=I.charCodeAt(++fe);Te=65536+((Te&1023)<<10)|mt&1023}if(Te<=127){if(M>=he)break;$[M++]=Te}else if(Te<=2047){if(M+1>=he)break;$[M++]=192|Te>>6,$[M++]=128|Te&63}else if(Te<=65535){if(M+2>=he)break;$[M++]=224|Te>>12,$[M++]=128|Te>>6&63,$[M++]=128|Te&63}else{if(M+3>=he)break;$[M++]=240|Te>>18,$[M++]=128|Te>>12&63,$[M++]=128|Te>>6&63,$[M++]=128|Te&63}}return $[M]=0,M-me}function ut(I,$,M){return qe(I,n(),$,M)}function kt(I){for(var $=0,M=0;M<I.length;++M){var q=I.charCodeAt(M);q>=55296&&q<=57343&&(q=65536+((q&1023)<<10)|I.charCodeAt(++M)&1023),q<=127?++$:q<=2047?$+=2:q<=65535?$+=3:$+=4}return $}function vt(I,$){t().set(I,$)}var pt=65536;function Ct(I,$){return I%$>0&&(I+=$-I%$),I}var He,Ot,mn,Jt,fn,_r,Gn,Jr,dn;function kr(I){He=I,i.HEAP8=Ot=new Int8Array(I),i.HEAP16=Jt=new Int16Array(I),i.HEAP32=_r=new Int32Array(I),i.HEAPU8=mn=new Uint8Array(I),i.HEAPU16=fn=new Uint16Array(I),i.HEAPU32=Gn=new Uint32Array(I),i.HEAPF32=Jr=new Float32Array(I),i.HEAPF64=dn=new Float64Array(I)}var Sn=5256464,jn=Sn,Qr=13584,ss=5256464,Tn=12656,wc=i.INITIAL_MEMORY||16777216;if(x)X=i.wasmMemory,He=i.buffer;else if(i.wasmMemory)X=i.wasmMemory;else if(X=new WebAssembly.Memory({initial:wc/pt,maximum:2147483648/pt,shared:!0}),!(X.buffer instanceof SharedArrayBuffer))throw j("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),h&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");X&&(He=X.buffer),wc=He.byteLength,kr(He),x||(o()[Tn>>2]=ss);function is(I){for(;I.length>0;){var $=I.shift();if(typeof $=="function"){$(i);continue}var M=$.func;typeof M=="number"?$.arg===void 0?i.dynCall_v(M):i.dynCall_vi(M,$.arg):M($.arg===void 0?null:$.arg)}}var Ji=[],$l=[],_y=[],nm=[],Ch=[],om=!1;x&&(om=!0);function Wn(){if(!x){if(i.preRun)for(typeof i.preRun=="function"&&(i.preRun=[i.preRun]);i.preRun.length;)Cy(i.preRun.shift());is(Ji)}}function Ih(){om=!0,is($l)}function ky(){x||is(_y)}function vy(){if(!x){if(i.postRun)for(typeof i.postRun=="function"&&(i.postRun=[i.postRun]);i.postRun.length;)Rl(i.postRun.shift());is(Ch)}}function Cy(I){Ji.unshift(I)}function Rl(I){Ch.unshift(I)}var _c=Math.ceil,Iy=Math.floor,Qi=0,sm=null,Fl=null;function Ny(I){ge(!x,"addRunDependency cannot be used in a pthread worker"),Qi++,i.monitorRunDependencies&&i.monitorRunDependencies(Qi)}function Sy(I){if(Qi--,i.monitorRunDependencies&&i.monitorRunDependencies(Qi),Qi==0&&(sm!==null&&(clearInterval(sm),sm=null),Fl)){var $=Fl;Fl=null,$()}}i.preloadedImages={},i.preloadedAudios={};function ea(I){throw i.onAbort&&i.onAbort(I),x&&console.error("Pthread aborting at "+new Error().stack),I+="",G(I),j(I),ae=!0,xe=1,I="abort("+I+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(I)}function im(I,$){return String.prototype.startsWith?I.startsWith($):I.indexOf($)===0}var Ty="data:application/octet-stream;base64,";function Nh(I){return im(I,Ty)}var Ey="file://";function Sh(I){return im(I,Ey)}var Un="tfjs-backend-wasm-threaded-simd.wasm";Nh(Un)||(Un=w(Un));function Th(){try{if(Z)return new Uint8Array(Z);if(E)return E(Un);throw"both async and sync fetching of the wasm failed"}catch(I){ea(I)}}function Ay(){return!Z&&(f||d)&&typeof fetch=="function"&&!Sh(Un)?fetch(Un,{credentials:"same-origin"}).then(function(I){if(!I.ok)throw"failed to load wasm binary file at '"+Un+"'";return I.arrayBuffer()}).catch(function(){return Th()}):new Promise(function(I,$){I(Th())})}function Dy(){var I={a:kb};function $(fe,Te){var mt=fe.exports;if(i.asm=mt,ie=Te,!x){var mr=_e.unusedWorkers.length;_e.unusedWorkers.forEach(function(Dr){_e.loadWasmModuleToWorker(Dr,function(){--mr||Sy("wasm-instantiate")})})}}x||Ny("wasm-instantiate");function M(fe){$(fe.instance,fe.module)}function q(fe){return Ay().then(function(Te){return WebAssembly.instantiate(Te,I)}).then(fe,function(Te){j("failed to asynchronously prepare wasm: "+Te),ea(Te)})}function me(){if(!Z&&typeof WebAssembly.instantiateStreaming=="function"&&!Nh(Un)&&!Sh(Un)&&typeof fetch=="function")fetch(Un,{credentials:"same-origin"}).then(function(fe){var Te=WebAssembly.instantiateStreaming(fe,I);return Te.then(M,function(mt){j("wasm streaming compile failed: "+mt),j("falling back to ArrayBuffer instantiation"),q(M)})});else return q(M)}if(i.instantiateWasm)try{var he=i.instantiateWasm(I,$);return he}catch(fe){return j("Module.instantiateWasm callback failed with error: "+fe),!1}return me(),{}}var $y={};function Ry(){_e.initRuntime()}x||$l.push({func:function(){Bh()}});var Eh=0,Ah=0,Dh=0;function kc(I,$,M){I=I|0,$=$|0,M=M|0,Eh=I,Dh=$,Ah=M}i.__register_pthread_ptr=kc;var am={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135},vc=13568;function Cc(I,$){if(I<=0||I>t().length||I&!0||$<0)return-28;if($==0)return 0;$>=2147483647&&($=Infinity);var M=Atomics.load(o(),vc>>2),q=0;if(M==I){var me=Atomics.compareExchange(o(),vc>>2,M,0);if(me==M&&(--$,q=1,$<=0))return 1}var he=Atomics.notify(o(),I>>2,$);if(he>=0)return he+q;throw"Atomics.notify returned an unexpected value "+he}i._emscripten_futex_wake=Cc;function Fy(I){if(x)throw"Internal Error! _kill_thread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in _kill_thread!";o()[I+12>>2]=0;var $=_e.pthreads[I];$.worker.terminate(),_e.freeThreadData($),_e.runningWorkers.splice(_e.runningWorkers.indexOf($.worker),1),$.worker.pthread=void 0}function Oy(I){if(x)throw"Internal Error! _cancel_thread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in _cancel_thread!";var $=_e.pthreads[I];$.worker.postMessage({cmd:"cancel"})}function Py(I){if(x)throw"Internal Error! _cleanup_thread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in _cleanup_thread!";o()[I+12>>2]=0;var $=_e.pthreads[I];if($){var M=$.worker;_e.returnWorkerToPool(M)}}var _e={MAIN_THREAD_ID:1,mainThreadInfo:{schedPolicy:0,schedPrio:0},unusedWorkers:[],runningWorkers:[],initRuntime:function(){kc(_e.mainThreadBlock,!d,1),dI(_e.mainThreadBlock)},initMainThreadBlock:function(){for(var I=8,$=0;$<I;++$)_e.allocateUnusedWorker();_e.mainThreadBlock=12816;for(var $=0;$<232/4;++$)s()[_e.mainThreadBlock/4+$]=0;o()[_e.mainThreadBlock+12>>2]=_e.mainThreadBlock;var M=_e.mainThreadBlock+156;o()[M>>2]=M;for(var q=13056,$=0;$<128;++$)s()[q/4+$]=0;Atomics.store(s(),_e.mainThreadBlock+104>>2,q),Atomics.store(s(),_e.mainThreadBlock+40>>2,_e.mainThreadBlock),Atomics.store(s(),_e.mainThreadBlock+44>>2,42)},initWorker:function(){},pthreads:{},exitHandlers:null,setThreadStatus:function(){},runExitHandlers:function(){if(_e.exitHandlers!==null){for(;_e.exitHandlers.length>0;)_e.exitHandlers.pop()();_e.exitHandlers=null}x&&se&&fI()},threadExit:function(I){var $=Us();$&&(Atomics.store(s(),$+4>>2,I),Atomics.store(s(),$+0>>2,1),Atomics.store(s(),$+60>>2,1),Atomics.store(s(),$+64>>2,0),_e.runExitHandlers(),Cc($+0,2147483647),kc(0,0,0),se=0,x&&postMessage({cmd:"exit"}))},threadCancel:function(){_e.runExitHandlers(),Atomics.store(s(),se+4>>2,-1),Atomics.store(s(),se+0>>2,1),Cc(se+0,2147483647),se=pe=0,kc(0,0,0),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var I in _e.pthreads){var $=_e.pthreads[I];$&&$.worker&&_e.returnWorkerToPool($.worker)}_e.pthreads={};for(var M=0;M<_e.unusedWorkers.length;++M){var q=_e.unusedWorkers[M];q.terminate()}_e.unusedWorkers=[];for(var M=0;M<_e.runningWorkers.length;++M){var q=_e.runningWorkers[M],$=q.pthread;_e.freeThreadData($),q.terminate()}_e.runningWorkers=[]},freeThreadData:function(I){if(!!I){if(I.threadInfoStruct){var $=o()[I.threadInfoStruct+104>>2];o()[I.threadInfoStruct+104>>2]=0,dm($),dm(I.threadInfoStruct)}I.threadInfoStruct=0,I.allocatedOwnStack&&I.stackBase&&dm(I.stackBase),I.stackBase=0,I.worker&&(I.worker.pthread=null)}},returnWorkerToPool:function(I){delete _e.pthreads[I.pthread.thread],_e.unusedWorkers.push(I),_e.runningWorkers.splice(_e.runningWorkers.indexOf(I),1),_e.freeThreadData(I.pthread),I.pthread=void 0},receiveObjectTransfer:function(I){},loadWasmModuleToWorker:function(I,$){I.onmessage=function(M){var q=M.data,me=q.cmd;if(I.pthread&&(_e.currentProxiedOperationCallerThread=I.pthread.threadInfoStruct),q.targetThread&&q.targetThread!=Us()){var he=_e.pthreads[q.targetThread];he?he.worker.postMessage(M.data,q.transferList):console.error('Internal error! Worker sent a message "'+me+'" to target pthread '+q.targetThread+", but that thread no longer exists!"),_e.currentProxiedOperationCallerThread=void 0;return}if(me==="processQueuedMainThreadWork")Ib();else if(me==="spawnThread")Mh(M.data);else if(me==="cleanupThread")Py(q.thread);else if(me==="killThread")Fy(q.thread);else if(me==="cancelThread")Oy(q.thread);else if(me==="loaded")I.loaded=!0,$&&$(I),I.runPthread&&(I.runPthread(),delete I.runPthread);else if(me==="print")G("Thread "+q.threadId+": "+q.text);else if(me==="printErr")j("Thread "+q.threadId+": "+q.text);else if(me==="alert")alert("Thread "+q.threadId+": "+q.text);else if(me==="exit"){var fe=I.pthread&&Atomics.load(s(),I.pthread.thread+68>>2);fe&&_e.returnWorkerToPool(I)}else me==="cancelDone"?_e.returnWorkerToPool(I):me==="objectTransfer"?_e.receiveObjectTransfer(M.data):M.data.target==="setimmediate"?I.postMessage(M.data):j("worker sent an unknown command "+me);_e.currentProxiedOperationCallerThread=void 0},I.onerror=function(M){j("pthread sent an error! "+M.filename+":"+M.lineno+": "+M.message)},h&&(I.on("message",function(M){I.onmessage({data:M})}),I.on("error",function(M){I.onerror(M)}),I.on("exit",function(M){console.log("worker exited - TODO: update the worker queue?")})),I.postMessage({cmd:"load",urlOrBlob:i.mainScriptUrlOrBlob||r,wasmMemory:X,wasmModule:ie,DYNAMIC_BASE:ss,DYNAMICTOP_PTR:Tn})},allocateUnusedWorker:function(){var I=w("tfjs-backend-wasm-threaded-simd.worker.js");_e.unusedWorkers.push(new Worker(I))},getNewWorker:function(){return _e.unusedWorkers.length==0&&(_e.allocateUnusedWorker(),_e.loadWasmModuleToWorker(_e.unusedWorkers[0])),_e.unusedWorkers.length>0?_e.unusedWorkers.pop():null},busySpinWait:function(I){for(var $=performance.now()+I;performance.now()<$;);}};function My(I,$){Sn=jn=I,Qr=$,Tc(I)}i.establishStackSpace=My;function Ly(){return te}i.getNoExitRuntime=Ly;function zy(I,$,M,q){ea("Assertion failed: "+Re(I)+", at: "+[$?Re($):"unknown filename",M,q?Re(q):"unknown function"])}function By(I,$){var M=_main(I,$)}var Ol;h?Ol=function(){var I=process.hrtime();return I[0]*1e3+I[1]/1e6}:x?Ol=function(){return performance.now()-i.__performance_now_clock_drift}:typeof dateNow!="undefined"?Ol=dateNow:Ol=function(){return performance.now()};function Vy(I){return o()[cI()>>2]=I,I}function Gy(I,$){if(x)return Ka(1,1,I,$);nm.unshift({func:I,arg:$})}function jy(I,$){if(I==$)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:I,cmd:"processThreadQueue"});else{var M=_e.pthreads[I],q=M&&M.worker;if(!q)return;q.postMessage({cmd:"processThreadQueue"})}return 1}function Wy(){ea()}function Uy(I,$){I=I|0,$=$|0}function qy(I,$,M){if(I<=0||I>t().length||I&!0)return-28;if(d){var q=Atomics.wait(o(),I>>2,$,M);if(q==="timed-out")return-73;if(q==="not-equal")return-6;if(q==="ok")return 0;throw"Atomics.wait returned an unexpected value "+q}else{var me=Atomics.load(o(),I>>2);if($!=me)return-6;var he=performance.now(),fe=he+M;Atomics.store(o(),vc>>2,I);for(var Te=I;I==Te;){if(he=performance.now(),he>fe)return-73;Ib(),I=Atomics.load(o(),vc>>2)}return 0}}function Hy(){return Dh|0}function Ky(){return Ah|0}function Xy(I,$,M){n().copyWithin(I,$,$+M)}function Yy(){return navigator.hardwareConcurrency}function Ka(I,$){for(var M=arguments.length-2,q=hm(),me=Sc(M*8),he=me>>3,fe=0;fe<M;fe++)a()[he+fe]=arguments[2+fe];var Te=gI(I,M,me,$);return Tc(q),Te}var Pl=[];function Ic(I,$){Ic.array||(Ic.array=[]);var M=Ic.array;M.length=0;for(var q;q=n()[I++];)q===100||q===102?($=$+7&~7,M.push(a()[$>>3]),$+=8):($=$+3&~3,M.push(o()[$>>2]),$+=4);return M}function Zy(I,$,M){Pl.length=$;for(var q=M>>3,me=0;me<$;me++)Pl[me]=a()[q+me];var he=I<0,fe=he?$y[-I-1]:_b[I];if(he){var Te=Pl[1],mt=Pl[2],mr=Ic(Te,mt);return fe.apply(null,mr)}return fe.apply(null,Pl)}function Jy(){return n().length}function Qy(I){try{return X.grow(I-He.byteLength+65535>>>16),kr(X.buffer),1}catch($){}}function eb(I){I=I>>>0;var $=Jy();if(I<=$)return!1;var M=65536,q=2147483648;if(I>q)return!1;for(var me=16777216,he=1;he<=4;he*=2){var fe=$*(1+.2/he);fe=Math.min(fe,I+100663296);var Te=Math.min(q,Ct(Math.max(me,I,fe),M)),mt=Qy(Te);if(mt)return!0}return!1}var Je={keyEvent:0,mouseEvent:0,wheelEvent:0,uiEvent:0,focusEvent:0,deviceOrientationEvent:0,deviceMotionEvent:0,fullscreenChangeEvent:0,pointerlockChangeEvent:0,visibilityChangeEvent:0,touchEvent:0,previousFullscreenElement:null,previousScreenX:null,previousScreenY:null,removeEventListenersRegistered:!1,removeAllEventListeners:function(){for(var I=Je.eventHandlers.length-1;I>=0;--I)Je._removeHandler(I);Je.eventHandlers=[],Je.deferredCalls=[]},registerRemoveEventListeners:function(){Je.removeEventListenersRegistered||(nm.push(Je.removeAllEventListeners),Je.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(I,$,M){function q(fe,Te){if(fe.length!=Te.length)return!1;for(var mt in fe)if(fe[mt]!=Te[mt])return!1;return!0}for(var me in Je.deferredCalls){var he=Je.deferredCalls[me];if(he.targetFunction==I&&q(he.argsList,M))return}Je.deferredCalls.push({targetFunction:I,precedence:$,argsList:M}),Je.deferredCalls.sort(function(fe,Te){return fe.precedence<Te.precedence})},removeDeferredCalls:function(I){for(var $=0;$<Je.deferredCalls.length;++$)Je.deferredCalls[$].targetFunction==I&&(Je.deferredCalls.splice($,1),--$)},canPerformEventHandlerRequests:function(){return Je.inEventHandler&&Je.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Je.canPerformEventHandlerRequests())for(var I=0;I<Je.deferredCalls.length;++I){var $=Je.deferredCalls[I];Je.deferredCalls.splice(I,1),--I,$.targetFunction.apply(null,$.argsList)}},inEventHandler:0,currentEventHandler:null,eventHandlers:[],removeAllHandlersOnTarget:function(I,$){for(var M=0;M<Je.eventHandlers.length;++M)Je.eventHandlers[M].target==I&&(!$||$==Je.eventHandlers[M].eventTypeString)&&Je._removeHandler(M--)},_removeHandler:function(I){var $=Je.eventHandlers[I];$.target.removeEventListener($.eventTypeString,$.eventListenerFunc,$.useCapture),Je.eventHandlers.splice(I,1)},registerOrRemoveHandler:function(I){var $=function(me){++Je.inEventHandler,Je.currentEventHandler=I,Je.runDeferredCalls(),I.handlerFunc(me),Je.runDeferredCalls(),--Je.inEventHandler};if(I.callbackfunc)I.eventListenerFunc=$,I.target.addEventListener(I.eventTypeString,$,I.useCapture),Je.eventHandlers.push(I),Je.registerRemoveEventListeners();else for(var M=0;M<Je.eventHandlers.length;++M)Je.eventHandlers[M].target==I.target&&Je.eventHandlers[M].eventTypeString==I.eventTypeString&&Je._removeHandler(M--)},queueEventHandlerOnThread_iiii:function(I,$,M,q,me){var he=hm(),fe=Sc(12);o()[fe>>2]=M,o()[fe+4>>2]=q,o()[fe+8>>2]=me,Nb(I,637534208,$,q,fe),Tc(he)},getTargetThreadForEventCallback:function(I){switch(I){case 1:return 0;case 2:return _e.currentProxiedOperationCallerThread;default:return I}},getNodeNameForTarget:function(I){return I?I==window?"#window":I==screen?"#screen":I&&I.nodeName?I.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function tb(I){var $=kt(I)+1,M=fm($);return ut(I,M,$),M}function rb(I,$,M,q){var me=hm(),he=Sc(12),fe=0;$&&(fe=tb($)),o()[he>>2]=fe,o()[he+4>>2]=M,o()[he+8>>2]=q,Nb(I,657457152,0,fe,he),Tc(me)}function nb(I,$,M,q){$=$?Re($):"",rb(I,$,M,q)}function ob(I){return I>2?Re(I):I}var sb=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function ib(I){I=ob(I);var $=sb[I]||(typeof document!="undefined"?document.querySelector(I):void 0);return $}function lm(I){return ib(I)}function $h(I,$,M){var q=lm(I);if(!q)return-4;if(q.canvasSharedPtr&&(o()[q.canvasSharedPtr>>2]=$,o()[q.canvasSharedPtr+4>>2]=M),q.offscreenCanvas||!q.controlTransferredOffscreen){q.offscreenCanvas&&(q=q.offscreenCanvas);var me=!1;if(q.GLctxObject&&q.GLctxObject.GLctx){var he=q.GLctxObject.GLctx.getParameter(2978);me=he[0]===0&&he[1]===0&&he[2]===q.width&&he[3]===q.height}q.width=$,q.height=M,me&&q.GLctxObject.GLctx.viewport(0,0,$,M)}else if(q.canvasSharedPtr){var fe=o()[q.canvasSharedPtr+8>>2];return nb(fe,I,$,M),1}else return-4;return 0}function Rh(I,$,M){return x?Ka(2,1,I,$,M):$h(I,$,M)}function ab(I,$,M){var q=lm(I);return q?$h(I,$,M):Rh(I,$,M)}function lb(I){I=I|0}function ub(I,$){I=I|0,$=$|0}function cb(I){var $=I.getExtension("ANGLE_instanced_arrays");if($)return I.vertexAttribDivisor=function(M,q){$.vertexAttribDivisorANGLE(M,q)},I.drawArraysInstanced=function(M,q,me,he){$.drawArraysInstancedANGLE(M,q,me,he)},I.drawElementsInstanced=function(M,q,me,he,fe){$.drawElementsInstancedANGLE(M,q,me,he,fe)},1}function pb(I){var $=I.getExtension("OES_vertex_array_object");if($)return I.createVertexArray=function(){return $.createVertexArrayOES()},I.deleteVertexArray=function(M){$.deleteVertexArrayOES(M)},I.bindVertexArray=function(M){$.bindVertexArrayOES(M)},I.isVertexArray=function(M){return $.isVertexArrayOES(M)},1}function mb(I){var $=I.getExtension("WEBGL_draw_buffers");if($)return I.drawBuffers=function(M,q){$.drawBuffersWEBGL(M,q)},1}var rt={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},currentContext:null,offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,init:function(){for(var I=new Float32Array(rt.MINI_TEMP_BUFFER_SIZE),$=0;$<rt.MINI_TEMP_BUFFER_SIZE;$++)rt.miniTempBufferFloatViews[$]=I.subarray(0,$+1);for(var M=new Int32Array(rt.MINI_TEMP_BUFFER_SIZE),$=0;$<rt.MINI_TEMP_BUFFER_SIZE;$++)rt.miniTempBufferIntViews[$]=M.subarray(0,$+1)},recordError:function($){rt.lastError||(rt.lastError=$)},getNewId:function(I){for(var $=rt.counter++,M=I.length;M<$;M++)I[M]=null;return $},MINI_TEMP_BUFFER_SIZE:256,miniTempBufferFloatViews:[0],miniTempBufferIntViews:[0],getSource:function(I,$,M,q){for(var me="",he=0;he<$;++he){var fe=q?o()[q+he*4>>2]:-1;me+=Re(o()[M+he*4>>2],fe<0?void 0:fe)}return me},createContext:function(I,$){var M=I.getContext("webgl",$);if(!M)return 0;var q=rt.registerContext(M,$);return q},registerContext:function(I,$){var M=fm(8);o()[M+4>>2]=Us();var q={handle:M,attributes:$,version:$.majorVersion,GLctx:I};return I.canvas&&(I.canvas.GLctxObject=q),rt.contexts[M]=q,(typeof $.enableExtensionsByDefault=="undefined"||$.enableExtensionsByDefault)&&rt.initExtensions(q),M},makeContextCurrent:function(I){return rt.currentContext=rt.contexts[I],i.ctx=Xa=rt.currentContext&&rt.currentContext.GLctx,!(I&&!Xa)},getContext:function(I){return rt.contexts[I]},deleteContext:function(I){rt.currentContext===rt.contexts[I]&&(rt.currentContext=null),typeof Je=="object"&&Je.removeAllHandlersOnTarget(rt.contexts[I].GLctx.canvas),rt.contexts[I]&&rt.contexts[I].GLctx.canvas&&(rt.contexts[I].GLctx.canvas.GLctxObject=void 0),dm(rt.contexts[I].handle),rt.contexts[I]=null},initExtensions:function(I){if(I||(I=rt.currentContext),!I.initExtensionsDone){I.initExtensionsDone=!0;var $=I.GLctx;cb($),pb($),mb($),$.disjointTimerQueryExt=$.getExtension("EXT_disjoint_timer_query");var M=["OES_texture_float","OES_texture_half_float","OES_standard_derivatives","OES_vertex_array_object","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","OES_element_index_uint","EXT_texture_filter_anisotropic","EXT_frag_depth","WEBGL_draw_buffers","ANGLE_instanced_arrays","OES_texture_float_linear","OES_texture_half_float_linear","EXT_blend_minmax","EXT_shader_texture_lod","EXT_texture_norm16","WEBGL_compressed_texture_pvrtc","EXT_color_buffer_half_float","WEBGL_color_buffer_float","EXT_sRGB","WEBGL_compressed_texture_etc1","EXT_disjoint_timer_query","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_astc","EXT_color_buffer_float","WEBGL_compressed_texture_s3tc_srgb","EXT_disjoint_timer_query_webgl2","WEBKIT_WEBGL_compressed_texture_pvrtc"],q=$.getSupportedExtensions()||[];q.forEach(function(me){M.indexOf(me)!=-1&&$.getExtension(me)})}},populateUniformTable:function(I){for(var $=rt.programs[I],M=rt.programInfos[I]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},q=M.uniforms,me=Xa.getProgramParameter($,35718),he=0;he<me;++he){var fe=Xa.getActiveUniform($,he),Te=fe.name;M.maxUniformLength=Math.max(M.maxUniformLength,Te.length+1),Te.slice(-1)=="]"&&(Te=Te.slice(0,Te.lastIndexOf("[")));var mt=Xa.getUniformLocation($,Te);if(mt){var mr=rt.getNewId(rt.uniforms);q[Te]=[fe.size,mr],rt.uniforms[mr]=mt;for(var Dr=1;Dr<fe.size;++Dr){var Ec=Te+"["+Dr+"]";mt=Xa.getUniformLocation($,Ec),mr=rt.getNewId(rt.uniforms),rt.uniforms[mr]=mt}}}}},fb=["default","low-power","high-performance"];function db(I,$){var M={},q=$>>2;M.alpha=!!o()[q+(0>>2)],M.depth=!!o()[q+(4>>2)],M.stencil=!!o()[q+(8>>2)],M.antialias=!!o()[q+(12>>2)],M.premultipliedAlpha=!!o()[q+(16>>2)],M.preserveDrawingBuffer=!!o()[q+(20>>2)];var me=o()[q+(24>>2)];M.powerPreference=fb[me],M.failIfMajorPerformanceCaveat=!!o()[q+(28>>2)],M.majorVersion=o()[q+(32>>2)],M.minorVersion=o()[q+(36>>2)],M.enableExtensionsByDefault=o()[q+(40>>2)],M.explicitSwapControl=o()[q+(44>>2)],M.proxyContextToMainThread=o()[q+(48>>2)],M.renderViaOffscreenBackBuffer=o()[q+(52>>2)];var he=lm(I);if(!he)return-4;if(M.explicitSwapControl)return-1;var fe=rt.createContext(he,M);return fe}function hb(I,$){return db(I,$)}var Ml={splitPath:function(I){var $=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return $.exec(I).slice(1)},normalizeArray:function(I,$){for(var M=0,q=I.length-1;q>=0;q--){var me=I[q];me==="."?I.splice(q,1):me===".."?(I.splice(q,1),M++):M&&(I.splice(q,1),M--)}if($)for(;M;M--)I.unshift("..");return I},normalize:function(I){var $=I.charAt(0)==="/",M=I.substr(-1)==="/";return I=Ml.normalizeArray(I.split("/").filter(function(q){return!!q}),!$).join("/"),!I&&!$&&(I="."),I&&M&&(I+="/"),($?"/":"")+I},dirname:function(I){var $=Ml.splitPath(I),M=$[0],q=$[1];return!M&&!q?".":(q&&(q=q.substr(0,q.length-1)),M+q)},basename:function(I){if(I==="/")return"/";var $=I.lastIndexOf("/");return $===-1?I:I.substr($+1)},extname:function(I){return Ml.splitPath(I)[3]},join:function(){var I=Array.prototype.slice.call(arguments,0);return Ml.normalize(I.join("/"))},join2:function(I,$){return Ml.normalize(I+"/"+$)}},Nc={mappings:{},buffers:[null,[],[]],printChar:function(I,$){var M=Nc.buffers[I];$===0||$===10?((I===1?G:j)($e(M,0)),M.length=0):M.push($)},varargs:void 0,get:function(){Nc.varargs+=4;var I=o()[Nc.varargs-4>>2];return I},getStr:function(I){var $=Re(I);return $},get64:function(I,$){return I}};function Fh(I){return x?Ka(3,1,I):0}function Oh(I,$,M,q,me){if(x)return Ka(4,1,I,$,M,q,me)}function Ph(I,$,M,q){if(x)return Ka(5,1,I,$,M,q);for(var me=0,he=0;he<M;he++){for(var fe=o()[$+he*8>>2],Te=o()[$+(he*8+4)>>2],mt=0;mt<Te;mt++)Nc.printChar(I,n()[fe+mt]);me+=Te}return o()[q>>2]=me,0}function gb(I){var $=_e.exitHandlers.pop();I&&$()}function xb(I,$){_e.exitHandlers===null&&(_e.exitHandlers=[]),_e.exitHandlers.push(function(){xI(I,$)})}function Mh(I){if(x)throw"Internal Error! _spawn_thread() can only ever be called from main application thread!";var $=_e.getNewWorker();if($.pthread!==void 0)throw"Internal error!";if(!I.pthread_ptr)throw"Internal error, no pthread ptr!";_e.runningWorkers.push($);for(var M=fm(128*4),q=0;q<128;++q)o()[M+q*4>>2]=0;var me=I.stackBase+I.stackSize,he=_e.pthreads[I.pthread_ptr]={worker:$,stackBase:I.stackBase,stackSize:I.stackSize,allocatedOwnStack:I.allocatedOwnStack,thread:I.pthread_ptr,threadInfoStruct:I.pthread_ptr},fe=he.threadInfoStruct>>2;Atomics.store(s(),fe+(0>>2),0),Atomics.store(s(),fe+(4>>2),0),Atomics.store(s(),fe+(8>>2),0),Atomics.store(s(),fe+(68>>2),I.detached),Atomics.store(s(),fe+(104>>2),M),Atomics.store(s(),fe+(48>>2),0),Atomics.store(s(),fe+(40>>2),he.threadInfoStruct),Atomics.store(s(),fe+(44>>2),42),Atomics.store(s(),fe+(108>>2),I.stackSize),Atomics.store(s(),fe+(84>>2),I.stackSize),Atomics.store(s(),fe+(80>>2),me),Atomics.store(s(),fe+(108+8>>2),me),Atomics.store(s(),fe+(108+12>>2),I.detached),Atomics.store(s(),fe+(108+20>>2),I.schedPolicy),Atomics.store(s(),fe+(108+24>>2),I.schedPrio);var Te=pI(),mt=Te+40;Atomics.store(s(),fe+(176>>2),mt),$.pthread=he;var mr={cmd:"run",start_routine:I.startRoutine,arg:I.arg,threadInfoStruct:I.pthread_ptr,selfThreadId:I.pthread_ptr,parentThreadId:I.parent_pthread_ptr,stackBase:I.stackBase,stackSize:I.stackSize};$.runPthread=function(){mr.time=performance.now(),$.postMessage(mr,I.transferList)},$.loaded&&($.runPthread(),delete $.runPthread)}function yb(I,$,M){if(!$&&!M)return am.EINVAL;if(!I)return j("pthread_getschedparam called with a null thread pointer!"),am.ESRCH;var q=o()[I+12>>2];if(q!==I)return j("pthread_getschedparam attempted on thread "+I+", which does not point to a valid thread, or does not exist anymore!"),am.ESRCH;var me=Atomics.load(s(),I+108+20>>2),he=Atomics.load(s(),I+108+24>>2);return $&&(o()[$>>2]=me),M&&(o()[M>>2]=he),0}function Us(){return Eh|0}i._pthread_self=Us;function bb(I,$,M,q){if(typeof SharedArrayBuffer=="undefined")return j("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!I)return j("pthread_create called with a null thread pointer!"),28;var me=[],he=0;if(x&&(me.length===0||he))return hI(687865856,I,$,M,q);if(he)return he;var fe=0,Te=0,mt=0,mr=0,Dr=0;if($){fe=o()[$>>2],fe+=81920,Te=o()[$+8>>2],mt=o()[$+12>>2]!==0;var Ec=o()[$+16>>2]===0;if(Ec){var xm=o()[$+20>>2],gn=o()[$+24>>2],Za=_e.currentProxiedOperationCallerThread?_e.currentProxiedOperationCallerThread:Us();yb(Za,$+20,$+24),mr=o()[$+20>>2],Dr=o()[$+24>>2],o()[$+20>>2]=xm,o()[$+24>>2]=gn}else mr=o()[$+20>>2],Dr=o()[$+24>>2]}else fe=2097152;var ym=Te==0;ym?Te=mI(16,fe):(Te-=fe,ge(Te>0));for(var Ac=fm(232),Tb=0;Tb<232>>2;++Tb)s()[(Ac>>2)+Tb]=0;o()[I>>2]=Ac,o()[Ac+12>>2]=Ac;var bI=Ac+156;o()[bI>>2]=bI;var Eb={stackBase:Te,stackSize:fe,allocatedOwnStack:ym,schedPolicy:mr,schedPrio:Dr,detached:mt,startRoutine:M,pthread_ptr:Ac,parent_pthread_ptr:Us(),arg:q,transferList:me};return x?(Eb.cmd="spawnThread",postMessage(Eb,me)):Mh(Eb),0}function wb(I){return I=+I,I>=0?+Iy(I+.5):+_c(I-.5)}function Lh(I){if(x)return Ka(6,1,I);switch(I){case 30:return 16384;case 85:var $=2147483648;return $/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:case 79:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return Vy(28),-1}x?_e.initWorker():_e.initMainThreadBlock();var Xa;rt.init();var _b=[null,Gy,Rh,Fh,Oh,Ph,Lh],kb={e:zy,r:By,w:jy,a:Wy,l:Uy,d:qy,c:Cc,h:Ol,g:Hy,x:Ky,q:Xy,B:Yy,t:Zy,A:eb,u:ab,k:lb,s:ub,v:hb,m:Fh,o:Oh,i:Ph,p:Ry,memory:X||i.wasmMemory,y:gb,z:xb,j:bb,b:Us,f:wb,n:Lh,table:re},zh=Dy();i.asm=zh;var Bh=i.___wasm_call_ctors=function(){return(Bh=i.___wasm_call_ctors=i.asm.C).apply(null,arguments)},Vh=i._init=function(){return(Vh=i._init=i.asm.D).apply(null,arguments)},um=i._register_tensor=function(){return(um=i._register_tensor=i.asm.E).apply(null,arguments)},Gh=i._dispose_data=function(){return(Gh=i._dispose_data=i.asm.F).apply(null,arguments)},Ll=i._dispose=function(){return(Ll=i._dispose=i.asm.G).apply(null,arguments)},cm=i._Abs=function(){return(cm=i._Abs=i.asm.H).apply(null,arguments)},vb=i._Add=function(){return(vb=i._Add=i.asm.I).apply(null,arguments)},Cb=i._AddN=function(){return(Cb=i._AddN=i.asm.J).apply(null,arguments)},pm=i._ArgMax=function(){return(pm=i._ArgMax=i.asm.K).apply(null,arguments)},jh=i._AvgPool=function(){return(jh=i._AvgPool=i.asm.L).apply(null,arguments)},Wh=i._BatchMatMul=function(){return(Wh=i._BatchMatMul=i.asm.M).apply(null,arguments)},H=i._Ceil=function(){return(H=i._Ceil=i.asm.N).apply(null,arguments)},oe=i._ClipByValue=function(){return(oe=i._ClipByValue=i.asm.O).apply(null,arguments)},be=i._Conv2D=function(){return(be=i._Conv2D=i.asm.P).apply(null,arguments)},Ke=i._Conv2DBackpropInput=function(){return(Ke=i._Conv2DBackpropInput=i.asm.Q).apply(null,arguments)},Xe=i._Cos=function(){return(Xe=i._Cos=i.asm.R).apply(null,arguments)},Ht=i._CropAndResize=function(){return(Ht=i._CropAndResize=i.asm.S).apply(null,arguments)},at=i._Cumsum=function(){return(at=i._Cumsum=i.asm.T).apply(null,arguments)},ot=i._DepthToSpace=function(){return(ot=i._DepthToSpace=i.asm.U).apply(null,arguments)},yr=i._DepthwiseConv2dNative=function(){return(yr=i._DepthwiseConv2dNative=i.asm.V).apply(null,arguments)},ta=i._Equal=function(){return(ta=i._Equal=i.asm.W).apply(null,arguments)},ra=i._Exp=function(){return(ra=i._Exp=i.asm.X).apply(null,arguments)},Uh=i._FlipLeftRight=function(){return(Uh=i._FlipLeftRight=i.asm.Y).apply(null,arguments)},mm=i._Floor=function(){return(mm=i._Floor=i.asm.Z).apply(null,arguments)},hn=i._FloorDiv=function(){return(hn=i._FloorDiv=i.asm._).apply(null,arguments)},Ya=i._FusedBatchNorm=function(){return(Ya=i._FusedBatchNorm=i.asm.$).apply(null,arguments)},qh=i._FusedConv2D=function(){return(qh=i._FusedConv2D=i.asm.aa).apply(null,arguments)},D3=i._FusedDepthwiseConv2D=function(){return(D3=i._FusedDepthwiseConv2D=i.asm.ba).apply(null,arguments)},$3=i._Gather=function(){return($3=i._Gather=i.asm.ca).apply(null,arguments)},R3=i._GatherNd=function(){return(R3=i._GatherNd=i.asm.da).apply(null,arguments)},F3=i._Greater=function(){return(F3=i._Greater=i.asm.ea).apply(null,arguments)},O3=i._GreaterEqual=function(){return(O3=i._GreaterEqual=i.asm.fa).apply(null,arguments)},P3=i._LeakyRelu=function(){return(P3=i._LeakyRelu=i.asm.ga).apply(null,arguments)},M3=i._Less=function(){return(M3=i._Less=i.asm.ha).apply(null,arguments)},L3=i._LessEqual=function(){return(L3=i._LessEqual=i.asm.ia).apply(null,arguments)},z3=i._Log=function(){return(z3=i._Log=i.asm.ja).apply(null,arguments)},B3=i._LogicalAnd=function(){return(B3=i._LogicalAnd=i.asm.ka).apply(null,arguments)},V3=i._Max=function(){return(V3=i._Max=i.asm.la).apply(null,arguments)},G3=i._MaxPool=function(){return(G3=i._MaxPool=i.asm.ma).apply(null,arguments)},j3=i._Maximum=function(){return(j3=i._Maximum=i.asm.na).apply(null,arguments)},W3=i._Mean=function(){return(W3=i._Mean=i.asm.oa).apply(null,arguments)},U3=i._Min=function(){return(U3=i._Min=i.asm.pa).apply(null,arguments)},q3=i._Minimum=function(){return(q3=i._Minimum=i.asm.qa).apply(null,arguments)},H3=i._Multiply=function(){return(H3=i._Multiply=i.asm.ra).apply(null,arguments)},K3=i._Neg=function(){return(K3=i._Neg=i.asm.sa).apply(null,arguments)},X3=i._NonMaxSuppressionV3=function(){return(X3=i._NonMaxSuppressionV3=i.asm.ta).apply(null,arguments)},Y3=i._NonMaxSuppressionV4=function(){return(Y3=i._NonMaxSuppressionV4=i.asm.ua).apply(null,arguments)},Z3=i._NonMaxSuppressionV5=function(){return(Z3=i._NonMaxSuppressionV5=i.asm.va).apply(null,arguments)},J3=i._NotEqual=function(){return(J3=i._NotEqual=i.asm.wa).apply(null,arguments)},Q3=i._OneHot=function(){return(Q3=i._OneHot=i.asm.xa).apply(null,arguments)},eB=i._PadV2=function(){return(eB=i._PadV2=i.asm.ya).apply(null,arguments)},tB=i._Pow=function(){return(tB=i._Pow=i.asm.za).apply(null,arguments)},rB=i._Prelu=function(){return(rB=i._Prelu=i.asm.Aa).apply(null,arguments)},nB=i._Prod=function(){return(nB=i._Prod=i.asm.Ba).apply(null,arguments)},oB=i._RealDiv=function(){return(oB=i._RealDiv=i.asm.Ca).apply(null,arguments)},sB=i._Relu=function(){return(sB=i._Relu=i.asm.Da).apply(null,arguments)},iB=i._Relu6=function(){return(iB=i._Relu6=i.asm.Ea).apply(null,arguments)},aB=i._ResizeBilinear=function(){return(aB=i._ResizeBilinear=i.asm.Fa).apply(null,arguments)},lB=i._Reverse=function(){return(lB=i._Reverse=i.asm.Ga).apply(null,arguments)},uB=i._RotateWithOffset=function(){return(uB=i._RotateWithOffset=i.asm.Ha).apply(null,arguments)},cB=i._Round=function(){return(cB=i._Round=i.asm.Ia).apply(null,arguments)},pB=i._Rsqrt=function(){return(pB=i._Rsqrt=i.asm.Ja).apply(null,arguments)},mB=i._ScatterNd=function(){return(mB=i._ScatterNd=i.asm.Ka).apply(null,arguments)},fB=i._SelectV2=function(){return(fB=i._SelectV2=i.asm.La).apply(null,arguments)},dB=i._Sigmoid=function(){return(dB=i._Sigmoid=i.asm.Ma).apply(null,arguments)},hB=i._Sin=function(){return(hB=i._Sin=i.asm.Na).apply(null,arguments)},gB=i._Softmax=function(){return(gB=i._Softmax=i.asm.Oa).apply(null,arguments)},xB=i._Sqrt=function(){return(xB=i._Sqrt=i.asm.Pa).apply(null,arguments)},yB=i._Square=function(){return(yB=i._Square=i.asm.Qa).apply(null,arguments)},bB=i._SquaredDifference=function(){return(bB=i._SquaredDifference=i.asm.Ra).apply(null,arguments)},wB=i._Step=function(){return(wB=i._Step=i.asm.Sa).apply(null,arguments)},_B=i._StridedSlice=function(){return(_B=i._StridedSlice=i.asm.Ta).apply(null,arguments)},kB=i._Sub=function(){return(kB=i._Sub=i.asm.Ua).apply(null,arguments)},vB=i._Sum=function(){return(vB=i._Sum=i.asm.Va).apply(null,arguments)},CB=i._Tanh=function(){return(CB=i._Tanh=i.asm.Wa).apply(null,arguments)},IB=i._Tile=function(){return(IB=i._Tile=i.asm.Xa).apply(null,arguments)},NB=i._TopK=function(){return(NB=i._TopK=i.asm.Ya).apply(null,arguments)},SB=i._Transpose=function(){return(SB=i._Transpose=i.asm.Za).apply(null,arguments)},TB=i.__FusedMatMul=function(){return(TB=i.__FusedMatMul=i.asm._a).apply(null,arguments)},fm=i._malloc=function(){return(fm=i._malloc=i.asm.$a).apply(null,arguments)},dm=i._free=function(){return(dm=i._free=i.asm.ab).apply(null,arguments)},cI=i.___errno_location=function(){return(cI=i.___errno_location=i.asm.bb).apply(null,arguments)},pI=i._emscripten_get_global_libc=function(){return(pI=i._emscripten_get_global_libc=i.asm.cb).apply(null,arguments)},EB=i.___em_js__initPthreadsJS=function(){return(EB=i.___em_js__initPthreadsJS=i.asm.db).apply(null,arguments)},mI=i._memalign=function(){return(mI=i._memalign=i.asm.eb).apply(null,arguments)},fI=i.___pthread_tsd_run_dtors=function(){return(fI=i.___pthread_tsd_run_dtors=i.asm.fb).apply(null,arguments)},Ib=i._emscripten_main_thread_process_queued_calls=function(){return(Ib=i._emscripten_main_thread_process_queued_calls=i.asm.gb).apply(null,arguments)},AB=i._emscripten_current_thread_process_queued_calls=function(){return(AB=i._emscripten_current_thread_process_queued_calls=i.asm.hb).apply(null,arguments)},dI=i._emscripten_register_main_browser_thread_id=function(){return(dI=i._emscripten_register_main_browser_thread_id=i.asm.ib).apply(null,arguments)},DB=i._emscripten_main_browser_thread_id=function(){return(DB=i._emscripten_main_browser_thread_id=i.asm.jb).apply(null,arguments)},$B=i._emscripten_async_run_in_main_thread=function(){return($B=i._emscripten_async_run_in_main_thread=i.asm.kb).apply(null,arguments)},RB=i._emscripten_sync_run_in_main_thread=function(){return(RB=i._emscripten_sync_run_in_main_thread=i.asm.lb).apply(null,arguments)},FB=i._emscripten_sync_run_in_main_thread_0=function(){return(FB=i._emscripten_sync_run_in_main_thread_0=i.asm.mb).apply(null,arguments)},OB=i._emscripten_sync_run_in_main_thread_1=function(){return(OB=i._emscripten_sync_run_in_main_thread_1=i.asm.nb).apply(null,arguments)},PB=i._emscripten_sync_run_in_main_thread_2=function(){return(PB=i._emscripten_sync_run_in_main_thread_2=i.asm.ob).apply(null,arguments)},MB=i._emscripten_sync_run_in_main_thread_xprintf_varargs=function(){return(MB=i._emscripten_sync_run_in_main_thread_xprintf_varargs=i.asm.pb).apply(null,arguments)},LB=i._emscripten_sync_run_in_main_thread_3=function(){return(LB=i._emscripten_sync_run_in_main_thread_3=i.asm.qb).apply(null,arguments)},hI=i._emscripten_sync_run_in_main_thread_4=function(){return(hI=i._emscripten_sync_run_in_main_thread_4=i.asm.rb).apply(null,arguments)},zB=i._emscripten_sync_run_in_main_thread_5=function(){return(zB=i._emscripten_sync_run_in_main_thread_5=i.asm.sb).apply(null,arguments)},BB=i._emscripten_sync_run_in_main_thread_6=function(){return(BB=i._emscripten_sync_run_in_main_thread_6=i.asm.tb).apply(null,arguments)},VB=i._emscripten_sync_run_in_main_thread_7=function(){return(VB=i._emscripten_sync_run_in_main_thread_7=i.asm.ub).apply(null,arguments)},gI=i._emscripten_run_in_main_runtime_thread_js=function(){return(gI=i._emscripten_run_in_main_runtime_thread_js=i.asm.vb).apply(null,arguments)},Nb=i._emscripten_async_queue_on_thread_=function(){return(Nb=i._emscripten_async_queue_on_thread_=i.asm.wb).apply(null,arguments)},GB=i._emscripten_tls_init=function(){return(GB=i._emscripten_tls_init=i.asm.xb).apply(null,arguments)},hm=i.stackSave=function(){return(hm=i.stackSave=i.asm.yb).apply(null,arguments)},Sc=i.stackAlloc=function(){return(Sc=i.stackAlloc=i.asm.zb).apply(null,arguments)},Tc=i.stackRestore=function(){return(Tc=i.stackRestore=i.asm.Ab).apply(null,arguments)},xI=i.dynCall_vi=function(){return(xI=i.dynCall_vi=i.asm.Bb).apply(null,arguments)},jB=i.dynCall_v=function(){return(jB=i.dynCall_v=i.asm.Cb).apply(null,arguments)},WB=i.dynCall_ii=function(){return(WB=i.dynCall_ii=i.asm.Db).apply(null,arguments)};i.asm=zh,i.cwrap=De,i.PThread=_e,i.PThread=_e,i._pthread_self=Us,i.wasmMemory=X,i.ExitStatus=yI;var gm;i.then=function(I){if(gm)I(i);else{var $=i.onRuntimeInitialized;i.onRuntimeInitialized=function(){$&&$(),I(i)}}return i};function yI(I){this.name="ExitStatus",this.message="Program terminated with exit("+I+")",this.status=I}Fl=function I(){gm||Sb(),gm||(Fl=I)};function Sb(I){if(I=I||c,Qi>0||(Wn(),Qi>0))return;function $(){gm||(gm=!0,i.calledRun=!0,!ae&&(Ih(),ky(),i.onRuntimeInitialized&&i.onRuntimeInitialized(),vy()))}i.setStatus?(i.setStatus("Running..."),setTimeout(function(){setTimeout(function(){i.setStatus("")},1),$()},1)):$()}if(i.run=Sb,i.preInit)for(typeof i.preInit=="function"&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();return x||(te=!0),x||Sb(),e}}();typeof mx=="object"&&typeof d0=="object"?d0.exports=h0:typeof define=="function"&&define.amd?define([],function(){return h0}):typeof mx=="object"&&(mx.WasmBackendModuleThreadedSimd=h0)});var WO=ht((fx,g0)=>{var x0=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};var t=typeof e!="undefined"?e:{},n={},o;for(o in t)t.hasOwnProperty(o)&&(n[o]=t[o]);var s=[],a="./this.program",i=function(H,oe){throw oe},l=!1,u=!1,c=!1,p=!1;l=typeof window=="object",u=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p=!l&&!c&&!u;var m="";function f(H){return t.locateFile?t.locateFile(H,m):m+H}var d,h,g,x,b,w;c?(u?m=Sp().dirname(m)+"/":m=__dirname+"/",d=function(oe,be){return b||(b=require("fs")),w||(w=Sp()),oe=w.normalize(oe),b.readFileSync(oe,be?null:"utf8")},g=function(oe){var be=d(oe,!0);return be.buffer||(be=new Uint8Array(be)),j(be.buffer),be},process.argv.length>1&&(a=process.argv[1].replace(/\\/g,"/")),s=process.argv.slice(2),process.on("uncaughtException",function(H){if(!(H instanceof cm))throw H}),process.on("unhandledRejection",Ji),i=function(H){process.exit(H)},t.inspect=function(){return"[Emscripten Module object]"}):p?(typeof read!="undefined"&&(d=function(oe){return read(oe)}),g=function(oe){var be;return typeof readbuffer=="function"?new Uint8Array(readbuffer(oe)):(be=read(oe,"binary"),j(typeof be=="object"),be)},typeof scriptArgs!="undefined"?s=scriptArgs:typeof arguments!="undefined"&&(s=arguments),typeof quit=="function"&&(i=function(H){quit(H)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(l||u)&&(u?m=self.location.href:document.currentScript&&(m=document.currentScript.src),r&&(m=r),m.indexOf("blob:")!==0?m=m.substr(0,m.lastIndexOf("/")+1):m="",d=function(oe){var be=new XMLHttpRequest;return be.open("GET",oe,!1),be.send(null),be.responseText},u&&(g=function(oe){var be=new XMLHttpRequest;return be.open("GET",oe,!1),be.responseType="arraybuffer",be.send(null),new Uint8Array(be.response)}),h=function(oe,be,Ke){var Xe=new XMLHttpRequest;Xe.open("GET",oe,!0),Xe.responseType="arraybuffer",Xe.onload=function(){if(Xe.status==200||Xe.status==0&&Xe.response){be(Xe.response);return}Ke()},Xe.onerror=Ke,Xe.send(null)},x=function(H){document.title=H});var _=t.print||console.log.bind(console),k=t.printErr||console.warn.bind(console);for(o in n)n.hasOwnProperty(o)&&(t[o]=n[o]);n=null,t.arguments&&(s=t.arguments),t.thisProgram&&(a=t.thisProgram),t.quit&&(i=t.quit);var E;t.wasmBinary&&(E=t.wasmBinary);var S;t.noExitRuntime&&(S=t.noExitRuntime),typeof WebAssembly!="object"&&k("no native wasm support detected");var R,F=new WebAssembly.Table({initial:153,maximum:153+0,element:"anyfunc"}),L=!1,G=0;function j(H,oe){H||Ji("Assertion failed: "+oe)}function U(H){var oe=t["_"+H];return j(oe,"Cannot call unknown function "+H+", make sure it is exported"),oe}function Y(H,oe,be,Ke,Xe){var Ht={string:function(hn){var Ya=0;if(hn!=null&&hn!==0){var qh=(hn.length<<2)+1;Ya=um(qh),ie(hn,Ya,qh)}return Ya},array:function(hn){var Ya=um(hn.length);return se(hn,Ya),Ya}};function at(hn){return oe==="string"?X(hn):oe==="boolean"?Boolean(hn):hn}var ot=U(H),yr=[],ta=0;if(Ke)for(var ra=0;ra<Ke.length;ra++){var Uh=Ht[be[ra]];Uh?(ta===0&&(ta=Vh()),yr[ra]=Uh(Ke[ra])):yr[ra]=Ke[ra]}var mm=ot.apply(null,yr);return mm=at(mm),ta!==0&&Gh(ta),mm}function K(H,oe,be,Ke){be=be||[];var Xe=be.every(function(at){return at==="number"}),Ht=oe!=="string";return Ht&&Xe&&!Ke?U(H):function(){return Y(H,oe,be,arguments,Ke)}}var Z=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function te(H,oe,be){for(var Ke=oe+be,Xe=oe;H[Xe]&&!(Xe>=Ke);)++Xe;if(Xe-oe>16&&H.subarray&&Z)return Z.decode(H.subarray(oe,Xe));for(var Ht="";oe<Xe;){var at=H[oe++];if(!(at&128)){Ht+=String.fromCharCode(at);continue}var ot=H[oe++]&63;if((at&224)==192){Ht+=String.fromCharCode((at&31)<<6|ot);continue}var yr=H[oe++]&63;if((at&240)==224?at=(at&15)<<12|ot<<6|yr:at=(at&7)<<18|ot<<12|yr<<6|H[oe++]&63,at<65536)Ht+=String.fromCharCode(at);else{var ta=at-65536;Ht+=String.fromCharCode(55296|ta>>10,56320|ta&1023)}}return Ht}function X(H,oe){return H?te(xe,H,oe):""}function re(H,oe,be,Ke){if(!(Ke>0))return 0;for(var Xe=be,Ht=be+Ke-1,at=0;at<H.length;++at){var ot=H.charCodeAt(at);if(ot>=55296&&ot<=57343){var yr=H.charCodeAt(++at);ot=65536+((ot&1023)<<10)|yr&1023}if(ot<=127){if(be>=Ht)break;oe[be++]=ot}else if(ot<=2047){if(be+1>=Ht)break;oe[be++]=192|ot>>6,oe[be++]=128|ot&63}else if(ot<=65535){if(be+2>=Ht)break;oe[be++]=224|ot>>12,oe[be++]=128|ot>>6&63,oe[be++]=128|ot&63}else{if(be+3>=Ht)break;oe[be++]=240|ot>>18,oe[be++]=128|ot>>12&63,oe[be++]=128|ot>>6&63,oe[be++]=128|ot&63}}return oe[be]=0,be-Xe}function ie(H,oe,be){return re(H,xe,oe,be)}function se(H,oe){ae.set(H,oe)}var pe,ae,xe,ge,we,ke,De,$e,Re;function qe(H){pe=H,t.HEAP8=ae=new Int8Array(H),t.HEAP16=ge=new Int16Array(H),t.HEAP32=ke=new Int32Array(H),t.HEAPU8=xe=new Uint8Array(H),t.HEAPU16=we=new Uint16Array(H),t.HEAPU32=De=new Uint32Array(H),t.HEAPF32=$e=new Float32Array(H),t.HEAPF64=Re=new Float64Array(H)}var ut=t.INITIAL_MEMORY||16777216;function kt(H){for(;H.length>0;){var oe=H.shift();if(typeof oe=="function"){oe(t);continue}var be=oe.func;typeof be=="number"?oe.arg===void 0?t.dynCall_v(be):t.dynCall_vi(be,oe.arg):be(oe.arg===void 0?null:oe.arg)}}var vt=[],pt=[],Ct=[],He=[],Ot=!1,mn=!1;function Jt(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)dn(t.preRun.shift());kt(vt)}function fn(){Ot=!0,kt(pt)}function _r(){kt(Ct)}function Gn(){mn=!0}function Jr(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)kr(t.postRun.shift());kt(He)}function dn(H){vt.unshift(H)}function kr(H){He.unshift(H)}var Sn=Math.ceil,jn=Math.floor,Qr=0,ss=null,Tn=null;function wc(H){Qr++,t.monitorRunDependencies&&t.monitorRunDependencies(Qr)}function is(H){if(Qr--,t.monitorRunDependencies&&t.monitorRunDependencies(Qr),Qr==0&&(ss!==null&&(clearInterval(ss),ss=null),Tn)){var oe=Tn;Tn=null,oe()}}t.preloadedImages={},t.preloadedAudios={};function Ji(H){throw t.onAbort&&t.onAbort(H),H+="",_(H),k(H),L=!0,G=1,H="abort("+H+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(H)}function $l(H,oe){return String.prototype.startsWith?H.startsWith(oe):H.indexOf(oe)===0}var _y="data:application/octet-stream;base64,";function nm(H){return $l(H,_y)}var Ch="file://";function om(H){return $l(H,Ch)}var Wn="tfjs-backend-wasm.wasm";nm(Wn)||(Wn=f(Wn));function Ih(){try{if(E)return new Uint8Array(E);if(g)return g(Wn);throw"both async and sync fetching of the wasm failed"}catch(H){Ji(H)}}function ky(){return!E&&(l||u)&&typeof fetch=="function"&&!om(Wn)?fetch(Wn,{credentials:"same-origin"}).then(function(H){if(!H.ok)throw"failed to load wasm binary file at '"+Wn+"'";return H.arrayBuffer()}).catch(function(){return Ih()}):new Promise(function(H,oe){H(Ih())})}function vy(){var H={env:ea,wasi_snapshot_preview1:ea};function oe(at,ot){var yr=at.exports;t.asm=yr,R=yr.memory,qe(R.buffer),is("wasm-instantiate")}wc("wasm-instantiate");function be(at){oe(at.instance)}function Ke(at){return ky().then(function(ot){return WebAssembly.instantiate(ot,H)}).then(at,function(ot){k("failed to asynchronously prepare wasm: "+ot),Ji(ot)})}function Xe(){if(!E&&typeof WebAssembly.instantiateStreaming=="function"&&!nm(Wn)&&!om(Wn)&&typeof fetch=="function")fetch(Wn,{credentials:"same-origin"}).then(function(at){var ot=WebAssembly.instantiateStreaming(at,H);return ot.then(be,function(yr){k("wasm streaming compile failed: "+yr),k("falling back to ArrayBuffer instantiation"),Ke(be)})});else return Ke(be)}if(t.instantiateWasm)try{var Ht=t.instantiateWasm(H,oe);return Ht}catch(at){return k("Module.instantiateWasm callback failed with error: "+at),!1}return Xe(),{}}pt.push();function Cy(H){qe(R.buffer)}var Rl={splitPath:function(H){var oe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return oe.exec(H).slice(1)},normalizeArray:function(H,oe){for(var be=0,Ke=H.length-1;Ke>=0;Ke--){var Xe=H[Ke];Xe==="."?H.splice(Ke,1):Xe===".."?(H.splice(Ke,1),be++):be&&(H.splice(Ke,1),be--)}if(oe)for(;be;be--)H.unshift("..");return H},normalize:function(H){var oe=H.charAt(0)==="/",be=H.substr(-1)==="/";return H=Rl.normalizeArray(H.split("/").filter(function(Ke){return!!Ke}),!oe).join("/"),!H&&!oe&&(H="."),H&&be&&(H+="/"),(oe?"/":"")+H},dirname:function(H){var oe=Rl.splitPath(H),be=oe[0],Ke=oe[1];return!be&&!Ke?".":(Ke&&(Ke=Ke.substr(0,Ke.length-1)),be+Ke)},basename:function(H){if(H==="/")return"/";var oe=H.lastIndexOf("/");return oe===-1?H:H.substr(oe+1)},extname:function(H){return Rl.splitPath(H)[3]},join:function(){var H=Array.prototype.slice.call(arguments,0);return Rl.normalize(H.join("/"))},join2:function(H,oe){return Rl.normalize(H+"/"+oe)}},_c={mappings:{},buffers:[null,[],[]],printChar:function(H,oe){var be=_c.buffers[H];oe===0||oe===10?((H===1?_:k)(te(be,0)),be.length=0):be.push(oe)},varargs:void 0,get:function(){_c.varargs+=4;var H=ke[_c.varargs-4>>2];return H},getStr:function(H){var oe=X(H);return oe},get64:function(H,oe){return H}};function Iy(H){return 0}function Qi(H,oe,be,Ke,Xe){}function sm(H,oe,be,Ke){for(var Xe=0,Ht=0;Ht<be;Ht++){for(var at=ke[oe+Ht*8>>2],ot=ke[oe+(Ht*8+4)>>2],yr=0;yr<ot;yr++)_c.printChar(H,xe[at+yr]);Xe+=ot}return ke[Ke>>2]=Xe,0}function Fl(H){jh(H)}function Ny(H){Fl(H)}function Sy(H){return H=+H,H>=0?+jn(H+.5):+Sn(H-.5)}var ea={emscripten_notify_memory_growth:Cy,fd_close:Iy,fd_seek:Qi,fd_write:sm,proc_exit:Ny,roundf:Sy},im=vy();t.asm=im;var Ty=t._init=function(){return(Ty=t._init=t.asm.init).apply(null,arguments)},Nh=t._register_tensor=function(){return(Nh=t._register_tensor=t.asm.register_tensor).apply(null,arguments)},Ey=t._dispose_data=function(){return(Ey=t._dispose_data=t.asm.dispose_data).apply(null,arguments)},Sh=t._dispose=function(){return(Sh=t._dispose=t.asm.dispose).apply(null,arguments)},Un=t._Abs=function(){return(Un=t._Abs=t.asm.Abs).apply(null,arguments)},Th=t._Add=function(){return(Th=t._Add=t.asm.Add).apply(null,arguments)},Ay=t._AddN=function(){return(Ay=t._AddN=t.asm.AddN).apply(null,arguments)},Dy=t._ArgMax=function(){return(Dy=t._ArgMax=t.asm.ArgMax).apply(null,arguments)},$y=t._AvgPool=function(){return($y=t._AvgPool=t.asm.AvgPool).apply(null,arguments)},Ry=t._BatchMatMul=function(){return(Ry=t._BatchMatMul=t.asm.BatchMatMul).apply(null,arguments)},Eh=t._Ceil=function(){return(Eh=t._Ceil=t.asm.Ceil).apply(null,arguments)},Ah=t._ClipByValue=function(){return(Ah=t._ClipByValue=t.asm.ClipByValue).apply(null,arguments)},Dh=t._Conv2D=function(){return(Dh=t._Conv2D=t.asm.Conv2D).apply(null,arguments)},kc=t._Conv2DBackpropInput=function(){return(kc=t._Conv2DBackpropInput=t.asm.Conv2DBackpropInput).apply(null,arguments)},am=t._Cos=function(){return(am=t._Cos=t.asm.Cos).apply(null,arguments)},vc=t._CropAndResize=function(){return(vc=t._CropAndResize=t.asm.CropAndResize).apply(null,arguments)},Cc=t._Cumsum=function(){return(Cc=t._Cumsum=t.asm.Cumsum).apply(null,arguments)},Fy=t._DepthToSpace=function(){return(Fy=t._DepthToSpace=t.asm.DepthToSpace).apply(null,arguments)},Oy=t._DepthwiseConv2dNative=function(){return(Oy=t._DepthwiseConv2dNative=t.asm.DepthwiseConv2dNative).apply(null,arguments)},Py=t._Equal=function(){return(Py=t._Equal=t.asm.Equal).apply(null,arguments)},_e=t._Exp=function(){return(_e=t._Exp=t.asm.Exp).apply(null,arguments)},My=t._FlipLeftRight=function(){return(My=t._FlipLeftRight=t.asm.FlipLeftRight).apply(null,arguments)},Ly=t._Floor=function(){return(Ly=t._Floor=t.asm.Floor).apply(null,arguments)},zy=t._FloorDiv=function(){return(zy=t._FloorDiv=t.asm.FloorDiv).apply(null,arguments)},By=t._FusedBatchNorm=function(){return(By=t._FusedBatchNorm=t.asm.FusedBatchNorm).apply(null,arguments)},Ol=t._FusedConv2D=function(){return(Ol=t._FusedConv2D=t.asm.FusedConv2D).apply(null,arguments)},Vy=t._FusedDepthwiseConv2D=function(){return(Vy=t._FusedDepthwiseConv2D=t.asm.FusedDepthwiseConv2D).apply(null,arguments)},Gy=t._Gather=function(){return(Gy=t._Gather=t.asm.Gather).apply(null,arguments)},jy=t._GatherNd=function(){return(jy=t._GatherNd=t.asm.GatherNd).apply(null,arguments)},Wy=t._Greater=function(){return(Wy=t._Greater=t.asm.Greater).apply(null,arguments)},Uy=t._GreaterEqual=function(){return(Uy=t._GreaterEqual=t.asm.GreaterEqual).apply(null,arguments)},qy=t._LeakyRelu=function(){return(qy=t._LeakyRelu=t.asm.LeakyRelu).apply(null,arguments)},Hy=t._Less=function(){return(Hy=t._Less=t.asm.Less).apply(null,arguments)},Ky=t._LessEqual=function(){return(Ky=t._LessEqual=t.asm.LessEqual).apply(null,arguments)},Xy=t._Log=function(){return(Xy=t._Log=t.asm.Log).apply(null,arguments)},Yy=t._LogicalAnd=function(){return(Yy=t._LogicalAnd=t.asm.LogicalAnd).apply(null,arguments)},Ka=t._Max=function(){return(Ka=t._Max=t.asm.Max).apply(null,arguments)},Pl=t._MaxPool=function(){return(Pl=t._MaxPool=t.asm.MaxPool).apply(null,arguments)},Ic=t._Maximum=function(){return(Ic=t._Maximum=t.asm.Maximum).apply(null,arguments)},Zy=t._Mean=function(){return(Zy=t._Mean=t.asm.Mean).apply(null,arguments)},Jy=t._Min=function(){return(Jy=t._Min=t.asm.Min).apply(null,arguments)},Qy=t._Minimum=function(){return(Qy=t._Minimum=t.asm.Minimum).apply(null,arguments)},eb=t._Multiply=function(){return(eb=t._Multiply=t.asm.Multiply).apply(null,arguments)},Je=t._Neg=function(){return(Je=t._Neg=t.asm.Neg).apply(null,arguments)},tb=t._NonMaxSuppressionV3=function(){return(tb=t._NonMaxSuppressionV3=t.asm.NonMaxSuppressionV3).apply(null,arguments)},rb=t._NonMaxSuppressionV4=function(){return(rb=t._NonMaxSuppressionV4=t.asm.NonMaxSuppressionV4).apply(null,arguments)},nb=t._NonMaxSuppressionV5=function(){return(nb=t._NonMaxSuppressionV5=t.asm.NonMaxSuppressionV5).apply(null,arguments)},ob=t._NotEqual=function(){return(ob=t._NotEqual=t.asm.NotEqual).apply(null,arguments)},sb=t._OneHot=function(){return(sb=t._OneHot=t.asm.OneHot).apply(null,arguments)},ib=t._PadV2=function(){return(ib=t._PadV2=t.asm.PadV2).apply(null,arguments)},lm=t._Pow=function(){return(lm=t._Pow=t.asm.Pow).apply(null,arguments)},$h=t._Prelu=function(){return($h=t._Prelu=t.asm.Prelu).apply(null,arguments)},Rh=t._Prod=function(){return(Rh=t._Prod=t.asm.Prod).apply(null,arguments)},ab=t._RealDiv=function(){return(ab=t._RealDiv=t.asm.RealDiv).apply(null,arguments)},lb=t._Relu=function(){return(lb=t._Relu=t.asm.Relu).apply(null,arguments)},ub=t._Relu6=function(){return(ub=t._Relu6=t.asm.Relu6).apply(null,arguments)},cb=t._ResizeBilinear=function(){return(cb=t._ResizeBilinear=t.asm.ResizeBilinear).apply(null,arguments)},pb=t._Reverse=function(){return(pb=t._Reverse=t.asm.Reverse).apply(null,arguments)},mb=t._RotateWithOffset=function(){return(mb=t._RotateWithOffset=t.asm.RotateWithOffset).apply(null,arguments)},rt=t._Round=function(){return(rt=t._Round=t.asm.Round).apply(null,arguments)},fb=t._Rsqrt=function(){return(fb=t._Rsqrt=t.asm.Rsqrt).apply(null,arguments)},db=t._ScatterNd=function(){return(db=t._ScatterNd=t.asm.ScatterNd).apply(null,arguments)},hb=t._SelectV2=function(){return(hb=t._SelectV2=t.asm.SelectV2).apply(null,arguments)},Ml=t._Sigmoid=function(){return(Ml=t._Sigmoid=t.asm.Sigmoid).apply(null,arguments)},Nc=t._Sin=function(){return(Nc=t._Sin=t.asm.Sin).apply(null,arguments)},Fh=t._Softmax=function(){return(Fh=t._Softmax=t.asm.Softmax).apply(null,arguments)},Oh=t._Sqrt=function(){return(Oh=t._Sqrt=t.asm.Sqrt).apply(null,arguments)},Ph=t._Square=function(){return(Ph=t._Square=t.asm.Square).apply(null,arguments)},gb=t._SquaredDifference=function(){return(gb=t._SquaredDifference=t.asm.SquaredDifference).apply(null,arguments)},xb=t._Step=function(){return(xb=t._Step=t.asm.Step).apply(null,arguments)},Mh=t._StridedSlice=function(){return(Mh=t._StridedSlice=t.asm.StridedSlice).apply(null,arguments)},yb=t._Sub=function(){return(yb=t._Sub=t.asm.Sub).apply(null,arguments)},Us=t._Sum=function(){return(Us=t._Sum=t.asm.Sum).apply(null,arguments)},bb=t._Tanh=function(){return(bb=t._Tanh=t.asm.Tanh).apply(null,arguments)},wb=t._Tile=function(){return(wb=t._Tile=t.asm.Tile).apply(null,arguments)},Lh=t._TopK=function(){return(Lh=t._TopK=t.asm.TopK).apply(null,arguments)},Xa=t._Transpose=function(){return(Xa=t._Transpose=t.asm.Transpose).apply(null,arguments)},_b=t.__FusedMatMul=function(){return(_b=t.__FusedMatMul=t.asm._FusedMatMul).apply(null,arguments)},kb=t._malloc=function(){return(kb=t._malloc=t.asm.malloc).apply(null,arguments)},zh=t._free=function(){return(zh=t._free=t.asm.free).apply(null,arguments)},Bh=t.__start=function(){return(Bh=t.__start=t.asm._start).apply(null,arguments)},Vh=t.stackSave=function(){return(Vh=t.stackSave=t.asm.stackSave).apply(null,arguments)},um=t.stackAlloc=function(){return(um=t.stackAlloc=t.asm.stackAlloc).apply(null,arguments)},Gh=t.stackRestore=function(){return(Gh=t.stackRestore=t.asm.stackRestore).apply(null,arguments)};t.asm=im,t.cwrap=K;var Ll;t.then=function(H){if(Ll)H(t);else{var oe=t.onRuntimeInitialized;t.onRuntimeInitialized=function(){oe&&oe(),H(t)}}return t};function cm(H){this.name="ExitStatus",this.message="Program terminated with exit("+H+")",this.status=H}var vb=!1;Tn=function H(){Ll||pm(),Ll||(Tn=H)};function Cb(H){var oe=t.__start;try{oe();var be=0;jh(be,!0)}catch(Xe){if(Xe instanceof cm)return;if(Xe=="unwind"){S=!0;return}else{var Ke=Xe;Xe&&typeof Xe=="object"&&Xe.stack&&(Ke=[Xe,Xe.stack]),k("exception thrown: "+Ke),i(1,Xe)}}finally{vb=!0}}function pm(H){if(H=H||s,Qr>0||(Jt(),Qr>0))return;function oe(){Ll||(Ll=!0,t.calledRun=!0,!L&&(fn(),_r(),t.onRuntimeInitialized&&t.onRuntimeInitialized(),Wh&&Cb(H),Jr()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),oe()},1)):oe()}t.run=pm;function jh(H,oe){oe&&S&&H===0||(S||(L=!0,G=H,Gn(),t.onExit&&t.onExit(H)),i(H,new cm(H)))}if(t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();var Wh=!0;return t.noInitialRun&&(Wh=!1),S=!0,pm(),e}}();typeof fx=="object"&&typeof g0=="object"?g0.exports=x0:typeof define=="function"&&define.amd?define([],function(){return x0}):typeof fx=="object"&&(fx.WasmBackendModule=x0)});var Fz=ht((Rz,YC)=>{(function(r,e,t){function n(i){var l=this,u=a();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(i),l.s0<0&&(l.s0+=1),l.s1-=u(i),l.s1<0&&(l.s1+=1),l.s2-=u(i),l.s2<0&&(l.s2+=1),u=null}function o(i,l){return l.c=i.c,l.s0=i.s0,l.s1=i.s1,l.s2=i.s2,l}function s(i,l){var u=new n(i),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&o(c,u),p.state=function(){return o(u,{})}),p}function a(){var i=4022871197,l=function(u){u=String(u);for(var c=0;c<u.length;c++){i+=u.charCodeAt(c);var p=.02519603282416938*i;i=p>>>0,p-=i,p*=i,i=p>>>0,p-=i,i+=p*4294967296}return(i>>>0)*23283064365386963e-26};return l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(Rz,typeof YC=="object"&&YC,typeof define=="function"&&define)});var Pz=ht((Oz,ZC)=>{(function(r,e,t){function n(a){var i=this,l="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var c=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^c^c>>>8},a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(Oz,typeof ZC=="object"&&ZC,typeof define=="function"&&define)});var Lz=ht((Mz,JC)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(c^c<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,u==l.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(Mz,typeof JC=="object"&&JC,typeof define=="function"&&define)});var Bz=ht((zz,QC)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.x,c=i.i,p,m,f;return p=u[c],p^=p>>>7,m=p^p<<24,p=u[c+1&7],m^=p^p>>>10,p=u[c+3&7],m^=p^p>>>3,p=u[c+4&7],m^=p^p<<7,p=u[c+7&7],p=p^p<<13,m^=p^p<<9,u[c]=m,i.i=c+1&7,m};function l(u,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],u.x=f,u.i=0,p=256;p>0;--p)u.next()}l(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.x&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(zz,typeof QC=="object"&&QC,typeof define=="function"&&define)});var Gz=ht((Vz,eI)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.w,c=i.X,p=i.i,m,f;return i.w=u=u+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,i.i=p,f+(u^u>>>16)|0};function l(u,c){var p,m,f,d,h,g=[],x=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,x=Math.max(x,c.length)),f=0,d=-32;d<x;++d)c&&(m^=c.charCodeAt((d+32)%c.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,p=g[d&127]^=m+h,f=p==0?f+1:0);for(f>=128&&(g[(c&&c.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;u.w=h,u.X=g,u.i=f}l(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.X&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(Vz,typeof eI=="object"&&eI,typeof define=="function"&&define)});var Wz=ht((jz,tI)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.b,p=i.c,m=i.d,f=i.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,i.b=c=c<<20^c>>>12^p,i.c=p=p-m|0,i.d=m<<16^p>>>16^f,i.a=f-c|0},i.a=0,i.b=0,i.c=2654435769|0,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):l+=a;for(var u=0;u<l.length+20;u++)i.b^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(jz,typeof tI=="object"&&tI,typeof define=="function"&&define)});var qz=ht((Uz,fy)=>{(function(r,e,t){var n=256,o=6,s=52,a="random",i=t.pow(n,o),l=t.pow(2,s),u=l*2,c=n-1,p;function m(w,_,k){var E=[];_=_==!0?{entropy:!0}:_||{};var S=g(h(_.entropy?[w,b(e)]:w==null?x():w,3),E),R=new f(E),F=function(){for(var L=R.g(o),G=i,j=0;L<l;)L=(L+j)*n,G*=n,j=R.g(1);for(;L>=u;)L/=2,G/=2,j>>>=1;return(L+j)/G};return F.int32=function(){return R.g(4)|0},F.quick=function(){return R.g(4)/4294967296},F.double=F,g(b(R.S),e),(_.pass||k||function(L,G,j,U){return U&&(U.S&&d(U,R),L.state=function(){return d(R,{})}),j?(t[a]=L,G):L})(F,S,"global"in _?_.global:this==t,_.state)}function f(w){var _,k=w.length,E=this,S=0,R=E.i=E.j=0,F=E.S=[];for(k||(w=[k++]);S<n;)F[S]=S++;for(S=0;S<n;S++)F[S]=F[R=c&R+w[S%k]+(_=F[S])],F[R]=_;(E.g=function(L){for(var G,j=0,U=E.i,Y=E.j,K=E.S;L--;)G=K[U=c&U+1],j=j*n+K[c&(K[U]=K[Y=c&Y+G])+(K[Y]=G)];return E.i=U,E.j=Y,j})(n)}function d(w,_){return _.i=w.i,_.j=w.j,_.S=w.S.slice(),_}function h(w,_){var k=[],E=typeof w,S;if(_&&E=="object")for(S in w)try{k.push(h(w[S],_-1))}catch(R){}return k.length?k:E=="string"?w:w+"\0"}function g(w,_){for(var k=w+"",E,S=0;S<k.length;)_[c&S]=c&(E^=_[c&S]*19)+k.charCodeAt(S++);return b(_)}function x(){try{var w;return p&&(w=p.randomBytes)?w=w(n):(w=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(w)),b(w)}catch(E){var _=r.navigator,k=_&&_.plugins;return[+new Date,r,k,r.screen,b(e)]}}function b(w){return String.fromCharCode.apply(0,w)}if(g(t.random(),e),typeof fy=="object"&&fy.exports){fy.exports=m;try{p=gg()}catch(w){}}else typeof define=="function"&&define.amd?define(function(){return m}):t["seed"+a]=m})(typeof self!="undefined"?self:Uz,[],Math)});var rI=ht((aPt,Hz)=>{var zte=Fz(),Bte=Pz(),Vte=Lz(),Gte=Bz(),jte=Gz(),Wte=Wz(),bc=qz();bc.alea=zte;bc.xor128=Bte;bc.xorwow=Vte;bc.xorshift7=Gte;bc.xor4096=jte;bc.tychei=Wte;Hz.exports=bc});var _3=ht(()=>{});var wI="3.1.0";var _I="3.1.0";var kI="3.1.0";var vI="3.1.0";var CI="3.1.0";var JB=1e-7,QB=1e-4,Ja=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},qs=class{refCount(e){return qn("refCount")}incRef(e){return qn("incRef")}timerAvailable(){return!0}time(e){return qn("time")}read(e){return qn("read")}readSync(e){return qn("readSync")}numDataIds(){return qn("numDataIds")}disposeData(e,t){return qn("disposeData")}write(e,t,n){return qn("write")}move(e,t,n,o,s){return qn("move")}memory(){return qn("memory")}floatPrecision(){return qn("floatPrecision")}epsilon(){return this.floatPrecision()===32?JB:QB}dispose(){return qn("dispose")}};function qn(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function II(r){let e=r.length,t=0,n=0;for(;e>0;)n=Math.random()*e|0,e--,t=r[e],r[e]=r[n],r[n]=t}function eV(r,e){if(r.length!==e.length)throw Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,n,o,s=0;for(;t>0;)s=Math.random()*t|0,t--,n=r[t],o=e[t],r[t]=r[s],e[t]=e[s],r[s]=n,e[s]=o}function $c(r,e,t){return Math.max(r,Math.min(e,t))}function tV(r){return r%2==0?r:r+1}function rV(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function nV(r,e){let t=Math.random();return e*t+(1-t)*r}function oV(r,e){let t=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(e[n]);t+=o*o}return t}function A(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function St(r,e,t=""){A(Vr(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function En(r){A(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function as(r,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(r)||nr(r)&&!t)for(let n=0;n<r.length;++n)as(r[n],e,t);else e.push(r);return e}function ft(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function sV(r){return r.length===0}function Vr(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function st(r){return r%1==0}function iV(r){if(Math.tanh!=null)return Math.tanh(r);if(r===Infinity)return 1;if(r===-Infinity)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function aV(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function lV(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return II(e),e}function zl(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function uV(r,e=n=>0,t){return new Promise((n,o)=>{let s=0,a=()=>{if(r()){n();return}s++;let i=e(s);if(t!=null&&s>=t){o();return}setTimeout(a,i)};a()})}function cV(r,e){let t=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let o=r.slice();return o[n]=e/t,o}function Qt(r,e){let t=e.length;return r=r==null?e.map((n,o)=>o):[].concat(r),A(r.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),A(r.every(n=>st(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?t+n:n)}function Ab(r,e){let t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||o?null:Qt(e,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(t.push(r[i]),n.push(i)),s[a]<=i&&a++}r[i]!==1&&(t.push(r[i]),n.push(i))}return{newShape:t,keptDims:n}}function Db(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${r}`);return t}function $b(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function Rb(r,e){for(let t=0;t<r.length;t++){let n=r[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function Fb(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function pV(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function nr(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array}function Kh(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function Ob(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function ls(r){return typeof r=="string"||r instanceof String}function NI(r){return typeof r=="boolean"}function SI(r){return typeof r=="number"}function Rc(r){return Array.isArray(r)?Rc(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array?"int32":SI(r)?"float32":ls(r)?"string":NI(r)?"bool":"float32"}function Hs(r){return!!(r&&r.constructor&&r.call&&r.apply)}function Fc(r,e){for(let t=e;t<r;++t)if(r%t==0)return t;return r}function Ks(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*r[n+1];return t}function TI(r,e,t){let n=new Array;if(e.length===1){let o=e[0];for(let s=0;s<o;s++)n[s]=t[r+s]}else{let o=e[0],s=e.slice(1),a=s.reduce((i,l)=>i*l);for(let i=0;i<o;i++)n[i]=TI(r+i*a,s,t)}return n}function Bl(r,e){if(r.length===0)return e[0];let t=r.reduce((n,o)=>n*o);if(t===0)return[];if(t!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}.`);return TI(0,r,e)}function bm(r,e){let t=Oc(r,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function Oc(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function mV(r,e){let t=r.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return Bl(r,new Float32Array(t));if(e==="int32")return Bl(r,new Int32Array(t));if(e==="bool")return Bl(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function wm(r){r.forEach(e=>{A(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function fV(r,e,t){if(e===0)return 0;if(e===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=t[o]*r[o];return n}function dV(r,e,t){if(e===0)return[];if(e===1)return[r];let n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/t[o]),r-=n[o]*t[o];return n[n.length-1]=r,n}function _m(r){return r&&r.then&&typeof r.then=="function"}var EI="tfjsflags",Xh=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let o=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(_m(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=hV(this.global.location.search);EI in e&&e[EI].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=gV(o,s)})}};function hV(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(xV(e,n[0],n[1]),n.join("="))),e}function xV(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function gV(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function W(){return Pb}var Pb=null;function AI(r){Pb=r}var Mb;function Lb(){if(Mb==null){let r;if(typeof window!="undefined")r=window;else if(typeof global!="undefined")r=global;else if(typeof process!="undefined")r=process;else if(typeof self!="undefined")r=self;else throw new Error("Could not find a global object");Mb=r}return Mb}function yV(){let r=Lb();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function km(r,e){let t=yV();if(t.has(r))return t.get(r);{let n=e();return t.set(r,n),t.get(r)}}var us="Abs",Xs="Acos",Ys="Acosh",xn="Add",Hn="AddN",Vl="All",Gl="Any",Kn="ArgMax",na="ArgMin",Zs="Asin",Js="Asinh",Qs="Atan",ei="Atanh",ti="Atan2",Xn="AvgPool",jl="AvgPoolGrad",oa="AvgPool3D",Wl="AvgPool3DGrad",Yn="BatchMatMul",sa="BatchToSpaceND",Ul="Bincount",zb="BroadcastTo",An="Cast",Zn="Ceil",Dn="ClipByValue",ql="Complex",ia="ComplexAbs",cs="Concat",Jn="Conv2D",Hl="Conv2DBackpropFilter",Qn="Conv2DBackpropInput",aa="Conv3D",Kl="Conv3DBackpropFilterV2",Xl="Conv3DBackpropInputV2",eo="Cos",ri="Cosh",to="Cumsum",ni="CropAndResize",Yl="DenseBincount",oi="DepthToSpace",ro="DepthwiseConv2dNative",Zl="DepthwiseConv2dNativeBackpropFilter",Jl="DepthwiseConv2dNativeBackpropInput",Ql="Diag",la="Dilation2D",Pc="Dilation2DBackpropInput",Mc="Dilation2DBackpropFilter",no="RealDiv",si="Elu",eu="EluGrad",ii="Erf",ai="Equal",oo="Exp",ps="ExpandDims",li="Expm1",tu="FFT",ua="Fill",ui="FlipLeftRight",so="Floor",io="FloorDiv",ao="FusedBatchNorm",ms="GatherV2",ci="GatherNd",pi="Greater",lo="GreaterEqual",$n="Identity",ru="IFFT",nu="Imag",mi="IsFinite",fi="IsInf",di="IsNan",uo="LeakyRelu",hi="Less",gi="LessEqual",ou="LinSpace",co="Log",xi="Log1p",yi="LogicalAnd",Qa="LogicalNot",el="LogicalOr",Bb="LogSoftmax",ca="LRN",su="LRNGrad",po="Max",mo="Maximum",fo="MaxPool",iu="MaxPoolGrad",pa="MaxPool3D",au="MaxPool3DGrad",lu="MaxPoolWithArgmax",ho="Mean",go="Min",xo="Minimum",ma="MirrorPad",bi="Mod",uu="Multinomial",yo="Multiply",fs="Neg",wi="NotEqual",_i="NonMaxSuppressionV3",ki="NonMaxSuppressionV4",vi="NonMaxSuppressionV5",ds="OnesLike",bo="OneHot",hs="Pack",wo="PadV2",bV="Pool",_o="Pow",ko="Prelu",Ci="Prod",fa="Range",cu="Real",Ii="Reciprocal",vo="Relu",gs="Reshape",da="ResizeNearestNeighbor",pu="ResizeNearestNeighborGrad",Co="ResizeBilinear",mu="ResizeBilinearGrad",Io="Relu6",No="Reverse",So="Round",To="Rsqrt",Ni="ScatterNd",xs="Select",Si="Selu",ys="Slice",Eo="Sin",Ti="Sinh",Ei="Sign",Ao="Sigmoid",Ai="Softplus",Do="Sqrt",$o="Sum",ha="SpaceToBatchND",bs="SplitV",Ro="Softmax",Fo="SquaredDifference",ga="Square",Oo="Sub",fu="SparseToDense",Di="StridedSlice",$i="Tan",Po="Tanh",yn="Tile",Ri="TopK",Mo="Transpose",du="Unique",ws="Unpack",xa="UnsortedSegmentSum",_s="ZerosLike",Rn="Step",Lc="FromPixels",Fi="RotateWithOffset",ks="_FusedMatMul",vs="FusedConv2D",Cs="FusedDepthwiseConv2D";var zc=km("kernelRegistry",()=>new Map),vm=km("gradRegistry",()=>new Map);function Bc(r,e){let t=Vb(r,e);return zc.get(t)}function Yh(r){return vm.get(r)}function Cm(r){let e=zc.entries(),t=[];for(;;){let{done:n,value:o}=e.next();if(n)break;let[s,a]=o,[i]=s.split("_");i===r&&t.push(a)}return t}function tl(r){let{kernelName:e,backendName:t}=r,n=Vb(e,t);zc.has(n)&&console.warn(`The kernel '${e}' for backend '${t}' is already registered`),zc.set(n,r)}function Gb(r){let{kernelName:e}=r;vm.has(e)&&W().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),vm.set(e,r)}function wV(r,e){let t=Vb(r,e);if(!zc.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);zc.delete(t)}function _V(r){if(!vm.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);vm.delete(r)}function kV(r,e){Cm(r).forEach(n=>{let o=Object.assign({},n,{backendName:e});tl(o)})}function Vb(r,e){return`${e}_${r}`}var y={};Ye(y,{arraysEqual:()=>Vr,assert:()=>A,assertNonNegativeIntegerDimensions:()=>wm,assertNonNull:()=>En,assertShapesMatch:()=>St,bytesFromStringArray:()=>Ob,bytesPerElement:()=>Kh,checkConversionForErrors:()=>Rb,clamp:()=>$c,computeStrides:()=>Ks,createScalarValue:()=>vV,createShuffledIndices:()=>lV,decodeString:()=>Gc,distSquared:()=>oV,encodeString:()=>rl,fetch:()=>IV,flatten:()=>as,getArrayFromDType:()=>$b,getTypedArrayFromDType:()=>Db,hasEncodingLoss:()=>pV,indexToLoc:()=>dV,inferDtype:()=>Rc,inferFromImplicitShape:()=>cV,isBoolean:()=>NI,isFunction:()=>Hs,isInt:()=>st,isNumber:()=>SI,isPromise:()=>_m,isScalarShape:()=>sV,isString:()=>ls,isTypedArray:()=>nr,isValidDtype:()=>Fb,locToIndex:()=>fV,makeOnesTypedArray:()=>bm,makeZerosNestedTypedArray:()=>mV,makeZerosTypedArray:()=>Oc,nearestDivisor:()=>Fc,nearestLargerEven:()=>tV,now:()=>hu,parseAxisParam:()=>Qt,randUniform:()=>nV,repeatedTry:()=>uV,rightPad:()=>zl,shuffle:()=>II,shuffleCombo:()=>eV,sizeFromShape:()=>ft,sizeToSquarishShape:()=>aV,squeezeShape:()=>Ab,sum:()=>rV,tanh:()=>iV,toNestedArray:()=>Bl,toTypedArray:()=>Vc});function vV(r,e){return e==="string"?rl(r):Vc([r],e)}function CV(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function Vc(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=as(r)),W().getBool("DEBUG")&&Rb(r,e),CV(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let n=0;n<t.length;++n)Math.round(r[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function hu(){return W().platform.now()}function IV(r,e){return W().platform.fetch(r,e)}function rl(r,e="utf-8"){return e=e||"utf-8",W().platform.encode(r,e)}function Gc(r,e="utf-8"){return e=e||"utf-8",W().platform.decode(r,e)}var jb=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new DI)}profileKernel(e,t,n){let o,s=()=>{o=n()},a,i=hu();if(this.backendTimer.timerAvailable()?a=this.backendTimer.time(s):(s(),o.map(u=>u.dataSync()),a=Promise.resolve({kernelMs:hu()-i})),W().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<o.length;u++){let c=o[u];c.data().then(p=>{NV(p,c.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:o,inputs:s,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),o,a]).then(l=>{this.logger.logKernelProfile(t,i,l[0],l[1],s,l[2])})})}};function NV(r,e,t){if(e!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}var DI=class{logKernelProfile(e,t,n,o,s,a){let i=typeof o=="number"?zl(`${o}ms`,9):o.error,l=zl(e,25),u=t.rank,c=t.size,p=zl(t.shape.toString(),14),m="";for(let f in s){let d=s[f];if(d!=null){let h=d.shape||t.shape,g=h.length;m+=`${f}: ${g}D ${g>0?h:""} `}}console.log(`%c${l}	%c${i}	%c${u}D ${p}	%c${c}	%c${m}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function $I(r,e,t){let n={},o={};for(let l=0;l<e.length;l++)n[e[l].id]=!0;for(let l=0;l<r.length;l++){let u=r[l],c=u.inputs;for(let p in c){let m=c[p],f=!1;for(let d=0;d<e.length;d++)if(n[m.id]){u.outputs.forEach(h=>n[h.id]=!0),f=!0,o[u.id]=!0;break}if(f)break}}let s={};s[t.id]=!0;let a={};for(let l=r.length-1;l>=0;l--){let u=r[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(s[u.outputs[p].id]){for(let m in c)s[c[m].id]=!0,a[u.id]=!0;break}}let i=[];for(let l=0;l<r.length;l++){let u=r[l];if(o[u.id]&&a[u.id]){let c={};for(let m in u.inputs){let f=u.inputs[m];n[f.id]&&(c[m]=f)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,i.push(p)}}return i}function RI(r,e,t,n){for(let o=e.length-1;o>=0;o--){let s=e[o],a=[];if(s.outputs.forEach(l=>{let u=r[l.id];u!=null?a.push(u):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let l in s.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let u=t(()=>i[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=s.inputs[l];if(!Vr(u.shape,c.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(r[c.id]==null)r[c.id]=u;else{let p=r[c.id];r[c.id]=n(p,u),p.dispose()}}}}var FI=20,Im=3,Wb=7;function OI(r,e,t,n){let o=Ks(e),s=SV(r,e,t,o),a=e.length,i=Zh(r,e,t,o,s),l=["Tensor"];return n&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(i.map(u=>"    "+u).join(`
`)),l.join(`
`)}function SV(r,e,t,n){let o=ft(e),s=n[n.length-1],a=new Array(s).fill(0),i=e.length,l=t==="complex64"?Sm(r):r;if(i>1)for(let u=0;u<o/s;u++){let c=u*s;for(let p=0;p<s;p++)a[p]=Math.max(a[p],Nm(l[c+p],0,t).length)}return a}function Nm(r,e,t){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(Wb))} + ${parseFloat(r[1].toFixed(Wb))}j`:ls(r)?n=`'${r}'`:t==="bool"?n=PI(r):n=parseFloat(r.toFixed(Wb)).toString(),zl(n,e)}function PI(r){return r===0?"false":"true"}function Zh(r,e,t,n,o,s=!0){let a=t==="complex64"?2:1,i=e[0],l=e.length;if(l===0){if(t==="complex64"){let h=Sm(r);return[Nm(h[0],0,t)]}return t==="bool"?[PI(r[0])]:[r[0].toString()]}if(l===1){if(i>FI){let g=Im*a,x=Array.from(r.slice(0,g)),b=Array.from(r.slice((i-Im)*a,i*a));return t==="complex64"&&(x=Sm(x),b=Sm(b)),["["+x.map((w,_)=>Nm(w,o[_],t)).join(", ")+", ..., "+b.map((w,_)=>Nm(w,o[i-Im+_],t)).join(", ")+"]"]}let h=t==="complex64"?Sm(r):Array.from(r);return["["+h.map((g,x)=>Nm(g,o[x],t)).join(", ")+"]"]}let u=e.slice(1),c=n.slice(1),p=n[0]*a,m=[];if(i>FI){for(let h=0;h<Im;h++){let g=h*p,x=g+p;m.push(...Zh(r.slice(g,x),u,t,c,o,!1))}m.push("...");for(let h=i-Im;h<i;h++){let g=h*p,x=g+p;m.push(...Zh(r.slice(g,x),u,t,c,o,h===i-1))}}else for(let h=0;h<i;h++){let g=h*p,x=g+p;m.push(...Zh(r.slice(g,x),u,t,c,o,h===i-1))}let f=l===2?",":"";m[0]="["+m[0]+f;for(let h=1;h<m.length-1;h++)m[h]=" "+m[h]+f;let d=`,
`;for(let h=2;h<l;h++)d+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":d),m}function Sm(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var ct=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ft(e),n!=null){let o=n.length;A(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||$b(t,this.size),this.strides=Ks(e)}set(e,...t){t.length===0&&(t=[0]),A(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let o of e){if(o<0||o>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Oi().makeTensor(this.values,this.shape,this.dtype)}},Oi=null,jc=null,TV=null;function MI(r){Oi=r}function LI(r){jc=r}function zI(r){TV=r}var Ve=class{constructor(e,t,n,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ft(e),this.strides=Ks(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return jc.buffer(this.shape,this.dtype,e)}bufferSync(){return jc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Bl(this.shape,e)}arraySync(){return Bl(this.shape,this.dataSync())}async data(){this.throwIfDisposed();let e=Oi().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Gc(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Oi().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Gc(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Oi().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Oi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return jc.print(this,e)}clone(){return this.throwIfDisposed(),jc.clone(this)}toString(e=!1){let t=this.dataSync();return OI(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),jc.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Oi().makeVariable(this,e,t,n)}};Object.defineProperty(Ve,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function O(){return km("Tensor",()=>Ve)}O();var nl=class extends Ve{constructor(e,t,n,o){super(e.shape,e.dtype,e.dataId,o);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Vr(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Oi().disposeTensor(this),this.dataId=e.dataId,Oi().incRef(this,null)}dispose(){Oi().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(nl,Symbol.hasInstance,{value:r=>r instanceof Ve&&r.assign!=null&&r.assign instanceof Function});var Lo={};Ye(Lo,{assertTypesMatch:()=>Yb,getTensorsInContainer:()=>Tm,isTensorInList:()=>AV,makeTypesMatch:()=>Ge});var Ub;(function(r){r.R0="R0",r.R1="R1",r.R2="R2",r.R3="R3",r.R4="R4",r.R5="R5",r.R6="R6"})(Ub||(Ub={}));var qb;(function(r){r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64"})(qb||(qb={}));var Hb;(function(r){r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64"})(Hb||(Hb={}));var Kb;(function(r){r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64"})(Kb||(Kb={}));var Xb;(function(r){r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64"})(Xb||(Xb={}));var EV={float32:Kb,int32:qb,bool:Hb,complex64:Xb};function fr(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return EV[r][e]}function gu(r){return fr(r,"int32")}function Ge(r,e){if(r.dtype===e.dtype)return[r,e];let t=fr(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function Yb(r,e){A(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function AV(r,e){return e.some(t=>t.id===r.id)}function Tm(r){let e=[],t=new Set;return BI(r,e,t),e}function BI(r,e,t){if(r==null)return;if(r instanceof Ve){e.push(r);return}if(!DV(r))return;let n=r;for(let o in n){let s=n[o];t.has(s)||(t.add(s),BI(s,e,t))}}function DV(r){return Array.isArray(r)||typeof r=="object"}function Zb(r){return r.kernelName!=null}var Jb=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},xu=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Jb}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new jb(this.backendInstance),!0}setupRegisteredKernels(){Cm(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Cm(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof qs)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),o=n.backend,s=this.readSync(t),a=o.refCount(t);o.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,n){e();try{let o=n();return t(),o}catch(o){throw t(),o}}nextTensorId(){return xu.nextTensorId++}nextVariableId(){return xu.nextVariableId++}clone(e){let t=D.runKernel($n,{x:e}),n={x:e},o=a=>({x:()=>{let i="float32",l={x:a},u={dtype:i};return D.runKernel(An,l,u)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],o,s,{}),t}runKernel(e,t,n){if(!(Bc(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let o=this.backend.numDataIds(),s=0;n.forEach(l=>{s+=l.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],o=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let l,u=Zb(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Zb(e)){let{kernelName:d,inputs:h,attrs:g}=e;this.backendName==null&&this.backend;let x=Bc(d,this.backendName);A(x!=null,()=>`Cannot find registered kernel '${d}' for backend '${this.backendName}'`),i=()=>{let b=this.backend.numDataIds();l=x.kernelFunc({inputs:h,attrs:g,backend:this.backend});let w=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(d,b,w);let _=w.map(k=>{if(k.rank!=null)return k;let{dataId:E,shape:S,dtype:R}=k;return this.makeTensorFromDataId(E,S,R)});if(o){let k=this.getTensorsForGradient(d,h,_);n=this.saveTensorsForBackwardMode(k)}return _}}else{let{forwardFunc:d}=e,h=g=>{!o||(n=g.map(x=>this.keep(this.clone(x))))};i=()=>{let g=this.backend.numDataIds();l=this.tidy(()=>d(this.backend,h));let x=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,x),x}}let{inputs:c,attrs:p}=e,m=Zb(e)?null:e.backwardsFunc,f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(f=this.profiler.profileKernel(u,c,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs)}),o&&this.addTapeNode(u,c,t,m,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(d=>c[d]!=null?c[d].shape:null),outputShapes:t.map(d=>d.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let o=Yh(e);if(o!=null){let s=o.inputsToSave||[],a=o.outputsToSave||[],i;o.saveAllInputs?(A(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=s.map(u=>t[u]);let l=n.filter((u,c)=>a[c]);return i.concat(l)}return[]}makeTensor(e,t,n,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=e;n==="string"&&ls(e[0])&&(s=e.map(l=>rl(l)));let a=o.write(s,t,n),i=new Ve(t,n,a,this.nextTensorId());if(this.trackTensor(i,o),n==="string"){let l=this.state.tensorInfo.get(a),u=Ob(s);this.state.numBytes+=u-l.bytes,l.bytes=u}return i}makeTensorFromDataId(e,t,n,o){n=n||"float32";let s=new Ve(t,n,e,this.nextTensorId());return this.trackTensor(s,o),s}makeVariable(e,t=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));let s=new nl(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*Kh(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof nl||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*Kh(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,o,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},l=Yh(e);l!=null&&(o=l.gradFunc),o!=null&&(i.gradient=u=>(u=u.map((c,p)=>{if(c==null){let m=n[p],f=Oc(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return c}),o(u.length>1?u:u[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Tm(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(e,t,n,o=!1){if(A(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));A(s instanceof Ve,()=>"The result y returned by f() must be a tensor.");let a=$I(this.state.activeTape,t,s);if(!o&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=n==null?$V(s.shape):n,RI(i,a,u=>this.tidy(u),RV);let l=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let c of u.saved)c.dispose()}),this.state.activeTape=null),{value:s,grads:l}})}customGrad(e){return A(Hs(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{A(t.every(i=>i instanceof Ve),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};t.forEach((i,l)=>{o[l]=i});let s=(i,l)=>(n=e(...t,l),A(n.value instanceof Ve,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),A(Hs(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,l)=>{let u=n.gradFunc(i,l),c=Array.isArray(u)?u:[u];A(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),A(c.every(m=>m instanceof Ve),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let p={};return c.forEach((m,f)=>{p[f]=()=>m}),p};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=hu(),n=await this.backend.time(e);return n.wallMs=hu()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Jb;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};xu.nextTensorId=0;xu.nextVariableId=0;function $V(r){let e=bm(ft(r),"float32");return D.makeTensor(e,r,"float32")}function Qb(){let r=Lb();if(r._tfengine==null){let e=new Xh(r);r._tfengine=new xu(e)}return AI(r._tfengine.ENV),MI(()=>r._tfengine),r._tfengine}var D=Qb();function RV(r,e){let t={a:r,b:e};return D.runKernel(xn,t)}var Wc={};Ye(Wc,{isBrowser:()=>ew,isMobile:()=>OV});function FV(){return typeof navigator!="undefined"&&navigator!=null}function OV(){if(FV()){let r=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(r)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(r.substr(0,4))}return!1}function ew(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Pi=W();Pi.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Pi.registerFlag("IS_BROWSER",()=>ew());Pi.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Pi.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Pi.registerFlag("PROD",()=>!1);Pi.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Pi.getBool("DEBUG"));Pi.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Pi.registerFlag("IS_TEST",()=>!1);Pi.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);function vr(r,e){let t=r;if(nr(r))return e==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(t)||nr(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(r)&&W().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&VI(r,n,[]),n}function VI(r,e,t){if(t=t||[],!Array.isArray(r)&&!nr(r)){A(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}A(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),A(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let n=e.slice(1);for(let o=0;o<r.length;++o)VI(r[o],n,t.concat(o))}function GI(r,e,t,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${r} tensor, but got ${e} tensor`)}}function v(r,e,t,n="numeric"){if(r instanceof Ve)return GI(n,r.dtype,e,t),r;let o=Rc(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),GI(n,o,e,t),r==null||!nr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let l=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}let s=vr(r,o);!nr(r)&&!Array.isArray(r)&&(r=[r]);let i=o!=="string"?Vc(r,o):as(r,[],!0);return D.makeTensor(i,s,o)}function ya(r,e,t,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>v(s,`${e}[${a}]`,t,n))}var jI="__op";function T(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],n=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+jI;let o=(...s)=>{D.startScope(t);try{let a=n(...s);return _m(a)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(a),a}catch(a){throw D.endScope(null),a}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}function PV(r,e){let t=v(r,"real","complex"),n=v(e,"imag","complex");St(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:t,imag:n};return D.runKernel(ql,o)}var bn=T({complex_:PV});function Gr(r,e,t,n){if(n==null&&(n=Rc(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!nr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){wm(e);let o=ft(e),s=ft(t);A(o===s,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${s}`);for(let a=0;a<t.length;++a){let i=t[a],l=a===t.length-1?i!==ft(e.slice(a)):!0;A(t[a]===e[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!nr(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=n!=="string"?Vc(r,n):as(r,[],!0),D.makeTensor(r,e,n)}function $r(r,e,t){let n=vr(r,t);return Gr(r,e,n,t)}var Em={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var Jh=4;async function WI(r,e){let t=[],n=[],o=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<o.length;++a){let i=o[a],l=Array.isArray(r)?r[a].tensor:r[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let u={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(async p=>{let m=await l.bytes(),f=m.reduce((g,x)=>g+x.length,0)+Jh*m.length,d=new Uint8Array(f),h=0;for(let g=0;g<m.length;g++){let x=m[g],b=new Uint8Array(new Uint32Array([x.length]).buffer);d.set(b,h),h+=Jh,d.set(x,h),h+=x.length}p(d)});n.push(c)}else n.push(l.data());e!=null&&(u.group=e),t.push(u)}let s=await Promise.all(n);return{data:MV(s),specs:t}}function Qh(r,e){let t={},n,o=0;for(let s of e){let a=s.name,i=s.dtype,l=s.shape,u=ft(l),c;if("quantization"in s){let p=s.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${s.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${s.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let m=Em[p.dtype],f=r.slice(o,o+u*m),d=p.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(i==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){c=new Float32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];c[h]=g*p.scale+p.min}}else if(p.dtype==="float16")n===void 0&&(n=LV()),c=n(d);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(i==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);c=new Int32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];c[h]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=u*m}else if(i==="string"){let p=ft(s.shape);c=[];for(let m=0;m<p;m++){let f=new Uint32Array(r.slice(o,o+Jh))[0];o+=Jh;let d=new Uint8Array(r.slice(o,o+f));c.push(d),o+=f}}else{let p=Em[i],m=r.slice(o,o+u*p);if(i==="float32")c=new Float32Array(m);else if(i==="int32")c=new Int32Array(m);else if(i==="bool")c=new Uint8Array(m);else if(i==="complex64"){c=new Float32Array(m);let f=new Float32Array(c.length/2),d=new Float32Array(c.length/2);for(let x=0;x<f.length;x++)f[x]=c[x*2],d[x]=c[x*2+1];let h=$r(f,l,"float32"),g=$r(d,l,"float32");t[a]=bn(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=u*p}i!=="complex64"&&(t[a]=$r(c,l,i))}return t}function MV(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(e),o=0;return t.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var tw=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function UI(r){return tw?Buffer.byteLength(r):new Blob([r]).size}function qI(r){if(tw)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function HI(r){if(tw){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function Uc(r){if(r.length===1)return r[0];let e=0;r.forEach(o=>{e+=o.byteLength});let t=new Uint8Array(e),n=0;return r.forEach(o=>{t.set(new Uint8Array(o),n),n+=o.byteLength}),t.buffer}function rw(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function Mi(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:UI(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:UI(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function zV(){let r=t=>{let n=t<<13,o=0;for(;(n&8388608)==0;)o-=8388608,n<<=1;return n&=~8388608,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function BV(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function VV(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function LV(){let r=zV(),e=BV(),t=VV();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let a=0;a<n.length;a++){let i=n[a],l=r[t[i>>10]+(i&1023)]+e[i>>10];s[a]=l}return new Float32Array(o)}}var Tt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Tt.instance==null&&(Tt.instance=new Tt),Tt.instance}static registerSaveRouter(e){Tt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Tt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Tt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Tt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let o=[];return(t==="load"?Tt.getInstance().loadRouters:Tt.getInstance().saveRouters).forEach(a=>{let i=a(e,n);i!==null&&o.push(i)}),o}},KI=r=>Tt.registerSaveRouter(r),XI=r=>Tt.registerLoadRouter(r),YI=r=>Tt.getSaveHandlers(r),ZI=(r,e)=>Tt.getLoadHandlers(r,e);var nw="tensorflowjs",ow=1,yu="models_store",ol="model_info_store";function JI(){if(!W().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window=="undefined"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function sw(r){let e=r.result;e.createObjectStore(yu,{keyPath:"modelPath"}),e.createObjectStore(ol,{keyPath:"modelPath"})}var ba=class{constructor(e){if(this.indexedDB=JI(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,o)=>{let s=this.indexedDB.open(nw,ow);s.onupgradeneeded=()=>sw(s),s.onsuccess=()=>{let a=s.result;if(t==null){let i=a.transaction(yu,"readonly"),u=i.objectStore(yu).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(u.result.modelArtifacts)},u.onerror=c=>(a.close(),o(u.error)),i.oncomplete=()=>a.close()}else{let i=Mi(t),l=a.transaction(ol,"readwrite"),u=l.objectStore(ol),c=u.put({modelPath:this.modelPath,modelArtifactsInfo:i}),p;c.onsuccess=()=>{p=a.transaction(yu,"readwrite");let f=p.objectStore(yu).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});f.onsuccess=()=>n({modelArtifactsInfo:i}),f.onerror=d=>{u=l.objectStore(ol);let h=u.delete(this.modelPath);h.onsuccess=()=>(a.close(),o(f.error)),h.onerror=g=>(a.close(),o(f.error))}},c.onerror=m=>(a.close(),o(c.error)),l.oncomplete=()=>{p==null?a.close():p.oncomplete=()=>a.close()}}},s.onerror=a=>o(s.error)})}};ba.URL_SCHEME="indexeddb://";var QI=r=>W().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ba.URL_SCHEME)?GV(r.slice(ba.URL_SCHEME.length)):null;Tt.registerSaveRouter(QI);Tt.registerLoadRouter(QI);function GV(r){return new ba(r)}function jV(r){return r.startsWith(ba.URL_SCHEME)?r.slice(ba.URL_SCHEME.length):r}var iw=class{constructor(){this.indexedDB=JI()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(nw,ow);n.onupgradeneeded=()=>sw(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(ol,"readonly"),i=s.objectStore(ol).getAll();i.onsuccess=()=>{let l={};for(let u of i.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},i.onerror=l=>(o.close(),t(i.error)),s.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=jV(e),new Promise((t,n)=>{let o=this.indexedDB.open(nw,ow);o.onupgradeneeded=()=>sw(o),o.onsuccess=()=>{let s=o.result,a=s.transaction(ol,"readwrite"),i=a.objectStore(ol),l=i.get(e),u;l.onsuccess=()=>{if(l.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=i.delete(e),p=()=>{u=s.transaction(yu,"readwrite");let f=u.objectStore(yu).delete(e);f.onsuccess=()=>t(l.result.modelArtifactsInfo),f.onerror=d=>n(l.error)};c.onsuccess=p,c.onerror=m=>(p(),s.close(),n(l.error))}},l.onerror=c=>(s.close(),n(l.error)),a.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var wa="/",qc="tensorflowjs_models",eN="info",WV="model_topology",UV="weight_specs",qV="weight_data",HV="model_metadata";function tN(r){return{info:[qc,r,eN].join(wa),topology:[qc,r,WV].join(wa),weightSpecs:[qc,r,UV].join(wa),weightData:[qc,r,qV].join(wa),modelMetadata:[qc,r,HV].join(wa)}}function KV(r){let e=r.split(wa);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(wa)}function XV(r){return r.startsWith(_a.URL_SCHEME)?r.slice(_a.URL_SCHEME.length):r}var _a=class{constructor(e){if(!W().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=tN(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),o=Mi(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,qI(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return e.signature!=null&&(s.signature=e.signature),e.userDefinedMetadata!=null&&(s.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch(s){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=HI(a),t}};_a.URL_SCHEME="localstorage://";var rN=r=>W().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(_a.URL_SCHEME)?YV(r.slice(_a.URL_SCHEME.length)):null;Tt.registerSaveRouter(rN);Tt.registerLoadRouter(rN);function YV(r){return new _a(r)}var aw=class{constructor(){A(W().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),A(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=qc+wa,n=wa+eN;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(t)&&s.endsWith(n)){let a=KV(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=XV(e);let t=tN(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),n}};var Hc="://",jr=class{constructor(){this.managers={}}static getInstance(){return jr.instance==null&&(jr.instance=new jr),jr.instance}static registerManager(e,t){A(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Hc)&&(e=e.slice(0,e.indexOf(Hc))),A(e.length>0,()=>"scheme must not be an empty string.");let n=jr.getInstance();A(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function eg(r){if(r.indexOf(Hc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${jr.getSchemes().join(",")}`);return{scheme:r.split(Hc)[0],path:r.split(Hc)[1]}}async function nN(r,e,t=!1){A(r!==e,()=>`Old path and new path are the same: '${r}'`);let n=Tt.getLoadHandlers(r);A(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),A(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Tt.getSaveHandlers(e);A(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),A(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);let a=s[0],i=eg(r).scheme,l=eg(r).path,u=i===eg(r).scheme,c=await o.load();t&&u&&await jr.getManager(i).removeModel(l);let p=await a.save(c);return t&&!u&&await jr.getManager(i).removeModel(l),p.modelArtifactsInfo}async function oN(){let r=jr.getSchemes(),e={};for(let t of r){let n=await jr.getManager(t).listModels();for(let o in n){let s=t+Hc+o;e[s]=n[o]}}return e}async function sN(r){let e=eg(r);return jr.getManager(e.scheme).removeModel(e.path)}async function iN(r,e){return nN(r,e,!1)}async function aN(r,e){return nN(r,e,!0)}var lN=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(W().get("IS_BROWSER")){W().setPlatform("browser",new lN);try{jr.registerManager(_a.URL_SCHEME,new aw)}catch(r){}try{jr.registerManager(ba.URL_SCHEME,new iw)}catch(r){}}var ZV={importFetch:()=>uN()},lw;var cN=class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return W().global.fetch!=null?W().global.fetch(e,t):(lw==null&&(lw=ZV.importFetch()),lw(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};W().get("IS_NODE")&&W().setPlatform("node",new cN);function Ce(r,e="float32",t){return e=e||"float32",wm(r),new ct(r,e,t)}function JV(r,e){let t=v(r,"x","cast");if(!Fb(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:t},o={dtype:e};return D.runKernel(An,n,o)}var ne=T({cast_:JV});function QV(r){let t={x:v(r,"x","clone","string_or_numeric")};return D.runKernel($n,t)}var Fn=T({clone_:QV});function uw(r,e=!1){console.log(r.toString(e))}Qb();var eG={buffer:Ce,cast:ne,clone:Fn,print:uw};LI(eG);var Cr={};Ye(Cr,{browserFiles:()=>fN,browserHTTPRequest:()=>gN,concatenateArrayBuffers:()=>Uc,copyModel:()=>iN,decodeWeights:()=>Qh,encodeWeights:()=>WI,fromMemory:()=>yN,getLoadHandlers:()=>ZI,getModelArtifactsInfoForJSON:()=>Mi,getSaveHandlers:()=>YI,http:()=>ng,isHTTPScheme:()=>rg,listModels:()=>oN,loadWeights:()=>dN,moveModel:()=>aN,registerLoadRouter:()=>XI,registerSaveRouter:()=>KI,removeModel:()=>sN,weightsLoaderFactory:()=>mw,withSaveHandler:()=>bN});var tG="model",rG=".json",nG=".weights.bin";function pN(r){return new Promise(e=>setTimeout(e)).then(r)}var sl=class{constructor(e){if(!W().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(sl.URL_SCHEME)&&(e=e.slice(sl.URL_SCHEME.length)),(e==null||e.length===0)&&(e=tG),this.modelTopologyFileName=e+rG,this.weightDataFileName=e+nG}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};e.signature!=null&&(o.signature=e.signature),e.userDefinedMetadata!=null&&(o.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(o.modelInitializer=e.modelInitializer);let s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await pN(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await pN(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Mi(e)}}}};sl.URL_SCHEME="downloads://";var mN=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){let e=this.files[0],t=this.files.slice(1);return new Promise((n,o)=>{let s=new FileReader;s.onload=a=>{let i=JSON.parse(a.target.result),l=i.modelTopology;if(l==null){o(new Error(`modelTopology field is missing from file ${e.name}`));return}t.length===0&&n({modelTopology:l});let u=i.weightsManifest;if(u==null){o(new Error(`weightManifest field is missing from file ${e.name}`));return}let c;try{c=this.checkManifestAndWeightFiles(u,t)}catch(d){o(d);return}let p=[],m=[],f=[];u.forEach(d=>{d.paths.forEach(h=>{m.push(h),f.push(null)}),p.push(...d.weights)}),u.forEach(d=>{d.paths.forEach(h=>{let g=new FileReader;g.onload=x=>{let b=x.target.result,w=m.indexOf(h);if(f[w]=b,f.indexOf(null)===-1){let _={modelTopology:l,weightSpecs:p,weightData:Uc(f),format:i.format,generatedBy:i.generatedBy,convertedBy:i.convertedBy};i.signature!=null&&(_.signature=i.signature),i.userDefinedMetadata!=null&&(_.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(_.modelInitializer=i.modelInitializer),n(_)}},g.onerror=x=>o(`Failed to weights data from file of path '${h}'.`),g.readAsArrayBuffer(c[h])})})},s.onerror=a=>o(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(e)})}checkManifestAndWeightFiles(e,t){let n=[],o=t.map(a=>rw(a.name)),s={};for(let a of e)a.paths.forEach(i=>{let l=rw(i);if(n.indexOf(l)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${l}'`);if(n.push(l),o.indexOf(l)===-1)throw new Error(`Weight file with basename '${l}' is not provided.`);s[i]=t[o.indexOf(l)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return s}},sG=r=>W().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(sl.URL_SCHEME)?oG(r.slice(sl.URL_SCHEME.length)):null;Tt.registerSaveRouter(sG);function oG(r="model"){return new sl(r)}function fN(r){return new mN(r)}function cw(r,e,t,n){a(r),t=t==null?0:t,n=n==null?1:n,i(t,n);let o=0,s=l=>(l.then(u=>{let c=t+ ++o/r.length*(n-t);return e(c),u}),l);function a(l){A(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,u){A(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),A(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),A(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(r.map(s))}async function pw(r,e){e==null&&(e={});let t=e.fetchFunc==null?W().platform.fetch:e.fetchFunc,n=r.map(p=>t(p,e.requestInit,{isBinary:!0})),o=0,s=.5,i=(e.onProgress==null?await Promise.all(n):await cw(n,e.onProgress,o,s)).map(p=>p.arrayBuffer()),l=.5,u=1;return e.onProgress==null?await Promise.all(i):await cw(i,e.onProgress,l,u)}async function dN(r,e="",t,n){return mw(a=>pw(a,{requestInit:n}))(r,e,t)}function mw(r){return async(e,t="",n)=>{let o=e.map(()=>!1),s={},a=n!=null?n.map(()=>!1):[],i=[];if(e.forEach((f,d)=>{let h=0;f.weights.forEach(g=>{let x="quantization"in g?g.quantization.dtype:g.dtype,b=Em[x]*ft(g.shape),w=()=>{o[d]=!0,s[d]==null&&(s[d]=[]),s[d].push({manifestEntry:g,groupOffset:h,sizeBytes:b})};n!=null?n.forEach((_,k)=>{_===g.name&&(w(),a[k]=!0)}):w(),i.push(g.name),h+=b})}),!a.every(f=>f)){let f=n.filter((d,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=o.reduce((f,d,h)=>(d&&f.push(h),f),[]),u=[];l.forEach(f=>{e[f].paths.forEach(d=>{let h=t+(t.endsWith("/")?"":"/")+d;u.push(h)})});let c=await r(u),p={},m=0;return l.forEach(f=>{let d=e[f].paths.length,h=0;for(let _=0;_<d;_++)h+=c[m+_].byteLength;let g=new ArrayBuffer(h),x=new Uint8Array(g),b=0;for(let _=0;_<d;_++){let k=new Uint8Array(c[m+_]);x.set(k,b),b+=k.byteLength}s[f].forEach(_=>{let k=g.slice(_.groupOffset,_.groupOffset+_.sizeBytes),E=Qh(k,[_.manifestEntry]);for(let S in E)p[S]=E[S]}),m+=d}),p}}var iG="application/octet-stream",aG="application/json",tg=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(A(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=W().platform.fetch,A(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&A(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};e.signature!=null&&(o.signature=e.signature),e.userDefinedMetadata!=null&&(o.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(o.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(o)],{type:aG}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:iG}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Mi(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(d){let h=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?h+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":h+=" Please make sure the server is serving valid JSON for this request.",new Error(h)}let n=t.modelTopology,o=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,l=t.signature,u=t.userDefinedMetadata;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,p;o!=null&&([c,p]=await this.loadWeights(o));let m={modelTopology:n,weightSpecs:c,weightData:p,generatedBy:s,convertedBy:a,format:i};l!=null&&(m.signature=l),u!=null&&(m.userDefinedMetadata=u);let f=t.modelInitializer;return f&&(m.modelInitializer=f),m}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=lG(t),s=this.weightPathPrefix||n,a=[];for(let c of e)a.push(...c.weights);let i=[],l=[];for(let c of e)for(let p of c.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(p)):i.push(s+p+o);this.weightUrlConverter&&i.push(...await Promise.all(l));let u=await pw(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Uc(u)]}};tg.URL_SCHEME_REGEX=/^https?:\/\//;function lG(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),n=r.substring(0,e),o=t>e?r.substring(t):"";return[n+"/",o]}function rg(r){return r.match(tg.URL_SCHEME_REGEX)!=null}var hN=(r,e)=>{if(typeof fetch=="undefined"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(n=>rg(n)):t=rg(r),t)return ng(r,e)}return null};Tt.registerSaveRouter(hN);Tt.registerLoadRouter(hN);function ng(r,e){return new tg(r,e)}function gN(r,e){return ng(r,e)}var og=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},xN=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function yN(r,e,t,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new og(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new og({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new og({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:n}))}function bN(r){return new xN(r)}var wN={};Ye(wN,{confusionMatrix:()=>fG});function uG(r,e,t=!1,n=!1){let o=v(r,"a","matMul"),s=v(e,"b","matMul");[o,s]=Ge(o,s);let a={a:o,b:s},i={transposeA:t,transposeB:n};return D.runKernel(Yn,a,i)}var je=T({matMul_:uG});function cG(r,e,t=1,n=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let s={indices:v(r,"indices","oneHot","int32")},a={depth:e,onValue:t,offValue:n};return D.runKernel(bo,s,a)}var Is=T({oneHot_:cG});function pG(r,e){let t=v(r,"x","transpose");if(e==null&&(e=t.shape.map((s,a)=>a).reverse()),A(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of perm ${e}.`),e.forEach(s=>{A(s>=0&&s<t.rank,()=>`All entries in 'perm' must be between 0 and ${t.rank-1} but got ${e}`)}),t.rank<=1)return t.clone();let n={x:t},o={perm:e};return D.runKernel(Mo,n,o)}var We=T({transpose_:pG});function mG(r,e,t){let n=v(r,"labels","confusionMatrix"),o=v(e,"predictions","confusionMatrix");A(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),A(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),A(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),A(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),A(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);let s=Is(ne(n,"int32"),t),a=Is(ne(o,"int32"),t),i=We(s),l=je(i,a);return ne(l,"int32")}var fG=T({confusionMatrix_:mG});var sg={};Ye(sg,{fromPixels:()=>gG,toPixels:()=>hG});function fw(r,e,t){if(En(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=vr(r,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Gr(r,e,n,t)}var Kc;function dG(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData!="undefined"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(o){let d=2;if(o&&r.readyState<d)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(Bc(Lc,D.backendName)!=null){let d={pixels:r},h={numChannels:e};return D.runKernel(Lc,d,h)}let[u,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],p;a?p=r.getContext("2d").getImageData(0,0,u,c).data:n||t?p=r.data:(s||o||i)&&(Kc==null&&(Kc=document.createElement("canvas").getContext("2d")),Kc.canvas.width=u,Kc.canvas.height=c,Kc.drawImage(r,0,0,u,c),p=Kc.getImageData(0,0,u,c).data);let m;if(e===4)m=new Int32Array(p);else{let d=u*c;m=new Int32Array(d*e);for(let h=0;h<d;h++)for(let g=0;g<e;++g)m[h*e+g]=p[h*4+g]}return fw(m,[c,u,e],"int32")}async function hG(r,e){let t=v(r,"img","toPixels");if(!(r instanceof Ve)){let u=t;t=ne(u,"int32"),u.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);let[n,o]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);let a=await t.data(),i=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(o*n*4);for(let u=0;u<n*o;++u){let c=[0,0,0,255];for(let m=0;m<s;m++){let f=a[u*s+m];if(t.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(t.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);s===1?(c[0]=f*i,c[1]=f*i,c[2]=f*i):c[m]=f*i}let p=u*4;l[p+0]=Math.round(c[0]),l[p+1]=Math.round(c[1]),l[p+2]=Math.round(c[2]),l[p+3]=Math.round(c[3])}if(e!=null){e.width=o,e.height=n;let u=e.getContext("2d"),c=new ImageData(l,o,n);u.putImageData(c,0,0)}return t!==r&&t.dispose(),l}var gG=T({fromPixels_:dG});var ig={};Ye(ig,{prepareAndValidate:()=>_N});function _N(r,e){let t=r.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(ft(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=e.shape,s=o[o.length-1],a=1;for(let p=0;p<o.length-1;++p)a*=o[p];let i=r.shape,l=o.slice();l.pop();let u=1;for(let p=s;p<t;++p)u*=i[p],l.push(i[p]);let c=[...Ks(r.shape).map(p=>p/u),1].slice(0,s);return[l,a,u,c]}var ag={};Ye(ag,{calculateShapes:()=>kN,validateInput:()=>lg,validateUpdateShape:()=>dw});function dw(r,e,t){let n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(t.rank-o))throw new Error(s+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let a=0;a<o;++a)if(t.shape[a]!==e.shape[a])throw new Error(s+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-o;++a)if(t.shape[a+o]!==r[a+n])throw new Error(s+` updates.shape[${a+o}] (${t.shape[a+o]}) != shape[${a+o}] (${r[a+o]})`)}function lg(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}dw(t,e,r)}function kN(r,e,t){let n=e.shape.length,o=n>1?e.shape[n-1]:1,s=t.length,a=1;for(let p=o;p<s;++p)a*=t[p];let i=o<1?1:o,l=ft(e.shape)/i,u=[...Ks(t.slice(0,o)),1],c=ft(t);return{sliceRank:o,numUpdates:l,sliceSize:a,strides:u,outputSize:c}}var or={};Ye(or,{assertParamsValid:()=>xG,computeFlatOffset:()=>bG,computeOutShape:()=>vN,getNormalizedAxes:()=>$N,isSliceContinous:()=>yG,maskToAxes:()=>ug,parseSliceParams:()=>hw,sliceInfo:()=>wG,startForAxis:()=>AN,startIndicesWithElidedDims:()=>SN,stopForAxis:()=>DN,stopIndicesWithElidedDims:()=>TN,stridesForAxis:()=>EN,stridesWithElidedDims:()=>CN});function xG(r,e,t){let n=r.shape.length;A(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),A(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)A(e[o]+t[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function ug(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function vN(r,e,t){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((e[o]-r[o])/t[o]);return n}function CN(r,e,t,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<t;s++)s===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function IN(r,e,t){return t<=r?t:t-(e-1)}function NN(r,e){let t=[];for(let n=0;n<r;n++)t.push(e+n);return t}function $N(r,e,t,n,o,s,a,i,l){let u=r.length,c=new Array(u),p=new Array(u),m=new Array(u);if(e.length&&t>0){let f=e[0],d=t+1;c=SN(a,f,d,n,r),p=TN(i,f,d,o,r),m=CN(s,f,d,r)}else for(let f=0;f<u;f++)c[f]=AN(a,n,s,r,f,l),p[f]=DN(i,o,s,r,f,l),m[f]=EN(s,f,l);return{begin:c,end:p,strides:m}}function SN(r,e,t,n,o){let s=[...o],a=NN(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let l=IN(e,t,i),u=n[l];r&1<<l&&(u=0),s[i]=u}return s}function TN(r,e,t,n,o){let s=[...o],a=NN(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let l=IN(e,t,i),u=n[l];r&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[i]=u}for(let i=0;i<s.length;i++){let l=o[i];s[i]<0&&(s[i]+=l),s[i]=$c(0,s[i],o[i])}return s}function EN(r,e,t){let n=r[e];return(t&1<<e||n==null)&&(n=1),n}function AN(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let l=n[o];return a<0&&(a+=l),a=$c(0,a,l-1),a}function DN(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let l=n[o];return a<0&&(a+=l),i>0?a=$c(0,a,l):a=$c(-1,a,l-1),a}function yG(r,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==r[o])return!1;return!0}function bG(r,e){let t=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)t+=r[n]*e[n];return t}function hw(r,e,t){let n,o=r.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(a=>{A(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(o).fill(-1):typeof t=="number"?s=[t,...new Array(o-1).fill(-1)]:t.length<o?s=t.concat(new Array(o-t.length).fill(-1)):s=t,s=s.map((a,i)=>a>=0?a:(A(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-n[i])),[n,s]}function wG(r,e,t,n,o,s,a,i,l){let u=e.slice(),c=t.slice(),p=n;n==null&&(p=new Array(u.length));let m=ug(a);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(a!==0&&i!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(a!==0&&l!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let f=r.length-u.length,d=ug(i),h=r.slice();d.forEach(S=>{u[S]=0,c[S]=1,h.splice(S,0,1)});let{begin:g,end:x,strides:b}=$N(h,m,f,u,c,p,o,s,a);u=g,c=x,p=b;let w=ug(l);w.forEach(S=>{c[S]=u[S]+1,p[S]=1});let _=vN(u,c,p),k=_.filter((S,R)=>w.indexOf(R)===-1);return{nonStrided:p.every(S=>S===1),$begin:u,$end:c,$strides:p,size:_,newShape:h,outShape:k}}var J={};Ye(J,{Serializable:()=>cg,SerializationMap:()=>ka,registerClass:()=>en});var cg=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},ka=class{constructor(){this.classNameMap={}}static getMap(){return ka.instance==null&&(ka.instance=new ka),ka.instance}static register(e){ka.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function en(r){A(r.className!=null,()=>"Class being registered does not have the static className property defined."),A(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),A(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ka.register(r)}var RN={};Ye(RN,{TEST_EPSILON_FLOAT16:()=>FN,encodeStrings:()=>ON,expectArrayBuffersEqual:()=>SG,expectArraysClose:()=>kG,expectArraysEqual:()=>CG,expectNumbersClose:()=>IG,expectPromiseToFail:()=>vG,expectValuesInRange:()=>NG,testEpsilon:()=>gw});var _G=.001,FN=.1;function kG(r,e,t){return t==null&&(t=gw()),xw(r,e,(n,o)=>yw(n,o,t))}function gw(){return D.backend.floatPrecision()===32?_G:FN}function xw(r,e,t){let n=!0;if((nr(r)||nr(e))&&(n=!1),nr(r)&&nr(e)&&(n=!0),n){let a=r.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(e)){let a=vr(r),i=vr(e);if(!Vr(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let o=nr(r)?r:as(r),s=nr(e)?e:as(e);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=o[a],l=s[a];if(!t(i,l))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${l}.
Actual:   ${o}.
Expected: ${s}.`)}}function vG(r,e){r().then(()=>e.fail(),()=>e())}function CG(r,e){let t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return ls(r)||ls(r[0])||ls(e)||ls(e[0])?xw(r,t,(n,o)=>n==o):xw(r,e,(n,o)=>yw(n,o,0))}function IG(r,e,t){if(t==null&&(t=gw()),!yw(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`)}function yw(r,e,t){return!isFinite(r)&&!isFinite(e)?!0:!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function NG(r,e,t){for(let n=0;n<r.length;n++)if(r[n]<e||r[n]>t)throw new Error(`Value out of range:${r[n]} low: ${e}, high: ${t}`)}function SG(r,e){expect(new Float32Array(r)).toEqual(new Float32Array(e))}function ON(r){for(let e=0;e<r.length;e++){let t=r[e];Array.isArray(t)?ON(t):r[e]=rl(t)}return r}var TG="3.1.0";function EG(){W().set("PROD",!0)}function AG(){W().set("DEBUG",!0)}function DG(){W().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function pg(r){W().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}zI(pg);function $G(){D.disposeVariables()}function On(){return D}function Xc(){return D.memory()}function RG(r){return D.profile(r)}function V(r,e){return D.tidy(r,e)}function Ee(r){Tm(r).forEach(t=>t.dispose())}function $t(r){return D.keep(r)}function FG(r){return D.time(r)}function PN(r){return D.setBackend(r)}function OG(){return D.ready()}function PG(){return D.backendName}function MG(r){D.removeBackend(r)}function LG(r){return D.findBackend(r)}function zG(r){return D.findBackendFactory(r)}function bu(r,e,t=1){return D.registerBackend(r,e,t)}function bw(){return D.backend}function BG(r,e){W().setPlatform(r,e)}function VG(r,e){let t=v(r,"a","add"),n=v(e,"b","add");[t,n]=Ge(t,n);let o={a:t,b:n};return D.runKernel(xn,o)}var Q=T({add_:VG});function GG(r,e){let t=v(r,"a","floorDiv"),n=v(e,"b","floorDiv");[t,n]=Ge(t,n);let o={a:t,b:n};return D.runKernel(io,o)}var wu=T({floorDiv_:GG});function jG(r,e){let t=v(r,"a","div"),n=v(e,"b","div");if([t,n]=Ge(t,n),t.dtype==="int32"&&n.dtype==="int32")return wu(t,n);let o={a:t,b:n},s={};return D.runKernel(no,o,s)}var de=T({div_:jG});function WG(r,e){let t=v(r,"a","mul"),n=v(e,"b","mul");[t,n]=Ge(t,n);let o={a:t,b:n};return D.runKernel(yo,o)}var P=T({mul_:WG});function UG(r){let e=v(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return D.runKernel(ia,t)}else{let t={x:e};return D.runKernel(us,t)}}var Et=T({abs_:UG});function qG(r){let t={x:v(r,"x","acos")};return D.runKernel(Xs,t)}var Am=T({acos_:qG});function HG(r){let t={x:v(r,"x","acosh")};return D.runKernel(Ys,t)}var Dm=T({acosh_:HG});function KG(r){A(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),A(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((o,s)=>v(o,`tensors${s}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!Vr(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=e;return D.runKernel(Hn,n)}var ww=T({addN_:KG});function XG(r,e=null,t=!1){let o={x:v(r,"x","all","bool")},s={axis:e,keepDims:t};return D.runKernel(Vl,o,s)}var _u=T({all_:XG});function YG(r,e=null,t=!1){let o={x:v(r,"x","any","bool")},s={axis:e,keepDims:t};return D.runKernel(Gl,o,s)}var il=T({any_:YG});function ZG(r,e=0){let n={x:v(r,"x","argMax")},o={axis:e};return D.runKernel(Kn,n,o)}var al=T({argMax_:ZG});function JG(r,e=0){let n={x:v(r,"x","argMin")},o={axis:e};return D.runKernel(na,n,o)}var $m=T({argMin_:JG});function QG(r){let t={x:v(r,"x","asin")};return D.runKernel(Zs,t)}var Rm=T({asin_:QG});function ej(r){let t={x:v(r,"x","asinh")};return D.runKernel(Js,t)}var Fm=T({asinh_:ej});function tj(r){let t={x:v(r,"x","atan")};return D.runKernel(Qs,t)}var Om=T({atan_:tj});function rj(r,e){let t=v(r,"a","atan2"),n=v(e,"b","atan2");[t,n]=Ge(t,n);let o={a:t,b:n};return D.runKernel(ti,o)}var Pm=T({atan2_:rj});function nj(r){let t={x:v(r,"x","atanh")};return D.runKernel(ei,t)}var Mm=T({atanh_:nj});function oj(r,e,t,n,o="NHWC",s){let a=r[3],i=[...e,a],l=MN(o);return ku(r,i,t,s,n,null,null,l)}function _w(r,e,t,n,o,s,a="channelsLast"){let[i,l]=mg(e),u;if(a==="channelsLast")u=[i,l,r[3],r[3]];else if(a==="channelsFirst")u=[i,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return ku(r,u,t,n,o,s,!1,a)}function sj(r,e,t,n,o,s,a="NDHWC"){let[i,l,u]=kw(e),c,p;if(a==="NDHWC")p="channelsLast",c=[i,l,u,r[4],r[4]];else if(a==="NCDHW")p="channelsFirst",c=[i,l,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return LN(r,c,t,n,o,!1,p,s)}function ku(r,e,t,n,o,s,a=!1,i="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,p]=r;else if(i==="channelsFirst")[l,p,u,c]=r;else throw new Error(`Unknown dataFormat ${i}`);let[m,f,,d]=e,[h,g]=mg(t),[x,b]=mg(n),w=Yc(m,x),_=Yc(f,b),{padInfo:k,outHeight:E,outWidth:S}=ij(o,u,c,h,g,w,_,s,i),R=a?d*p:d,F;return i==="channelsFirst"?F=[l,R,E,S]:i==="channelsLast"&&(F=[l,E,S,R]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:p,outHeight:E,outWidth:S,outChannels:R,padInfo:k,strideHeight:h,strideWidth:g,filterHeight:m,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:_,dilationHeight:x,dilationWidth:b,inShape:r,outShape:F,filterShape:e}}function LN(r,e,t,n,o,s=!1,a="channelsLast",i){let[l,u,c,p,m]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,p,m]=r;else if(a==="channelsFirst")[l,m,u,c,p]=r;else throw new Error(`Unknown dataFormat ${a}`);let[f,d,h,,g]=e,[x,b,w]=kw(t),[_,k,E]=kw(n),S=Yc(f,_),R=Yc(d,k),F=Yc(h,E),{padInfo:L,outDepth:G,outHeight:j,outWidth:U}=aj(o,u,c,p,x,b,w,S,R,F,i),Y=s?g*m:g,K;return a==="channelsFirst"?K=[l,Y,G,j,U]:a==="channelsLast"&&(K=[l,G,j,U,Y]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:p,inChannels:m,outDepth:G,outHeight:j,outWidth:U,outChannels:Y,padInfo:L,strideDepth:x,strideHeight:b,strideWidth:w,filterDepth:f,filterHeight:d,filterWidth:h,effectiveFilterDepth:S,effectiveFilterHeight:R,effectiveFilterWidth:F,dilationDepth:_,dilationHeight:k,dilationWidth:E,inShape:r,outShape:K,filterShape:e}}function lj(r,e,t,n,o){n==null&&(n=vw(r,e,t));let s=r[0],a=r[1],i=vu((s-e+2*n)/t+1,o),l=vu((a-e+2*n)/t+1,o);return[i,l]}function uj(r,e,t,n,o,s){o==null&&(o=vw(r,e,n));let a=r[0],i=r[1],l=r[2],u=vu((a-e+2*o)/n+1,s),c=vu((i-e+2*o)/n+1,s),p=vu((l-e+2*o)/n+1,s);return[u,c,p,t]}function vw(r,e,t,n=1){let o=Yc(e,n);return Math.floor((r[0]*(t-1)-t+o)/2)}function mg(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function kw(r){return typeof r=="number"?[r,r,r]:r}function Yc(r,e){return e<=1?r:r+(r-1)*(e-1)}function ij(r,e,t,n,o,s,a,i,l){let u,c,p;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=lj([e,t],s,n,r,i);c=f[0],p=f[1]}else if(r==="same"){c=Math.ceil(e/n),p=Math.ceil(t/o);let m=Math.max(0,(c-1)*n+s-e),f=Math.max(0,(p-1)*o+a-t),d=Math.floor(m/2),h=m-d,g=Math.floor(f/2),x=f-g;u={top:d,bottom:h,left:g,right:x,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-s+1)/n),p=Math.ceil((t-a+1)/o);else if(typeof r=="object"){let m=l==="channelsLast"?r[1][0]:r[2][0],f=l==="channelsLast"?r[1][1]:r[2][1],d=l==="channelsLast"?r[2][0]:r[3][0],h=l==="channelsLast"?r[2][1]:r[3][1];u={top:m,bottom:f,left:d,right:h,type:m===0&&f===0&&d===0&&h===0?"VALID":"EXPLICIT"},c=vu((e-s+m+f)/n+1,i),p=vu((t-a+d+h)/o+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:c,outWidth:p}}function aj(r,e,t,n,o,s,a,i,l,u,c){let p,m,f,d;if(typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=uj([e,t,n,1],i,1,o,r,c);m=g[0],f=g[1],d=g[2]}else if(r==="same"){m=Math.ceil(e/o),f=Math.ceil(t/s),d=Math.ceil(n/a);let h=(m-1)*o+i-e,g=(f-1)*s+l-t,x=(d-1)*a+u-n,b=Math.floor(h/2),w=h-b,_=Math.floor(g/2),k=g-_,E=Math.floor(x/2),S=x-E;p={top:_,bottom:k,left:E,right:S,front:b,back:w,type:"SAME"}}else if(r==="valid")p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},m=Math.ceil((e-i+1)/o),f=Math.ceil((t-l+1)/s),d=Math.ceil((n-u+1)/a);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:m,outHeight:f,outWidth:d}}function vu(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Pn(r){let[e,t,n]=mg(r);return e===1&&t===1&&n===1}function br(r,e){return Pn(r)||Pn(e)}function MN(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function cj(r,e){let n={x:v(r,"x","reshape","string_or_numeric")},o={shape:e};return D.runKernel(gs,n,o)}var z=T({reshape_:cj});function pj(r,e,t,n,o){let s=v(r,"x","avgPool","float32"),a=1;A(br(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=s,l=!1;s.rank===3&&(l=!0,i=z(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),o!=null&&A(st(n),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let u={x:i},c={filterSize:e,strides:t,pad:n,dimRoundingMode:o},p=D.runKernel(Xn,u,c);return p=ne(p,s.dtype),l?z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var va=T({avgPool_:pj});function mj(r,e,t,n,o,s="NDHWC"){let a=v(r,"x","avgPool3d","float32"),i=a,l=!1;a.rank===4&&(l=!0,i=z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),A(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),A(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),o!=null&&A(st(n),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let u={x:i},c={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},p=D.runKernel(oa,u,c);return p=ne(p,i.dtype),l?z(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Lm=T({avgPool3d_:mj});function fj(r,e=0){A(r.length>=1,()=>"Pass at least one tensor to concat");let t=ya(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return Fn(t[0]);let n=t,o={axis:e};return D.runKernel(cs,n,o)}var Qe=T({concat_:fj});function dj(r){let t={x:v(r,"x","sigmoid")};return D.runKernel(Ao,t)}var Wr=T({sigmoid_:dj});function hj(r,e,t){let n=v(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:e,size:t};return D.runKernel(ys,o,s)}var Fe=T({slice_:hj});function gj(r){let t={x:v(r,"x","tanh")};return D.runKernel(Po,t)}var Li=T({tanh_:gj});function xj(r,e,t,n,o,s){let a=v(r,"forgetBias","basicLSTMCell"),i=v(e,"lstmKernel","basicLSTMCell"),l=v(t,"lstmBias","basicLSTMCell"),u=v(n,"data","basicLSTMCell"),c=v(o,"c","basicLSTMCell"),p=v(s,"h","basicLSTMCell"),m=Qe([u,p],1),f=je(m,i),d=Q(f,l),h=d.shape[0],g=d.shape[1]/4,x=[h,g],b=Fe(d,[0,0],x),w=Fe(d,[0,g],x),_=Fe(d,[0,g*2],x),k=Fe(d,[0,g*3],x),E=Q(P(Wr(b),Li(w)),P(c,Wr(Q(a,_)))),S=P(Li(E),Wr(k));return[E,S]}var yj=T({basicLSTMCell_:xj});function bj(r,e,t){let n=v(r,"x","batchToSpaceND"),o=e.reduce((i,l)=>i*l);A(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),A(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),A(n.shape[0]%o==0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);let s={x:n},a={blockShape:e,crops:t};return D.runKernel(sa,s,a)}var Ca=T({batchToSpaceND_:bj});function zN(r){let e;return r.rank===0||r.rank===1?e=z(r,[1,1,1,r.size]):r.rank===2?e=z(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=z(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function wj(r,e,t,n,o,s){s==null&&(s=.001);let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),l=v(t,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let c;n!=null&&(c=v(n,"offset","batchNorm")),A(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:zN(a),scale:u,offset:c,mean:i,variance:l},f={varianceEpsilon:s},d=D.runKernel(ao,m,f);return z(d,a.shape)}var zo=T({batchNorm_:wj});function _j(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),l=v(t,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let c;return n!=null&&(c=v(n,"offset","batchNorm")),A(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),A(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),A(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),zo(a,i,l,c,u,s)}var Cw=T({batchNorm2d_:_j});function kj(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),l=v(t,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let c;return n!=null&&(c=v(n,"offset","batchNorm")),A(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),A(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),A(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),zo(a,i,l,c,u,s)}var Iw=T({batchNorm3d_:kj});function vj(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),l=v(t,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let c;return n!=null&&(c=v(n,"offset","batchNorm")),A(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),A(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),A(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),zo(a,i,l,c,u,s)}var Nw=T({batchNorm4d_:vj});function Cj(r,e,t){let n=v(r,"x","bincount"),o=v(e,"weights","bincount");A(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},a={size:t};return D.runKernel(Ul,s,a)}var Sw=T({bincount_:Cj});function Ij(r,e){let t=v(r,"broadcastTo","x"),n=t.shape;if(e.some(u=>!(u>0)||u%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=z(t,u)}let o=t.shape,s=Array.from(e);for(let u=e.length-1;u>=0;u--)if(o[u]===e[u])s[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(s.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Fn(t);let i={x:t},l={reps:s};return D.runKernel(yn,i,l)}var ll=T({broadcastTo_:Ij});function Nj(r){let t={x:v(r,"x","ceil")};return D.runKernel(Zn,t)}var zm=T({ceil_:Nj});function Sj(r,e,t){let n=v(r,"x","clipByValue");A(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);let o={x:n},s={clipValueMin:e,clipValueMax:t};return D.runKernel(Dn,o,s)}var sr=T({clipByValue_:Sj});function Tj(r){return Qe(r,0)}var Tw=T({concat1d_:Tj});function Ej(r,e){return Qe(r,e)}var Ew=T({concat2d_:Ej});function Aj(r,e){return Qe(r,e)}var Aw=T({concat3d_:Aj});function Dj(r,e){return Qe(r,e)}var Dw=T({concat4d_:Dj});function $j(r,e,t,n,o="NHWC",s=[1,1],a){let i=v(r,"x","conv2d"),l=v(e,"filter","conv2d"),u=i,c=!1;i.rank===3&&(c=!0,u=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),a!=null&&A(st(n),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`);let p=o==="NHWC"?u.shape[3]:u.shape[1];A(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),A(br(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let m={x:u,filter:l},f={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},d=D.runKernel(Jn,m,f);return c?z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Ur=T({conv2d_:$j});function Rj(r,e,t,n,o="NWC",s=1,a){let i=v(r,"x","conv1d"),l=v(e,"filter","conv1d"),u=i,c=!1;i.rank===2&&(c=!0,u=z(i,[1,i.shape[0],i.shape[1]])),A(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),A(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),a!=null&&A(st(n),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`),A(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),A(br(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),A(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let p=z(l,[1,l.shape[0],l.shape[1],l.shape[2]]),m=z(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Ur(m,p,[1,t],n,"NHWC",[1,s],a);return c?z(g,[g.shape[2],g.shape[3]]):z(g,[g.shape[0],g.shape[2],g.shape[3]])}var Cu=T({conv1d_:Rj});function Fj(r,e,t,n,o,s="NHWC",a){A(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let i=r,l=e,u=!1;e.rank===3&&(u=!0,l=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,r[0],r[1],r[2]]),A(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),A(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),A(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let c=s==="NHWC"?i[3]:i[1],p=s==="NHWC"?l.shape[3]:l.shape[1];A(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),A(p===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${t.shape[3]}.`),a!=null&&A(st(o),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);let m={dy:l,filter:t},f={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},d=D.runKernel(Qn,m,f);return u?z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Zc=T({conv2DBackpropInput_:Fj});function Oj(r,e,t,n,o,s){let a=v(r,"x","conv2dTranspose"),i=v(e,"filter","conv2dTranspose");return Zc(t,a,i,n,o,"NHWC",s)}var Iu=T({conv2dTranspose_:Oj});function Pj(r,e,t,n,o="NDHWC",s=[1,1,1]){let a=v(r,"x","conv3d"),i=v(e,"filter","conv3d"),l=a,u=!1;a.rank===4&&(u=!0,l=z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),A(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),A(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),A(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),A(br(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),A(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let c={x:l,filter:i},p={strides:t,pad:n,dataFormat:o,dilations:s},m=D.runKernel(aa,c,p);return u?z(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Bm=T({conv3d_:Pj});function Mj(r,e,t,n,o){A(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,a=e,i=!1;e.rank===4&&(i=!0,a=z(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let l=s[4],u=a.shape[4];A(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),A(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),A(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),A(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),A(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);let c={dy:a,filter:t},p={pad:o,strides:n,inputShape:s},m=D.runKernel(Xl,c,p);return i?z(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var fg=T({conv3DBackpropInput_:Mj});function Lj(r,e,t,n,o){let s=v(r,"x","conv3dTranspose"),a=v(e,"filter","conv3dTranspose");return fg(t,s,a,n,o)}var zj=T({conv3dTranspose_:Lj});function Bj(r){let t={x:v(r,"x","cos")};return D.runKernel(eo,t)}var Ia=T({cos_:Bj});function Vj(r){let t={x:v(r,"x","cosh")};return D.runKernel(ri,t)}var Nu=T({cosh_:Vj});function Gj(r,e=0,t=!1,n=!1){let s={x:v(r,"x","cumsum")},a={axis:e,exclusive:t,reverse:n};return D.runKernel(to,s,a)}var Su=T({cumsum_:Gj});function jj(r,e,t,n=!1){let o=v(r,"x","denseBincount"),s=v(e,"weights","denseBincount");A(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),A(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let a={x:o,weights:s},i={size:t,binaryOutput:n};return D.runKernel(Yl,a,i)}var $w=T({denseBincount_:jj});function Wj(r,e,t="NHWC"){let n=v(r,"x","depthToSpace"),o=t==="NHWC"?n.shape[1]:n.shape[2],s=t==="NHWC"?n.shape[2]:n.shape[3],a=t==="NHWC"?n.shape[3]:n.shape[1];A(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),A(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${n.shape}`),A(a%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${n.shape}`);let i={x:n},l={blockSize:e,dataFormat:t};return D.runKernel(oi,i,l)}var Vm=T({depthToSpace_:Wj});function Uj(r,e,t,n,o="NHWC",s=[1,1],a){let i=v(r,"x","depthwiseConv2d"),l=v(e,"filter","depthwiseConv2d"),u=i,c=!1;i.rank===3&&(c=!0,u=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),A(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),a!=null&&A(st(n),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`);let p={x:u,filter:l},m={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=D.runKernel(ro,p,m);return c?z(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Ns=T({depthwiseConv2d_:Uj});function qj(r){let t={x:v(r,"x","diag")};return D.runKernel(Ql,t)}var Hj=T({diag_:qj});function Kj(r,e,t,n,o=[1,1],s="NHWC"){let a=v(r,"x","dilation2d"),i=v(e,"filter","dilation2d");A(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),A(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),A(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=a,u=!1;a.rank===3&&(l=z(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);let c={x:l,filter:i},p={strides:t,pad:n,dilations:o},m=D.runKernel(la,c,p);return u?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Gm=T({dilation2d_:Kj});function Xj(r,e){let t=r.length,n=[];for(let o=0;o<t;o++){let s=t-1-o,a=r[s]||1;(e[e.length-1-o]||1)>1&&a===1&&n.unshift(s)}return n}function It(r,e){let t=[];for(let n=0;n<e.length;n++){let o=r[r.length-n-1],s=e.length-n-1,a=e[s];(o==null||o===1&&a>1)&&t.unshift(s)}return t}function ze(r,e){let t=[],n=Math.max(r.length,e.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let a=e[e.length-o-1];if(a==null&&(a=1),s===1)t.unshift(a);else if(a===1)t.unshift(s);else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(i)}else t.unshift(s)}return t}function Yj(r,e){let t=v(r,"a","equal"),n=v(e,"b","equal");[t,n]=Ge(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ai,o)}var wn=T({equal_:Yj});function Zj(r,e,t){let n=v(e,"a","where"),o=v(t,"b","where"),s=v(r,"condition","where","bool"),a=ze(n.shape,o.shape),i=ll(n,a),l=ll(o,a);s.rank===1&&A(s.shape[0]===n.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),s.rank!==1&&St(s.shape,l.shape,"Error in where: ");let u={condition:s,t:i,e:l};return D.runKernel(xs,u)}var Rt=T({where_:Zj});function Jj(r){let t={x:v(r,"x","zerosLike")};return D.runKernel(_s,t)}var Ie=T({zerosLike_:Jj});function Qj(r,e){let t=v(r,"a","div"),n=v(e,"b","div");[t,n]=Ge(t,n);let o=de(t,n),s=Ie(o),a=wn(n,s);return Rt(a,s,o)}var jm=T({divNoNan_:Qj});function eW(r,e){let t=v(r,"t1","dot"),n=v(e,"t2","dot");A((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);let o=t.rank===1?t.size:t.shape[1],s=n.rank===1?n.size:n.shape[0];if(A(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),t.rank===1&&n.rank===1){let a=z(t,[1,-1]),i=z(n,[-1,1]),l=je(a,i);return z(l,[])}else if(t.rank===1&&n.rank===2){let a=z(t,[1,-1]),i=z(n,[n.shape[0],n.shape[1]]),l=je(a,i);return z(l,[l.size])}else if(t.rank===2&&n.rank===1){let a=z(n,[-1,1]),i=je(t,a);return z(i,[i.size])}else{let a=z(n,[n.shape[0],n.shape[1]]);return je(t,a)}}var Rw=T({dot_:eW});function tW(r){let t={x:v(r,"x","elu")};return D.runKernel(si,t)}var Ss=T({elu_:tW});function rW(r){let e=v(r,"x","erf");A(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=ne(e,"float32"));let t={x:e};return D.runKernel(ii,t)}var Wm=T({erf_:rW});function nW(r){let t={x:v(r,"x","exp")};return D.runKernel(oo,t)}var Yt=T({exp_:nW});function oW(r,e=0){let t=v(r,"x","expandDims","string_or_numeric");A(e<=t.rank,()=>"Axis must be <= rank of the tensor");let n={input:t},o={dim:e};return D.runKernel(ps,n,o)}var ir=T({expandDims_:oW});function sW(r){let t={x:v(r,"x","expm1")};return D.runKernel(li,t)}var Um=T({expm1_:sW});function iW(r,e){let t=v(r,"x","tile","string_or_numeric");A(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let n={x:t},o={reps:e};return D.runKernel(yn,n,o)}var Mn=T({tile_:iW});function aW(r,e,t,n="float32"){e==null&&(e=r);let o=Ce([r,e],n),s=r<=e?r:e;for(let i=0;i<s;++i)o.set(1,i,i);let a=z(o.toTensor(),[r,e]);if(t==null)return a;if(t.length===1)return Mn(ir(a,0),[t[0],1,1]);if(t.length===2)return Mn(ir(ir(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Mn(ir(ir(ir(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var Jc=T({eye_:aW});function Na(r,e,t){let n={shape:r,value:e,dtype:t};return D.runKernel(ua,{},n)}function lW(r){let t={x:v(r,"x","floor")};return D.runKernel(so,t)}var Ts=T({floor_:lW});function uW(r,e,t=0,n=0){let o=v(r,"x","gather"),s=v(e,"indices","gather","int32"),a={x:o,indices:s},i={axis:t,batchDims:n};return D.runKernel(ms,a,i)}var Bo=T({gather_:uW});function cW(r,e){let t=v(r,"a","greater"),n=v(e,"b","greater");[t,n]=Ge(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(pi,o)}var er=T({greater_:cW});function pW(r,e){let t=v(r,"a","greaterEqual"),n=v(e,"b","greaterEqual");[t,n]=Ge(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(lo,o)}var tn=T({greaterEqual_:pW});function mW(r){let t={input:v(r,"input","imag")};return D.runKernel(nu,t)}var Tu=T({imag_:mW});function fW(r){let t={x:v(r,"x","isFinite")};return D.runKernel(mi,t)}var Fw=T({isFinite_:fW});function dW(r){let t={x:v(r,"x","isInf")};return D.runKernel(fi,t)}var Ow=T({isInf_:dW});function hW(r){let t={x:v(r,"x","isNaN")};return D.runKernel(di,t)}var Pw=T({isNaN_:hW});function gW(r,e=.2){let n={x:v(r,"x","leakyRelu")},o={alpha:e};return D.runKernel(uo,n,o)}var Sa=T({leakyRelu_:gW});function xW(r,e){let t=v(r,"a","less"),n=v(e,"b","less");[t,n]=Ge(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(hi,o)}var Eu=T({less_:xW});function yW(r,e){let t=v(r,"a","lessEqual"),n=v(e,"b","lessEqual");[t,n]=Ge(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(gi,o)}var Ln=T({lessEqual_:yW});function Mw(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:e,num:t};return D.runKernel(ou,{},n)}function bW(r,e=5,t=1,n=1,o=.5){let s=v(r,"x","localResponseNormalization");A(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),A(st(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=z(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:a},u={depthRadius:e,bias:t,alpha:n,beta:o},c=D.runKernel(ca,l,u);return i?z(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var qm=T({localResponseNormalization_:bW});function wW(r){let t={x:v(r,"x","log")};return D.runKernel(co,t)}var ar=T({log_:wW});function _W(r){let t={x:v(r,"x","log1p")};return D.runKernel(xi,t)}var Au=T({log1p_:_W});function kW(r){return A(Hs(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let n=v(e,"x","tf.grad","string_or_numeric"),o=t!=null?v(t,"dy","tf.grad"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(n),[n],o);return o!=null&&St(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),dg(a),a[0]})}}function vW(r){return A(Hs(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{A(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=ya(e,"args","tf.grads","string_or_numeric"),o=t!=null?v(t,"dy","tf.grads"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(...n),n,o);return o!=null&&St(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),dg(a),a})}}function CW(r){return A(Hs(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{A(e instanceof Ve,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),A(t==null||t instanceof Ve,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=D.gradients(()=>r(e),[e],t);return dg(n),{grad:n[0],value:o}}}function IW(r){return A(Hs(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{A(Array.isArray(e)&&e.every(o=>o instanceof Ve),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),A(t==null||t instanceof Ve,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=D.gradients(()=>r(...e),e,t);return t!=null&&St(n.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),dg(n.grads),n}}function hg(r,e){A(Hs(r),()=>"The f passed in variableGrads(f) must be a function"),A(e==null||Array.isArray(e)&&e.every(u=>u instanceof nl),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let u in D.registeredVariables)e.push(D.registeredVariables[u])}let n=t?e.filter(u=>!u.trainable):null,o=e.length;e=e.filter(u=>u.trainable),A(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:a,grads:i}=D.gradients(r,e,null,s);A(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),A(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let l={};return e.forEach((u,c)=>{i[c]!=null&&(l[u.name]=i[c])}),n!=null&&n.forEach(u=>l[u.name]=null),{value:a,grads:l}}function qr(r){return D.customGrad(r)}function dg(r){if(r.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function NW(r){let t={x:v(r,"x","neg")};return D.runKernel(fs,t)}var Ue=T({neg_:NW});function SW(r){let t={x:v(r,"x","softplus")};return D.runKernel(Ai,t)}var Es=T({softplus_:SW});function TW(r){let e=v(r,"x","logSigmoid");return qr(n=>({value:Ue(Es(Ue(n))),gradFunc:a=>P(a,Wr(Ue(n)))}))(e)}var Lw=T({logSigmoid_:TW});function EW(r,e=null,t=!1){let o={x:v(r,"x","max")},s={reductionIndices:e,keepDims:t};return D.runKernel(po,o,s)}var lr=T({max_:EW});function AW(r,e){let t=v(r,"a","sub"),n=v(e,"b","sub");[t,n]=Ge(t,n);let o={a:t,b:n};return D.runKernel(Oo,o)}var ue=T({sub_:AW});function DW(r,e=null,t=!1){let n=v(r,"x","sum");n.dtype==="bool"&&(n=ne(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel($o,o,s)}var ye=T({sum_:DW});function $W(r,e=-1){let t=v(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return qr((o,s)=>{let a=!0,i=lr(o,e,!0),l=ue(o,i),u=ue(ne(l,"float32"),ar(ye(Yt(l),e,a)));return s([u]),{value:u,gradFunc:(p,m)=>{let[f]=m,d=!0,h=Yt(f);return ue(p,P(ye(p,e,d),h))}}})(t)}var Du=T({logSoftmax_:$W});function zw(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function BN(r,e,t){let n=r.length+e.length,o=[],s=0,a=0;for(let i=0;i<n;i++)t.indexOf(i)===-1?o.push(r[s++]):o.push(e[a++]);return o}function Bw(r,e){let t=[],n=r.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&t.push(r[s]);let o=e.map(s=>r[s]);return[t,o]}function Vo(r,e){let t=e.map(n=>1);return BN(r,t,e)}function RW(r,e,t){A(zw(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function Vw(r,e){if(zw(r,e))return null;let t=[];for(let n=0;n<e;++n)r.indexOf(n)===-1&&t.push(n);return r.forEach(n=>t.push(n)),t}function Hm(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function FW(r,e){let t=[];for(let n=e-r;n<e;++n)t.push(n);return t}function OW(r,e=null,t=!1){let n=v(r,"x","logSumExp"),o=Qt(e,n.shape),s=lr(n,o,!0),a=ue(n,s),i=Yt(a),l=ye(i,o),u=ar(l),c=Q(z(s,u.shape),u);if(t){let p=Vo(c.shape,o);return z(c,p)}return c}var Km=T({logSumExp_:OW});function PW(r,e){let t=v(r,"a","logicalAnd","bool"),n=v(e,"b","logicalAnd","bool");ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(yi,o)}var dr=T({logicalAnd_:PW});function MW(r){let t={x:v(r,"x","logicalNot","bool")};return D.runKernel(Qa,t)}var Ta=T({logicalNot_:MW});function LW(r,e){let t=v(r,"a","logicalOr","bool"),n=v(e,"b","logicalOr","bool");ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(el,o)}var $u=T({logicalOr_:LW});function zW(r,e){let t=v(r,"a","logicalXor","bool"),n=v(e,"b","logicalXor","bool");return ze(t.shape,n.shape),dr($u(r,e),Ta(dr(r,e)))}var Gw=T({logicalXor_:zW});function BW(r,e,t,n,o){let s=v(r,"x","maxPool"),a=1,i=s,l=!1;s.rank===3&&(l=!0,i=z(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),A(br(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),o!=null&&A(st(n),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let u={x:i},c={filterSize:e,strides:t,pad:n,dimRoundingMode:o},p=D.runKernel(fo,u,c);return l?z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Ea=T({maxPool_:BW});function VW(r,e=[1,1,1],t,n,o,s="NDHWC"){let a=v(r,"x","maxPool3d"),i=a,l=!1;a.rank===4&&(l=!0,i=z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),A(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),A(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),o!=null&&A(st(n),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let u={x:i},c={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},p=D.runKernel(pa,u,c);return l?z(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Xm=T({maxPool3d_:VW});function GW(r,e,t,n,o=!1){let a={x:v(r,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},l=D.runKernel(lu,a,i);return{result:l[0],indexes:l[1]}}var jw=T({maxPoolWithArgmax_:GW});function jW(r,e){let t=v(r,"a","maximum"),n=v(e,"b","maximum");[t,n]=Ge(t,n),t.dtype==="bool"&&(t=ne(t,"int32"),n=ne(n,"int32")),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(mo,o)}var Hr=T({maximum_:jW});function WW(r,e=null,t=!1){let o={x:v(r,"x","mean")},s={axis:e,keepDims:t};return D.runKernel(ho,o,s)}var gt=T({mean_:WW});function UW(r,e=null,t=!1){let o={x:v(r,"x","min")},s={axis:e,keepDims:t};return D.runKernel(go,o,s)}var zi=T({min_:UW});function qW(r,e){let t=v(r,"a","minimum"),n=v(e,"b","minimum");[t,n]=Ge(t,n),t.dtype==="bool"&&(t=ne(t,"int32"),n=ne(n,"int32")),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(xo,o)}var As=T({minimum_:qW});function HW(r,e,t){A(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let n=v(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);let o=t==="reflect"?1:0;for(let i=0;i<n.rank;i++)A(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),A(e[i][0]>=0&&e[i][0]<=n.shape[i]-o&&e[i][1]>=0&&e[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:e,mode:t},a={x:n};return D.runKernel(ma,a,s)}var Ym=T({mirrorPad_:HW});function KW(r,e){let t=v(r,"a","mod"),n=v(e,"b","mod");[t,n]=Ge(t,n);let o={a:t,b:n};return D.runKernel(bi,o)}var Zm=T({mod_:KW});function XW(r){let e=v(r,"x","square"),t={};return D.runKernel("Square",{x:e},t)}var Pe=T({square_:XW});function YW(r,e=null,t=!1){r=v(r,"x","moments");let n=Qt(e,r.shape),o=gt(r,n,t),s=o.shape;t||(s=Vo(o.shape,n));let a=Pe(ue(ne(r,"float32"),z(o,s))),i=gt(a,n,t);return{mean:o,variance:i}}var Qc=T({moments_:YW});function ZW(r,e,t,n){let o=v(e,"data","multiRNNCell"),s=ya(t,"c","multiRNNCell"),a=ya(n,"h","multiRNNCell"),i=o,l=[];for(let p=0;p<r.length;p++){let m=r[p](i,s[p],a[p]);l.push(m[0]),l.push(m[1]),i=m[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var JW=T({multiRNNCell_:ZW});function QW(r,e,t,n=!1){let o=v(r,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();let l={logits:a===1?z(o,[1,-1]):o},u={numSamples:e,seed:t,normalized:n},c=D.runKernel(uu,l,u);return a===1?z(c,[c.size]):c}var Ww=T({multinomial_:QW});function e4(r,e){let t=v(r,"a","notEqual"),n=v(e,"b","notEqual");[t,n]=Ge(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(wi,o)}var Go=T({notEqual_:e4});function xt(r,e="float32"){if(e==="complex64"){let n=xt(r,"float32"),o=xt(r,"float32");return bn(n,o)}let t=Oc(ft(r),e);return D.makeTensor(t,r,e)}function Ir(r,e="float32"){if(e==="complex64"){let n=Ir(r,"float32"),o=xt(r,"float32");return bn(n,o)}let t=bm(ft(r),e);return D.makeTensor(t,r,e)}function t4(r){let t={x:v(r,"x","onesLike")};return D.runKernel(ds,t)}var tr=T({onesLike_:t4});function r4(r,e){let t=v(r,"v1","outerProduct"),n=v(e,"v2","outerProduct");A(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);let o=z(t,[-1,1]),s=z(n,[1,-1]);return je(o,s)}var n4=T({outerProduct_:r4});function o4(r,e,t=0){let n=v(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:e,constantValue:t},s={x:n};return D.runKernel(wo,s,o)}var Rr=T({pad_:o4});function s4(r,e,t=0){return A(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Rr(r,[e],t)}var i4=T({pad1d_:s4});function a4(r,e,t=0){return A(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Rr(r,e,t)}var l4=T({pad2d_:a4});function u4(r,e,t=0){return A(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Rr(r,e,t)}var c4=T({pad3d_:u4});function p4(r,e,t=0){return A(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Rr(r,e,t)}var m4=T({pad4d_:p4});function f4(r,e,t){let n=v(r,"x","spaceToBatchND");A(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),A(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),A(n.shape.reduce((a,i,l)=>l>0&&l<=e.length?a&&(i+t[l-1][0]+t[l-1][1])%e[l-1]==0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let o={x:n},s={blockShape:e,paddings:t};return D.runKernel(ha,o,s)}var Aa=T({spaceToBatchND_:f4});function g4(r,e,t,n,o,s){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let a=v(r,"x","maxPool"),i=a,l=!1;a.rank===3&&(l=!0,i=z(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(br(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let u=_w(i.shape,e,s,o,n),c=[u.dilationHeight,u.dilationWidth],p;n==="same"?p=h4([u.filterHeight,u.filterWidth],c):p=[[0,0],[0,0]];let m=c[0]===1&&c[1]===1,[f,d]=d4([u.inHeight,u.inWidth],c,p),h=m?n:"valid",g=m?i:Aa(i,c,f),b=(t==="avg"?()=>va(g,e,s,h):()=>Ea(g,e,s,h))(),w=m?b:Ca(b,c,d);return l?z(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function d4(r,e,t){let n=t.map(c=>c[0]),o=t.map(c=>c[1]),s=r.concat(n,o),a=e.map((c,p)=>(c-s[p]%c)%c),i=o.map((c,p)=>c+a[p]),l=e.map((c,p)=>[n[p],i[p]]),u=e.map((c,p)=>[0,a[p]]);return[l,u]}function h4(r,e){let n=r.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),s=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],s[i]])}var Uw=T({pool_:g4});function x4(r,e){let t=v(r,"base","pow"),n=v(e,"exp","pow");[t,n]=Ge(t,n);let o={a:t,b:n};return D.runKernel(_o,o)}var Fr=T({pow_:x4});function y4(r,e){let t=v(r,"x","prelu"),n=v(e,"alpha","prelu"),o={x:t,alpha:n};return D.runKernel(ko,o)}var Da=T({prelu_:y4});function b4(r,e=null,t=!1){let n=v(r,"x","prod");n.dtype==="bool"&&(n=ne(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(Ci,o,s)}var Ru=T({prod_:b4});function w4(r,e,t){let n=ft(r),o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<n;s++)o[s]=e();return D.makeTensor(o,r,t)}var _4=T({rand_:w4});var yg=Dc(tS());var ep=class{constructor(e,t,n,o,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=yg.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,s,a;do o=2*this.random()-1,s=2*this.random()-1,a=o*o+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*o*i,t=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Jw=class{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;let s=o||Math.random();this.randu=yg.alea(s.toString()),this.randn=new ep(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,s,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},Qw=class{constructor(e=0,t=1,n,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=yg.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function T4(r,e,t=1,n="float32",o){if(t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new Jw(e,t,n,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var E4=T({randomGamma_:T4});function A4(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new ep(e,t,n,!1,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var bg=T({randomNormal_:A4});function D4(r,e=0,t=1,n="float32",o){let s=Ce(r,n),a=new Qw(e,t,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var Ds=T({randomUniform_:D4});function tp(r,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:e,step:t,dtype:n};return D.runKernel(fa,{},o)}function $4(r){let t={input:v(r,"input","real")};return D.runKernel(cu,t)}var ul=T({real_:$4});function R4(r){let t={x:v(r,"x","reciprocal")};return D.runKernel(Ii,t)}var Jm=T({reciprocal_:R4});function F4(r){let t={x:v(r,"x","relu")};return D.runKernel(vo,t)}var Nr=T({relu_:F4});function O4(r){let t={x:v(r,"x","relu6")};return D.runKernel(Io,t)}var Ou=T({relu6_:O4});function P4(r,e){let n={x:v(r,"x","reverse")},o={dims:e};return D.runKernel(No,n,o)}var Kt=T({reverse_:P4});function M4(r){let e=v(r,"x","reverse");return A(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Kt(e,0)}var L4=T({reverse1d_:M4});function z4(r,e){let t=v(r,"x","reverse");return A(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Kt(t,e)}var B4=T({reverse2d_:z4});function V4(r,e){let t=v(r,"x","reverse");return A(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Kt(t,e)}var G4=T({reverse3d_:V4});function j4(r,e){let t=v(r,"x","reverse");return A(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Kt(t,e)}var W4=T({reverse4d_:j4});function U4(r){let t={x:v(r,"x","round")};return D.runKernel(So,t)}var Qm=T({round_:U4});function q4(r){let t={x:v(r,"x","rsqrt")};return D.runKernel(To,t)}var Pu=T({rsqrt_:q4});function le(r,e){if((nr(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&nr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Gr(r,[],[],e)}function H4(r){let t={x:v(r,"x","selu")};return D.runKernel(Si,t)}var Mu=T({selu_:H4});function K4(r,e,t,n,o,s=[1,1],a="NHWC"){let i=v(r,"x","separableConv2d"),l=v(e,"depthwiseFilter","separableConv2d"),u=v(t,"pointwiseFilter","separableConv2d"),c=i,p=!1;if(i.rank===3&&(p=!0,c=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),A(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),A(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),A(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),A(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let m=l.shape[2],f=l.shape[3];A(u.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${u.shape[2]}.`);let d=Ns(c,l,n,o,a,s),g=Ur(d,u,1,"valid",a);return p?z(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var ef=T({separableConv2d_:K4});async function X4(r,e){let t=v(r,"x","setdiff1d"),n=v(e,"y","setdiff1d");A(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),A(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),A(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await t.data(),s=await n.data(),a=new Set(s),i=0;for(let c=0;c<o.length;c++)a.has(o[c])||i++;let l=new ct([i],t.dtype),u=new ct([i],"int32");for(let c=0,p=0;c<o.length;c++)a.has(o[c])||(l.values[p]=o[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]}var e_=X4;function Y4(r){let t={x:v(r,"x","sign")};return D.runKernel(Ei,t)}var tf=T({sign_:Y4});function Z4(r){let t={x:v(r,"x","sin")};return D.runKernel(Eo,t)}var Lu=T({sin_:Z4});function J4(r){let t={x:v(r,"x","sinh")};return D.runKernel(Ti,t)}var zu=T({sinh_:J4});function Q4(r,e,t){let n=v(r,"x","slice1d");return A(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Fe(n,[e],[t])}var rf=T({slice1d_:Q4});function eU(r,e,t){let n=v(r,"x","slice2d");return A(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Fe(n,e,t)}var wg=T({slice2d_:eU});function tU(r,e,t){let n=v(r,"x","slice3d");return A(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Fe(n,e,t)}var nf=T({slice3d_:tU});function rU(r,e,t){let n=v(r,"x","slice4d");return A(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Fe(n,e,t)}var rp=T({slice4d_:rU});function nU(r,e=-1){let t=v(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let n={logits:t},o={dim:e};return D.runKernel(Ro,n,o)}var $a=T({softmax_:nU});function oU(r){A(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(tu,e)}var Ra=T({fft_:oU});function sU(r){A(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(ru,e)}var Bi=T({ifft_:sU});function iU(r){let e=r.shape[r.shape.length-1],t=r.size/e,n;if(e<=2){let o=z(r,[t,e]);n=Bi(o)}else{let o=[t,2*(e-1)],s=z(ul(r),[t,e]),a=z(Tu(r),[t,e]),i=Kt(Fe(s,[0,1],[t,e-2]),1),l=P(Kt(Fe(a,[0,1],[t,e-2]),1),le(-1)),u=Qe([s,i],1),c=Qe([a,l],1),p=z(bn(u,c),[o[0],o[1]]);n=Bi(p)}if(n=ul(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=z(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var Bu=T({irfft_:iU});function aU(r,e,t=0){let o={x:v(r,"x","split")},s={numOrSizeSplits:e,axis:t};return D.runKernel(bs,o,s)}var ur=T({split_:aU});function lU(r,e){A(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],n=r.size/t,o;if(e!=null&&e<t){let d=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,o=Fe(r,d,h),t=e}else if(e!=null&&e>t){let d=r.shape.map(h=>h);d[r.shape.length-1]=e-t,o=Qe([r,xt(d)],r.shape.length-1),t=e}else o=r;let s=Ie(o),a=z(bn(o,s),[n,t]),i=Ra(a),l=Math.floor(t/2)+1,u=ul(i),c=Tu(i),p=ur(u,[l,t-l],u.shape.length-1),m=ur(c,[l,t-l],c.shape.length-1),f=o.shape.slice();return f[o.shape.length-1]=l,z(bn(p[0],m[0]),f)}var Fa=T({rfft_:lU});function uU(r){let t={x:v(r,"x","sqrt")};return D.runKernel(Do,t)}var yt=T({sqrt_:uU});function cU(r,e){let t=v(r,"a","squaredDifference"),n=v(e,"b","squaredDifference");[t,n]=Ge(t,n),ze(t.shape,n.shape);let o={a:t,b:n},s={};return D.runKernel(Fo,o,s)}var Vu=T({squaredDifference_:cU});function pU(r,e){let t=v(r,"x","squeeze");return z(t,Ab(t.shape,e).newShape)}var _n=T({squeeze_:pU});function mU(r,e=0){let t=ya(r,"tensors","stack","string_or_numeric");A(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&A(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let n=t,o={axis:e};return D.runKernel(hs,n,o)}var Vt=T({stack_:mU});function fU(r,e=0){let n={x:v(r,"x","step")},o={alpha:e};return D.runKernel(Rn,n,o)}var $s=T({step_:fU});function dU(r,e,t,n,o=0,s=0,a=0,i=0,l=0){let c={x:v(r,"x","stridedSlice")},p={begin:e,end:t,strides:n,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l};return D.runKernel(Di,c,p)}var of=T({stridedSlice_:dU});function hU(r){let t={x:v(r,"x","tan")};return D.runKernel($i,t)}var sf=T({tan_:hU});function Gt(r,e){En(r);let t=vr(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Gr(r,null,t,e)}function Vi(r,e,t){if(En(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=vr(r,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Gr(r,e,n,t)}function gU(r,e,t){if(En(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=vr(r,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Gr(r,e,n,t)}function xU(r,e,t){if(En(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=vr(r,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Gr(r,e,n,t)}function yU(r,e,t){if(En(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=vr(r,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,Gr(r,e,n,t)}function bU(r,e=1,t=!0){let n=v(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);let s={x:n},a={k:e,sorted:t},[i,l]=D.runKernel(Ri,s,a);return{values:i,indices:l}}var af=T({topk_:bU});function wU(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new ep(e,t,n,!0,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Gu=T({truncatedNormal_:wU});function _U(r,e=0){let t=v(r,"x","unique","string_or_numeric");A(t.rank>0,()=>"The input tensor must be at least 1D");let n={x:t},o={axis:e},[s,a]=D.runKernel(du,n,o);return{values:s,indices:a}}var np=T({unique_:_U});function kU(r,e,t){let n=v(r,"x","unsortedSegmentSum"),o=v(e,"segmentIds","unsortedSegmentSum","int32");A(st(t),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},a={numSegments:t};return D.runKernel(xa,s,a)}var lf=T({unsortedSegmentSum_:kU});function vU(r,e=0){let t=v(r,"x","unstack","string_or_numeric");A(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let n={value:t},o={axis:e};return D.runKernel(ws,n,o)}var cr=T({unstack_:vU});function t_(r,e=!0,t,n){return D.makeVariable(r,e,t,n)}function r_(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let n=Ce(r,"int32"),o=Ce([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let a=n.indexToLoc(t[s]),i=s*r.length;o.values.set(a,i)}return o.toTensor()}async function CU(r){let e=v(r,"condition","whereAsync","bool"),t=await e.data(),n=r_(e.shape,t);return r!==e&&e.dispose(),n}var uf=CU;async function IU(r,e,t){let n=v(r,"tensor","boolMask"),o=v(e,"mask","boolMask","bool"),s=t==null?0:t,a=o.rank,i=n.shape;A(a>0,()=>"mask cannot be scalar"),St(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let h=s;h<s+a;h++)l*=i[h];let u=i.slice(0,s).concat([l],i.slice(s+a)),c=z(n,u),p=z(o,[-1]),m=await uf(p),f=_n(m,[1]),d=Bo(c,f,s);return r!==n&&n.dispose(),e!==o&&o.dispose(),f.dispose(),c.dispose(),p.dispose(),m.dispose(),d}var NU=IU;function SU(r,e="euclidean",t=null,n=!1){r=v(r,"x","norm");let o=rS(r,e,t),s=o.shape;if(n){let a=Qt(t,r.shape);s=Vo(o.shape,a)}return z(o,s)}function rS(r,e,t=null){if(r.rank===0)return Et(r);if(r.rank!==1&&t===null)return rS(z(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return ye(Et(r),t);if(e===Infinity)return lr(Et(r),t);if(e===-Infinity)return zi(Et(r),t);if(e==="euclidean"||e===2)return yt(ye(Fr(Et(r),le(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return lr(ye(Et(r),t[0]),t[1]-1);if(e===Infinity)return lr(ye(Et(r),t[1]),t[0]);if(e===-Infinity)return zi(ye(Et(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return yt(ye(Pe(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var ju=T({norm_:SU});function TU(r,e,t,n,o=!0){let s=v(r,"v","movingAverage"),a=v(e,"x","movingAverage"),i=v(t,"decay","movingAverage");Yb(s,a),A(Vr(s.shape,a.shape),()=>"Shape mismatch in v and x");let l=le(1),u=ue(l,i),c=P(ue(a,s),u);if(o){A(n!=null,()=>"When using zeroDebias: true, step is required.");let p=v(n,"step","movingAverage");c=de(c,ue(l,Fr(i,p)))}return Q(s,c)}var EU=T({movingAverage_:TU});function AU(r,e,t){let n=v(r,"indices","scatterND","int32"),o=v(e,"updates","scatterND");lg(o,n,t);let s={indices:n,updates:o},a={shape:t};return D.runKernel(Ni,s,a)}var n_=T({scatterND_:AU});function nS(r,e,t,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let a=e.size;if(!(e.rank===0||e.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function DU(r,e,t,n=0){let o=v(r,"sparseIndices","sparseToDense","int32"),s=v(e,"sparseValues","sparseToDense"),a=v(n,"defaultValue","sparseToDense",s.dtype);nS(o,s,t,a);let i={sparseIndices:o,sparseValues:s,defaultValue:a},l={outputShape:t};return D.runKernel(fu,i,l)}var cf=T({sparseToDense_:DU});function $U(r,e){let t=v(e,"indices","gatherND","int32"),o={params:v(r,"x","gatherND"),indices:t};return D.runKernel(ci,o)}var o_=T({gatherND_:$U});function oS(r,e){if(e==null)return r.shape.slice();if(Vr(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let n=0;n<r.shape.length;n++)e[n]==null&&r.shape[n]!=null?t.push(r.shape[n]):t.push(e[n]);return t}return e}function RU(r,e,t,n){let o=v(r,"x","dropout");if(A(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),A(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof Ve?o.clone():o;let s=oS(o,t),a=1-e,i=de(Ts(Q(Ds(s,0,1,"float32",n),a)),a);return P(o,i)}var s_=T({dropout_:RU});function i_(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function pf(r,e,t){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+n-1);o[s]=e-t*Math.cos(a)}return Gt(o,"float32")}async function FU(r,e,t=1){let n=v(r,"predictions","inTopK"),o=v(e,"targets","inTopK");A(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),A(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),St(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];A(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let a=await n.data(),i=await o.data(),[l,u]=[a.length/s,s],c=Db("bool",l);for(let p=0;p<l;p++){let m=p*u,f=a.subarray(m,m+u),d=[];for(let h=0;h<f.length;h++)d.push({value:f[h],index:h});d.sort((h,g)=>g.value-h.value),c[p]=0;for(let h=0;h<t;h++)if(d[h].index===i[p]){c[p]=1;break}}return r!==n&&n.dispose(),e!==o&&o.dispose(),$r(c,o.shape,"bool")}var OU=FU;var jo={};Ye(jo,{conv2d:()=>LU,depthwiseConv2d:()=>GU,matMul:()=>WU});function PU(r,e,t,n,o,s="NHWC",a){let i=r;r.rank===3&&(i=z(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=e;l.rank===3&&(l=z(e,[1,e.shape[0],e.shape[1],e.shape[2]])),A(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),A(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),A(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let u=s==="NHWC"?i.shape[3]:i.shape[1],c=s==="NHWC"?l.shape[3]:l.shape[1];A(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),A(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),a!=null&&A(st(o),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);let p={x:i,dy:l},m={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,filterShape:t};return D.runKernel(Hl,p,m)}var op=T({conv2DBackpropFilter_:PU});function Wu(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return P(r,$s(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Uu(r,e){let t=e,n=It(r.shape,e.shape);return n.length>0&&(t=ye(t,n)),z(t,r.shape)}function qu(r,e,t,n){if(e==="linear")return r;if(e==="relu")return Nr(r);if(e==="elu")return Ss(r);if(e==="relu6")return Ou(r);if(e==="prelu")return Da(r,t);if(e==="leakyrelu")return Sa(r,n);throw new Error(`Unknown fused activation ${e}.`)}var Hu=(r,e)=>!(r>0)||e==="linear";function MU({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Hu(D.state.gradientDepth,l)===!1){let k=Ur(r,e,t,n,o,s,a);return i!=null&&(k=Q(k,i)),qu(k,l,u,c)}let p=v(r,"x","conv2d"),m=v(e,"filter","conv2d"),f=p,d=!1;p.rank===3&&(d=!0,f=z(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),A(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),a!=null&&A(st(n),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`),A(f.shape[3]===m.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${m.shape[2]}.`),A(br(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),A(o==="NHWC",()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);let h=ku(f.shape,m.shape,t,s,n,a),g;i!=null&&(g=v(i,"bias","fused conv2d"),[g]=Ge(g,p),ze(h.outShape,g.shape));let x;u!=null&&(x=v(u,"prelu weights","fused conv2d"));let b=(k,E)=>{let[S,R,F,L]=E,G=Wu(k,F,l);A(Pn(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let j=Zc(R.shape,G,S,t,n),U=op(R,G,S.shape,t,n),Y=[j,U];if(L!=null){let K=Uu(L,G);Y.push(K)}return Y},w={x:f,filter:m,bias:g,preluActivationWeights:x},_={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return i==null?qr((E,S,R)=>{let F=D.runKernel(vs,w,_);return R([S,E,F]),d&&(F=z(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:b}})(f,m):qr((E,S,R,F)=>{let L=D.runKernel(vs,w,_);return F([S,E,L,R]),d&&(L=z(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:b}})(f,m,g)}var LU=T({fusedConv2d_:MU});function zU(r,e,t,n,o,s=[1,1],a){let i=r;r.rank===3&&(i=z(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=e;l.rank===3&&(l=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={x:i,dy:l},c={strides:n,pad:o,dimRoundingMode:a,dilations:s,filterShape:t};return D.runKernel(Zl,u,c)}var _g=T({depthwiseConv2dNativeBackpropFilter_:zU});function BU(r,e,t,n,o,s=[1,1],a){let i=e,l=!1;e.rank===3&&(l=!0,i=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={dy:i,filter:t},c={strides:n,pad:o,dimRoundingMode:a,dilations:s,inputShape:r},p=D.runKernel(Jl,u,c);return l?z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var kg=T({depthwiseConv2dNativeBackpropInput_:BU});function VU({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Hu(D.state.gradientDepth,l)===!1){let k=Ns(r,e,t,n,o,s,a);return i!=null&&(k=Q(k,i)),qu(k,l,u,c)}let p=v(r,"x","depthwiseConv2d"),m=v(e,"filter","depthwiseConv2d"),f=p,d=!1;p.rank===3&&(d=!0,f=z(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),A(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),A(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),A(br(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),a!=null&&A(st(n),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${n}.`);let h=ku(f.shape,m.shape,t,s,n,a,!0),g;i!=null&&(g=v(i,"bias","fused conv2d"),[g]=Ge(g,p),ze(h.outShape,g.shape));let x;u!=null&&(x=v(u,"prelu weights","fused depthwiseConv2d"));let b=(k,E)=>{A(Pn(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[S,R,F,L]=E,G=Wu(k,F,l),j=kg(R.shape,G,S,t,n,s,a),U=_g(R,G,S.shape,t,n,s,a);if(L!=null){let Y=Uu(g,G);return[j,U,Y]}return[j,U]},w={x:f,filter:m,bias:g,preluActivationWeights:x},_={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return i==null?qr((E,S,R)=>{let F=D.runKernel(Cs,w,_);return R([S,E,F]),d&&(F=z(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:b}})(f,m):qr((E,S,R,F)=>{let L=D.runKernel(Cs,w,_);return F([S,E,L,R]),d&&(L=z(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:b}})(f,m,g)}var GU=T({fusedDepthwiseConv2d_:VU});function jU({a:r,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i}){if(Hu(D.state.gradientDepth,s)===!1){let L=je(r,e,t,n);return o!=null&&(L=Q(L,o)),qu(L,s,a,i)}let l=v(r,"a","fused matMul"),u=v(e,"b","fused matMul");[l,u]=Ge(l,u);let c=t?l.shape[l.rank-2]:l.shape[l.rank-1],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],m=t?l.shape[l.rank-1]:l.shape[l.rank-2],f=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=l.shape.slice(0,-2),h=u.shape.slice(0,-2),g=ft(d),x=ft(h);A(l.rank>=2&&u.rank>=2&&l.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`),A(Vr(d,h),()=>`Error in fused matMul: outer dimensions (${d}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`),A(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${n} must match.`);let b=l.shape.slice(0,-2).concat([m,f]),w=t?z(l,[g,c,m]):z(l,[g,m,c]),_=n?z(u,[x,f,p]):z(u,[x,p,f]),k;o!=null&&(k=v(o,"bias","fused matMul"),[k]=Ge(k,l),ze(b,k.shape));let E;a!=null&&(E=v(a,"prelu weights","fused matMul"));let S=(L,G)=>{let[j,U,Y,K]=G,Z=Wu(z(L,Y.shape),Y,s),te,X;if(!t&&!n?(te=je(Z,U,!1,!0),X=je(j,Z,!0,!1)):!t&&n?(te=je(Z,U,!1,!1),X=je(Z,j,!0,!1)):t&&!n?(te=je(U,Z,!1,!0),X=je(j,Z,!1,!1)):(te=je(U,Z,!0,!0),X=je(Z,j,!0,!0)),o!=null){let re=Uu(K,Z);return[te,X,re]}else return[te,X]},R={a:w,b:_,bias:k,preluActivationWeights:E},F={transposeA:t,transposeB:n,activation:s,leakyreluAlpha:i};return o==null?qr((G,j,U)=>{let Y=D.runKernel(ks,R,F);return U([G,j,Y]),{value:z(Y,b),gradFunc:S}})(w,_):qr((G,j,U,Y)=>{let K=D.runKernel(ks,R,F);return Y([G,j,K,U]),{value:z(K,b),gradFunc:S}})(w,_,k)}var WU=T({fusedMatMul_:jU});function UU(r){return pf(r,.54,.46)}var sS=T({hammingWindow_:UU});function qU(r){return pf(r,.5,.5)}var vg=T({hannWindow_:qU});function HU(r,e,t,n=!1,o=0){let s=0,a=[];for(;s+e<=r.size;)a.push(Fe(r,s,e)),s+=t;if(n)for(;s<r.size;){let i=s+e-r.size,l=Qe([Fe(r,s,e-i),Na([i],o)]);a.push(l),s+=t}return a.length===0?Vi([],[0,e]):z(Qe(a),[a.length,e])}var Cg=T({frame_:HU});function KU(r,e,t,n,o=vg){n==null&&(n=i_(e));let s=Cg(r,e,t),a=P(s,o(e)),i=[];for(let l=0;l<s.shape[0];l++)i.push(Fa(Fe(a,[l,0],[1,e]),n));return Qe(i)}var iS=T({stft_:KU});function XU(r,e,t,n,o="bilinear",s=0){let a=v(r,"image","cropAndResize"),i=v(e,"boxes","cropAndResize","float32"),l=v(t,"boxInd","cropAndResize","int32"),u=i.shape[0];A(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),A(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),A(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),A(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),A(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),A(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let c={image:a,boxes:i,boxInd:l},p={method:o,extrapolationValue:s,cropSize:n};return D.runKernel(ni,c,p)}var aS=T({cropAndResize_:XU});function YU(r){let e=v(r,"image","flipLeftRight","float32");A(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return D.runKernel(ui,t,{})}var lS=T({flipLeftRight_:YU});function ZU(r,e,t=0,n=.5){let o=v(r,"image","rotateWithOffset","float32");A(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},a={radians:e,fillValue:t,center:n};return D.runKernel(Fi,s,a)}var uS=T({rotateWithOffset_:ZU});function Wo(r,e,t,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return t=Math.min(t,a),A(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),A(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),A(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),A(e.rank===1,()=>"scores must be a 1D tensor"),A(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),A(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function JU(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppression"),a=v(e,"scores","nonMaxSuppression"),i=Wo(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let l={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return D.runKernel(_i,{boxes:s,scores:a},l)}var cS=T({nonMaxSuppression_:JU});function pS(r,e,t){let n=QU(r,e,t),o=n<0?-(n+1):n;r.splice(o,0,e)}function QU(r,e,t){return tq(r,e,t||eq)}function eq(r,e){return r>e?1:r<e?-1:0}function tq(r,e,t){let n=0,o=r.length,s=0,a=!1;for(;n<o;){s=n+(o-n>>>1);let i=t(e,r[s]);i>0?n=s+1:(o=s,a=!i)}return a?n:-n-1}function l_(r,e,t,n,o){return a_(r,e,t,n,o,0)}function u_(r,e,t,n,o,s){return a_(r,e,t,n,o,0,!1,s,!0)}function c_(r,e,t,n,o,s){return a_(r,e,t,n,o,s,!0)}function a_(r,e,t,n,o,s,a=!1,i=!1,l=!1){let u=[];for(let g=0;g<e.length;g++)e[g]>o&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort(mS);let c=s>0?-.5/s:0,p=[],m=[];for(;p.length<t&&u.length>0;){let g=u.pop(),{score:x,boxIndex:b,suppressBeginIndex:w}=g;if(x<o)break;let _=!1;for(let k=p.length-1;k>=w;--k){let E=rq(r,b,p[k]);if(E>=n){_=!0;break}if(g.score=g.score*nq(n,c,E),g.score<=o)break}g.suppressBeginIndex=p.length,_||(g.score===x?(p.push(b),m.push(g.score)):g.score>o&&pS(u,g,mS))}let f=p.length,d=t-f;i&&d>0&&(p.push(...new Array(d).fill(0)),m.push(...new Array(d).fill(0)));let h={selectedIndices:p};return a&&(h.selectedScores=m),l&&(h.validOutputs=f),h}function rq(r,e,t){let n=r.subarray(e*4,e*4+4),o=r.subarray(t*4,t*4+4),s=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),u=Math.min(o[0],o[2]),c=Math.min(o[1],o[3]),p=Math.max(o[0],o[2]),m=Math.max(o[1],o[3]),f=(i-s)*(l-a),d=(p-u)*(m-c);if(f<=0||d<=0)return 0;let h=Math.max(s,u),g=Math.max(a,c),x=Math.min(i,p),b=Math.min(l,m),w=Math.max(x-h,0)*Math.max(b-g,0);return w/(f+d-w)}function nq(r,e,t){let n=Math.exp(e*t*t);return t<=r?n:0}function mS(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function oq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppressionAsync"),a=v(e,"scores","nonMaxSuppressionAsync"),i=Wo(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let l=await Promise.all([s.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:p}=l_(u,c,t,n,o);return s!==r&&s.dispose(),a!==e&&a.dispose(),Gt(p,"int32")}var fS=oq;function sq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=v(r,"boxes","nonMaxSuppression"),i=v(e,"scores","nonMaxSuppression"),l=Wo(a,i,t,n,o,s);t=l.maxOutputSize,n=l.iouThreshold,o=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:a,scores:i},c={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},p=D.runKernel(vi,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var dS=T({nonMaxSuppressionWithScore_:sq});async function iq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=v(r,"boxes","nonMaxSuppressionAsync"),i=v(e,"scores","nonMaxSuppressionAsync"),l=Wo(a,i,t,n,o,s);t=l.maxOutputSize,n=l.iouThreshold,o=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([a.data(),i.data()]),c=u[0],p=u[1],{selectedIndices:m,selectedScores:f}=c_(c,p,t,n,o,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Gt(m,"int32"),selectedScores:Gt(f)}}var hS=iq;function aq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=v(r,"boxes","nonMaxSuppression"),i=v(e,"scores","nonMaxSuppression"),l=Wo(a,i,t,n,o,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,m={boxes:a,scores:i},f={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:s},d=D.runKernel(ki,m,f);return{selectedIndices:d[0],validOutputs:d[1]}}var gS=T({nonMaxSuppressionPadded_:aq});async function lq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=v(r,"boxes","nonMaxSuppressionAsync"),i=v(e,"scores","nonMaxSuppressionAsync"),l=Wo(a,i,t,n,o,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,[m,f]=await Promise.all([a.data(),i.data()]),{selectedIndices:d,validOutputs:h}=u_(m,f,u,c,p,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Gt(d,"int32"),validOutputs:le(h,"int32")}}var xS=lq;function uq(r,e,t=!1,n=!1){let o=v(r,"images","resizeBilinear");A(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),A(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),A(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=z(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},l={alignCorners:t,halfPixelCenters:n,size:e},u=D.runKernel(Co,i,l);return a?z(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var Ig=T({resizeBilinear_:uq});function cq(r,e,t=!1,n=!1){let o=v(r,"images","resizeNearestNeighbor");A(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),A(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),A(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),A(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=z(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},l={alignCorners:t,halfPixelCenters:n,size:e},u=D.runKernel(da,i,l);return a?z(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var Ng=T({resizeNearestNeighbor_:cq});function pq(r,e,t){A(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),A(t%1==0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);let n=v(r,"a","bandPart");A(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,a]=n.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=s),t<0&&(t=a);let i=z(tp(0,s,1,"int32"),[-1,1]),l=tp(0,a,1,"int32"),u=ue(i,l),c=dr(Ln(u,le(+e,"int32")),tn(u,le(-t,"int32"))),p=xt([s,a],n.dtype);return z(Vt(cr(z(n,[-1,s,a])).map(m=>Rt(c,m,p))),o)}var yS=T({bandPart_:pq});function mq(r){let e;if(Array.isArray(r)){e=!1,A(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)A(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else e=!0,r=ur(r,r.shape[0],0).map(o=>_n(o,[0]));A(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],n=r;for(let o=0;o<r.length;++o)t.push(D.tidy(()=>{let s=n[o];if(o>0)for(let a=0;a<o;++a){let i=P(ye(P(t[a],s)),t[a]);s=ue(s,i)}return de(s,ju(s,"euclidean"))}));return e?Vt(t,0):t}var bS=T({gramSchmidt_:mq});function fq(r,e=!1){if(A(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return wS(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((l,u)=>l*u),n=cr(z(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(l=>{let[u,c]=wS(l,e);o.push(u),s.push(c)});let a=z(Vt(o,0),r.shape),i=z(Vt(s,0),r.shape);return[a,i]}}function wS(r,e=!1){return D.tidy(()=>{A(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],n=r.shape[1],o=Jc(t),s=Fn(r),a=Vi([[1]],[1,1]),i=Fn(a),l=t>=n?n:t;for(let u=0;u<l;++u){let c=s,p=i,m=o;[i,s,o]=D.tidy(()=>{let f=Fe(s,[u,u],[t-u,1]),d=ju(f),h=Fe(s,[u,u],[1,1]),g=Rt(er(h,0),Vi([[-1]]),Vi([[1]])),x=ue(h,P(g,d)),b=de(f,x);b.shape[0]===1?i=Fn(a):i=Qe([a,Fe(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let w=Ue(de(je(g,x),d)),_=Fe(s,[u,0],[t-u,n]),k=P(w,i),E=We(i);if(u===0)s=ue(_,je(k,je(E,_)));else{let F=ue(_,je(k,je(E,_)));s=Qe([Fe(s,[0,0],[u,n]),F],0)}let S=We(k),R=Fe(o,[0,u],[t,o.shape[1]-u]);if(u===0)o=ue(R,je(je(R,i),S));else{let F=ue(R,je(je(R,i),S));o=Qe([Fe(o,[0,0],[t,u]),F],1)}return[i,s,o]}),Ee([c,p,m])}return!e&&t>n&&(o=Fe(o,[0,0],[t,n]),s=Fe(s,[0,0],[n,n])),[o,s]})}var _S=T({qr_:fq});var jt;(function(r){r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(jt||(jt={}));function dq(r,e,t=jt.SUM_BY_NONZERO_WEIGHTS){let n=v(r,"losses","computeWeightedLoss"),o=null;e!=null&&(o=v(e,"weights","computeWeightedLoss"));let s=o==null?n:P(n,o);if(t===jt.NONE)return s;if(t===jt.SUM)return ye(s);if(t===jt.MEAN){if(o==null)return gt(s);{let a=n.size/o.size,i=de(ye(s),ye(o));return a>1?de(i,le(a)):i}}if(t===jt.SUM_BY_NONZERO_WEIGHTS){if(o==null)return de(ye(s),le(n.size));{let a=P(o,Ir(n.shape)),i=ne(ye(Go(a,le(0))),"float32");return de(ye(s),i)}}throw Error(`Unknown reduction: ${t}`)}var Sr=T({computeWeightedLoss_:dq});function hq(r,e,t,n=jt.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","absoluteDifference"),s=v(e,"predictions","absoluteDifference"),a=null;t!=null&&(a=v(t,"weights","absoluteDifference")),St(o.shape,s.shape,"Error in absoluteDifference: ");let i=Et(ue(o,s));return Sr(i,a,n)}var kS=T({absoluteDifference_:hq});function gq(r,e,t,n,o=jt.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","cosineDistance"),a=v(e,"predictions","cosineDistance"),i=null;n!=null&&(i=v(n,"weights","cosineDistance")),St(s.shape,a.shape,"Error in cosineDistance: ");let l=le(1),u=ue(l,ye(P(s,a),t,!0));return Sr(u,i,o)}var vS=T({cosineDistance_:gq});function xq(r,e,t,n=jt.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","hingeLoss"),s=v(e,"predictions","hingeLoss"),a=null;t!=null&&(a=v(t,"weights","hingeLoss")),St(o.shape,s.shape,"Error in hingeLoss: ");let i=le(1);o=ue(P(le(2),o),i);let l=Nr(ue(i,P(o,s)));return Sr(l,a,n)}var CS=T({hingeLoss_:xq});function yq(r,e,t,n=1,o=jt.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","huberLoss"),a=v(e,"predictions","huberLoss"),i=null;t!=null&&(i=v(t,"weights","huberLoss")),St(s.shape,a.shape,"Error in huberLoss: ");let l=le(n),u=Et(ue(a,s)),c=As(u,l),p=ue(u,c),m=Q(P(le(.5),Pe(c)),P(l,p));return Sr(m,i,o)}var IS=T({huberLoss_:yq});function bq(r,e,t,n=1e-7,o=jt.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","logLoss"),a=v(e,"predictions","logLoss"),i=null;t!=null&&(i=v(t,"weights","logLoss")),St(s.shape,a.shape,"Error in logLoss: ");let l=le(1),u=le(n),c=Ue(P(s,ar(Q(a,u)))),p=P(ue(l,s),ar(Q(ue(l,a),u))),m=ue(c,p);return Sr(m,i,o)}var NS=T({logLoss_:bq});function wq(r,e,t,n=jt.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","meanSquaredError"),s=v(e,"predictions","meanSquaredError"),a=null;t!=null&&(a=v(t,"weights","meanSquaredError")),St(o.shape,s.shape,"Error in meanSquaredError: ");let i=Vu(o,s);return Sr(i,a,n)}var SS=T({meanSquaredError_:wq});function _q(r,e){let t=v(r,"labels","sigmoidCrossEntropyWithLogits"),n=v(e,"logits","sigmoidCrossEntropyWithLogits");St(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=Nr(n),s=P(n,t),a=Au(Yt(Ue(Et(n))));return Q(ue(o,s),a)}function kq(r,e,t,n=0,o=jt.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"multiClassLabels","sigmoidCrossEntropy"),a=v(e,"logits","sigmoidCrossEntropy"),i=null;if(t!=null&&(i=v(t,"weights","sigmoidCrossEntropy")),St(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){let u=le(n),c=le(1),p=le(.5);s=Q(P(s,ue(c,u)),P(p,u))}let l=_q(s,a);return Sr(l,i,o)}var TS=T({sigmoidCrossEntropy_:kq});function vq(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return qr((o,s,a)=>{let l=Km(s,[t],!0),u=ue(ne(s,"float32"),l);a([o,u]);let c=Ue(P(u,o));return{value:ye(c,[t]),gradFunc:(f,d)=>{let[h,g]=d,x=Vo(f.shape,[t]);return[P(z(f,x),ue(ne(h,"float32"),Yt(g))),P(z(f,x),ue(Yt(g),ne(h,"float32")))]}}})(r,e)}function Cq(r,e,t,n=0,o=jt.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"onehotLabels","softmaxCrossEntropy"),a=v(e,"logits","softmaxCrossEntropy"),i=null;if(t!=null&&(i=v(t,"weights","softmaxCrossEntropy")),St(s.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){let u=le(n),c=le(1),p=le(s.shape[1]);s=Q(P(s,ue(c,u)),de(u,p))}let l=vq(s,a);return Sr(l,i,o)}var ES=T({softmaxCrossEntropy_:Cq});var Iq={fft:Ra,ifft:Bi,rfft:Fa,irfft:Bu},Nq={hammingWindow:sS,hannWindow:vg,frame:Cg,stft:iS},Rs={flipLeftRight:lS,resizeNearestNeighbor:Ng,resizeBilinear:Ig,rotateWithOffset:uS,cropAndResize:aS,nonMaxSuppression:cS,nonMaxSuppressionAsync:fS,nonMaxSuppressionWithScore:dS,nonMaxSuppressionWithScoreAsync:hS,nonMaxSuppressionPadded:gS,nonMaxSuppressionPaddedAsync:xS},p_={bandPart:yS,gramSchmidt:bS,qr:_S},Sq={absoluteDifference:kS,computeWeightedLoss:Sr,cosineDistance:vS,hingeLoss:CS,huberLoss:IS,logLoss:NS,meanSquaredError:SS,sigmoidCrossEntropy:TS,softmaxCrossEntropy:ES};var Or=class extends cg{minimize(e,t=!1,n){let{value:o,grads:s}=this.computeGradients(e,n);if(n!=null){let a=n.map(i=>({name:i.name,tensor:s[i.name]}));this.applyGradients(a)}else this.applyGradients(s);return Ee(s),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return hg(e,t)}dispose(){this.iterations_!=null&&Ee(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:le(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Or,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var sp=class extends Or{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:V(()=>Ie(s).variable(a))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:V(()=>Ie(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let l=this.accumulatedGrads[o].variable,u=this.accumulatedUpdates[o].variable;V(()=>{let c=Q(P(l,this.rho),P(Pe(i),1-this.rho)),p=P(de(yt(Q(u,this.epsilon)),yt(Q(l,this.epsilon))),i),m=Q(P(u,this.rho),P(Pe(p),1-this.rho));l.assign(c),u.assign(m);let f=Q(P(p,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ee(this.accumulatedGrads.map(e=>e.variable)),Ee(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};sp.className="Adadelta";en(sp);var ip=class extends Or{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];if(this.accumulatedGrads[o]==null){let l=!1;this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:V(()=>Na(s.shape,this.initialAccumulatorValue).variable(l))}}let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let i=this.accumulatedGrads[o].variable;V(()=>{let l=Q(i,Pe(a));i.assign(l);let u=Q(P(de(a,yt(Q(l,D.backend.epsilon()))),-this.learningRate),s);s.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ee(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};ip.className="Adagrad";en(ip);var ap=class extends Or{constructor(e,t,n,o=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],V(()=>{this.accBeta1=le(t).variable(),this.accBeta2=le(n).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);V(()=>{let n=ue(1,this.accBeta1),o=ue(1,this.accBeta2);t.forEach((s,a)=>{let i=D.registeredVariables[s],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:V(()=>Ie(i).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${s}/v`,variable:V(()=>Ie(i).variable(l))});let u=Array.isArray(e)?e[a].tensor:e[s];if(u==null)return;let c=this.accumulatedFirstMoment[a].variable,p=this.accumulatedSecondMoment[a].variable,m=Q(P(c,this.beta1),P(u,1-this.beta1)),f=Q(P(p,this.beta2),P(Pe(u),1-this.beta2)),d=de(m,n),h=de(f,o);c.assign(m),p.assign(f);let g=Q(P(de(d,Q(yt(h),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(P(this.accBeta1,this.beta1)),this.accBeta2.assign(P(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ee(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),V(()=>{this.accBeta1.assign(Fr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Fr(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};ap.className="Adam";en(ap);var lp=class extends Or{constructor(e,t,n,o=null,s=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=o,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],V(()=>{this.iteration=le(0).variable(),this.accBeta1=le(t).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);V(()=>{let n=ue(1,this.accBeta1),o=de(-this.learningRate,Q(P(this.iteration,this.decay),1));t.forEach((s,a)=>{let i=D.registeredVariables[s],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:Ie(i).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${s}/v`,variable:Ie(i).variable(l)});let u=Array.isArray(e)?e[a].tensor:e[s];if(u==null)return;let c=this.accumulatedFirstMoment[a].variable,p=this.accumulatedWeightedInfNorm[a].variable,m=Q(P(c,this.beta1),P(u,1-this.beta1)),f=P(p,this.beta2),d=Et(u),h=Hr(f,d);c.assign(m),p.assign(h);let g=Q(P(de(o,n),de(m,Q(h,this.epsilon))),i);i.assign(g)}),this.iteration.assign(Q(this.iteration,1)),this.accBeta1.assign(P(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ee(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};lp.className="Adamax";en(lp);var cl=class extends Or{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=Array.isArray(e)?e[o].tensor:e[n];if(s==null)return;let a=D.registeredVariables[n];V(()=>{let i=Q(P(this.c,s),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=$t(le(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};cl.className="SGD";en(cl);var up=class extends cl{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=le(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];if(this.accumulations[o]==null){let l=!1;this.accumulations[o]={originalName:`${n}/momentum`,variable:V(()=>Ie(s).variable(l))}}let a=this.accumulations[o].variable,i=Array.isArray(e)?e[o].tensor:e[n];i!=null&&V(()=>{let l,u=Q(P(this.m,a),i);this.useNesterov?l=Q(P(this.c,Q(i,P(u,this.m))),s):l=Q(P(this.c,u),s),a.assign(u),s.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ee(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};up.className="Momentum";en(up);var cp=class extends Or{constructor(e,t=.9,n=0,o=null,s=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,o==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:V(()=>Ie(s).variable(a))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:V(()=>Ie(s).variable(a))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:V(()=>Ie(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let l=this.accumulatedMeanSquares[o].variable,u=this.accumulatedMoments[o].variable;V(()=>{let c=Q(P(l,this.decay),P(Pe(i),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[o].variable,m=Q(P(p,this.decay),P(i,1-this.decay)),f=de(P(i,this.learningRate),yt(ue(c,Q(Pe(m),this.epsilon)))),d=Q(P(u,this.momentum),f);l.assign(c),p.assign(m),u.assign(d);let h=ue(s,d);s.assign(h)}else{let p=Q(P(l,this.decay),P(Pe(i),1-this.decay)),m=Q(P(u,this.momentum),de(P(i,this.learningRate),yt(Q(p,this.epsilon))));l.assign(p),u.assign(m);let f=ue(s,m);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ee(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ee(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ee(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};cp.className="RMSProp";en(cp);var Oa=class{static sgd(e){return new cl(e)}static momentum(e,t,n=!1){return new up(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,s=!1){return new cp(e,t,n,o,s)}static adam(e=.001,t=.9,n=.999,o=null){return new ap(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new sp(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,s=0){return new lp(e,t,n,o,s)}static adagrad(e,t=.1){return new ip(e,t)}};var pl={sgd:Oa.sgd,momentum:Oa.momentum,adadelta:Oa.adadelta,adagrad:Oa.adagrad,rmsprop:Oa.rmsprop,adamax:Oa.adamax,adam:Oa.adam};var Tq=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:r=>r())();function mf(){return new Promise(r=>Tq(()=>r()))}var N={};Ye(N,{ERF_A1:()=>zq,ERF_A2:()=>Bq,ERF_A3:()=>Vq,ERF_A4:()=>Gq,ERF_A5:()=>jq,ERF_P:()=>Lq,PARALLELIZE_THRESHOLD:()=>Sg,SELU_SCALE:()=>f_,SELU_SCALEALPHA:()=>m_,applyActivation:()=>qu,assertAndGetBroadcastShape:()=>ze,assertAxesAreInnerMostDims:()=>RW,assertParamsConsistent:()=>Eq,assignToTypedArray:()=>Zq,axesAreInnerMostDims:()=>zw,calculateShapes:()=>kN,combineLocations:()=>BN,complexWithEvenIndex:()=>Kq,complexWithOddIndex:()=>Xq,computeConv2DInfo:()=>ku,computeConv3DInfo:()=>LN,computeDefaultPad:()=>vw,computeDilation2DInfo:()=>oj,computeOptimalWindowSize:()=>Dq,computeOutAndReduceShapes:()=>Bw,computeOutShape:()=>Aq,computePool2DInfo:()=>_w,computePool3DInfo:()=>sj,convertConv2DDataFormat:()=>MN,eitherStridesOrDilationsAreOne:()=>br,expandShapeToKeepDim:()=>Vo,exponent:()=>Qq,exponents:()=>Jq,fromStringArrayToUint8:()=>sH,fromUint8ToStringArray:()=>oH,getAxesPermutation:()=>Vw,getBroadcastDims:()=>Xj,getComplexWithIndex:()=>Yq,getFusedBiasGradient:()=>Uu,getFusedDyActivation:()=>Wu,getImageCenter:()=>$q,getInnerMostAxes:()=>FW,getPermuted:()=>Fq,getReductionAxes:()=>It,getReshaped:()=>Rq,getReshapedPermuted:()=>Oq,getSliceBeginCoords:()=>Pq,getSliceSize:()=>Mq,getUndoAxesPermutation:()=>Hm,log:()=>Uq,mergeRealAndImagArrays:()=>qq,prepareAndValidate:()=>_N,prepareSplitSize:()=>eH,segment_util:()=>AS,shouldFuse:()=>Hu,slice_util:()=>or,splitRealAndImagArrays:()=>Hq,tupleValuesAreOne:()=>Pn,upcastType:()=>fr,validateInput:()=>lg,validateUpdateShape:()=>dw,warn:()=>Wq});function Eq(r,e){let t=r[0].length;r.forEach((o,s)=>{A(o.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),A(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let n=r[0];r.forEach((o,s)=>{for(let a=0;a<t;a++)A(a===e||o[a]===n[a],()=>`Error in concat${t}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function Aq(r,e){let t=r[0].slice();for(let n=1;n<r.length;n++)t[e]+=r[n][e];return t}var Sg=30;function Dq(r){return r<=Sg?r:Fc(r,Math.floor(Math.sqrt(r)))}function $q(r,e,t){let n=t*(typeof r=="number"?r:r[0]),o=e*(typeof r=="number"?r:r[1]);return[n,o]}function Rq(r,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(r[0]/t),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=e.length;for(let a=0;a<s;++a)o=o.concat([r[a+1]/e[a],e[a]]);o=o.concat(r.slice(s+1))}return o}function Fq(r,e,t=!0){let n=[];if(t){n.push(e);for(let o=e+1;o<r;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{let o=[],s=[];for(let a=1;a<r;++a)a>=e*2+1||a%2==1?s.push(a):o.push(a);n.push(...o),n.push(0),n.push(...s)}return n}function Oq(r,e,t,n=!0){let o=[];n?o.push(r[0]/t):o.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?n?o.push(e[s-1]*r[s]):o.push(r[s]/e[s-1]):o.push(r[s]);return o}function Pq(r,e){let t=[0];for(let n=0;n<e;++n)t.push(r[n][0]);return t}function Mq(r,e,t){let n=r.slice(0,1);for(let o=0;o<t;++o)n.push(r[o+1]-e[o][0]-e[o][1]);return n}var m_=1.7580993408473768,f_=1.0507009873554805;var Lq=.3275911,zq=.254829592,Bq=-.284496736,Vq=1.421413741,Gq=-1.453152027,jq=1.061405429;function Wq(...r){W().getBool("IS_TEST")||console.warn(...r)}function Uq(...r){W().getBool("IS_TEST")||console.log(...r)}function qq(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let n=0;n<t.length;n+=2)t[n]=r[n/2],t[n+1]=e[n/2];return t}function Hq(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)e[n/2]=r[n],t[n/2]=r[n+1];return{real:e,imag:t}}function Kq(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function Xq(r){let e=Math.floor(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function Yq(r,e){let t=r[e*2],n=r[e*2+1];return{real:t,imag:n}}function Zq(r,e,t,n){r[n*2]=e,r[n*2+1]=t}function Jq(r,e){let t=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(e?2:-2)*Math.PI*(o/r);t[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:t,imag:n}}function Qq(r,e,t){let n=(t?2:-2)*Math.PI*(r/e),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}function eH(r,e,t=0){let n=[];if(typeof e=="number")A(r.shape[t]%e==0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(r.shape[t]/e);else{let o=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);A(o<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let a=e.reduce((i,l)=>l>0?i+l:i);e[s]=r.shape[t]-a}A(r.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}var AS={};Ye(AS,{collectGatherOpShapeInfo:()=>nH,computeOutShape:()=>rH,segOpComputeOptimalWindowSize:()=>tH});function tH(r,e){let t=!1,n;for(r<=Sg?(n=r,t=!0):n=Fc(r,Math.floor(Math.sqrt(r)));!t;)n>e||n===r?t=!0:n=Fc(r,n+1);return n}function rH(r,e,t){let n=[],o=r.length;for(let s=0;s<o;s++)s!==e?n.push(r[s]):n.push(t);return n}function nH(r,e,t,n){let o=e.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let p=0;p<n;++p)if(r.shape[p]!==e.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${e.shape[p]}.`);let a=r.shape[t],i=[],l=1,u=1,c=1;for(let p=0;p<n;++p)i.push(r.shape[p]),l*=r.shape[p];for(let p=n;p<t;p++)i.push(r.shape[p]),u*=r.shape[p];for(let p=n;p<o;p++)i.push(e.shape[p]);for(let p=t+1;p<s;p++)i.push(r.shape[p]),c*=r.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:i}}function oH(r){try{return r.map(e=>Gc(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function sH(r){return r.map(e=>rl(e))}var Tr={};Ye(Tr,{nonMaxSuppressionV3Impl:()=>l_,nonMaxSuppressionV4Impl:()=>u_,nonMaxSuppressionV5Impl:()=>c_,whereImpl:()=>r_});function ee(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&y.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var iH=Tr.whereImpl,Ku=class extends qs{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new Ja(this,On())}nextDataId(){return Ku.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,W().get("IS_NODE")&&N.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:n,refCount:1}),o}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&y.isString(n[0])){let s=n.map(a=>y.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,o,s){this.data.set(e,{values:t,dtype:o,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let o=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return N.mergeRealAndImagArrays(o,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>y.decodeString(o))}catch(o){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}makeOutput(e,t,n){let o=this.write(e,t,n);return On().makeTensorFromDataId(o,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=y.now();return e(),{kernelMs:y.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ee([e],"where");let t=this.readSync(e.dataId);return iH(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Ku.nextDataId=0;var Eg={};Ye(Eg,{addImpl:()=>MS,bincountImpl:()=>ff,bincountReduceImpl:()=>d_,ceilImpl:()=>zS,concatImpl:()=>df,expImpl:()=>VS,expm1Impl:()=>jS,floorImpl:()=>US,gatherV2Impl:()=>g_,greaterImpl:()=>HS,lessImpl:()=>XS,linSpaceImpl:()=>x_,logImpl:()=>ZS,maxImpl:()=>y_,maximumImpl:()=>QS,minimumImpl:()=>tT,multiplyImpl:()=>Tg,negImpl:()=>oT,notEqualImpl:()=>iT,prodImpl:()=>uT,rangeImpl:()=>xf,rsqrtImpl:()=>pT,simpleAbsImpl:()=>DS,sliceImpl:()=>yf,squaredDifferenceImpl:()=>dT,stridedSliceImpl:()=>b_,subImpl:()=>gT,tileImpl:()=>w_,topKImpl:()=>__,transposeImpl:()=>gf,uniqueImpl:()=>k_});function DS(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var aH=r=>{let{x:e}=r.inputs,t=r.backend;ee(e,"abs");let n=new Float32Array(y.sizeFromShape(e.shape)),o=t.data.get(e.dataId).values;return n=DS(o),t.makeOutput(n,e.shape,"float32")},$S={kernelName:us,backendName:"cpu",kernelFunc:aH};function Ze(r){return(e,t,n,o,s)=>{let a=N.assertAndGetBroadcastShape(e,t),i=a.length,l=y.computeStrides(a),u=y.sizeFromShape(a),c=y.getTypedArrayFromDType(s,u),p=e.length,m=t.length,f=y.computeStrides(e),d=y.computeStrides(t),h=N.getBroadcastDims(e,a),g=N.getBroadcastDims(t,a);if(h.length+g.length===0)for(let x=0;x<c.length;++x)c[x]=r(n[x%n.length],o[x%o.length]);else for(let x=0;x<c.length;++x){let b=y.indexToLoc(x,i,l),w=b.slice(-p);h.forEach(S=>w[S]=0);let _=y.locToIndex(w,p,f),k=b.slice(-m);g.forEach(S=>k[S]=0);let E=y.locToIndex(k,m,d);c[x]=r(n[_],o[E])}return[c,a]}}function pr(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=t.makeTensorInfo(n.shape,"complex64"),l=t.data.get(i.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",s),imag:t.makeTensorInfo(o.shape,"float32",a)},i}var RS={kernelName:ql,backendName:"cpu",kernelFunc:pr};function pp(r,e,t="float32"){if(t==="complex64"){let o=pp(r,e,"float32"),s=pp(r,e,"float32");return pr({inputs:{real:o,imag:s},backend:r})}let n=y.makeZerosTypedArray(y.sizeFromShape(e),t);return r.makeTensorInfo(e,t,n)}function Er(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var FS={kernelName:$n,backendName:"cpu",kernelFunc:Er};function Uo(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var OS={kernelName:cu,backendName:"cpu",kernelFunc:Uo};function qo(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Er({inputs:{x:o},backend:t});let a=pp(t,o.shape,o.dtype),i=qo({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),l=pr({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}if(o.dtype==="complex64"){let a=Uo({inputs:{input:o},backend:t}),i=qo({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=Er({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32"){let a=t.data.get(o.dataId).values,i=Int32Array.from(a);return t.makeTensorInfo(o.shape,"int32",i)}if(s==="bool"){let a=t.data.get(o.dataId).values,i=y.toTypedArray([0],o.dtype),[l,u]=Ze((c,p)=>c!==p?1:0)(o.shape,[],a,i,"bool");return t.makeTensorInfo(u,"bool",l)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var PS={kernelName:An,backendName:"cpu",kernelFunc:qo};function nt(r,e,t,n){return t==null?({inputs:o,backend:s})=>{let{a,b:i}=o,l=s;ee([a,i],r);let u=l.data.get(a.dataId).values,c=l.data.get(i.dataId).values,p=n||a.dtype,[m,f]=e(a.shape,i.shape,u,c,p);return l.makeTensorInfo(f,p,m)}:({inputs:o,backend:s})=>{let{a,b:i}=o,l=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let u=qo({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,m=c.complexTensorInfos.imag,f=l.data.get(p.dataId).values,d=l.data.get(m.dataId).values,h=qo({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(h.dataId),x=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,w=l.data.get(x.dataId).values,_=l.data.get(b.dataId).values,[k,E,S]=t(a.shape,i.shape,f,d,w,_),R=l.makeTensorInfo(S,"float32",k),F=l.makeTensorInfo(S,"float32",E),L=pr({inputs:{real:R,imag:F},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(h),l.disposeIntermediateTensorInfo(R),l.disposeIntermediateTensorInfo(F),L}else{let u=l.data.get(a.dataId).values,c=l.data.get(i.dataId).values,p=n||a.dtype,[m,f]=e(a.shape,i.shape,u,c,p);return l.makeTensorInfo(f,p,m)}}}function mp(r){return(e,t,n,o,s,a)=>{let i=N.assertAndGetBroadcastShape(e,t),l=y.sizeFromShape(i),u=i.length,c=y.computeStrides(i),p=y.getTypedArrayFromDType("float32",l),m=y.getTypedArrayFromDType("float32",l),f=N.getBroadcastDims(e,i),d=N.getBroadcastDims(t,i),h=N.mergeRealAndImagArrays(n,o),g=N.mergeRealAndImagArrays(s,a),x=e.length,b=y.computeStrides(e),w=t.length,_=y.computeStrides(t);if(f.length+d.length===0)for(let k=0;k<p.length;k++){let E=k%h.length,S=k%g.length,R=r(h[E*2],h[E*2+1],g[S*2],g[S*2+1]);p[k]=R.real,m[k]=R.imag}else for(let k=0;k<p.length;k++){let E=y.indexToLoc(k,u,c),S=E.slice(-x);f.forEach(j=>S[j]=0);let R=y.locToIndex(S,x,b),F=E.slice(-w);d.forEach(j=>F[j]=0);let L=y.locToIndex(F,w,_),G=r(h[R*2],h[R*2+1],g[L*2],g[L*2+1]);p[k]=G.real,m[k]=G.imag}return[p,m,i]}}var MS=Ze((r,e)=>r+e),lH=mp((r,e,t,n)=>({real:r+t,imag:e+n})),Pa=nt(xn,MS,lH),LS={kernelName:xn,backendName:"cpu",kernelFunc:Pa};function ff(r,e,t,n,o){let s=y.sizeFromShape(n),a=y.makeZerosTypedArray(o,t);for(let i=0;i<r.length;i++){let l=r[i];if(l<0)throw new Error("Input x must be non-negative!");l>=o||(s>0?a[l]+=e[i]:a[l]+=1)}return a}function d_(r,e,t,n=!1){let o=r.shape[0],s=r.shape[1],a=Ce([o,t],e.dtype);for(let i=0;i<o;i++)for(let l=0;l<s;l++){let u=r.get(i,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(n?a.set(1,i,u):e.size>0?a.set(a.get(i,u)+e.get(i,l),i,u):a.set(a.get(i,u)+1,i,u))}return a}function Ho(r){return(e,t,n)=>{let o=y.getTypedArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)o[s]=r(e[s],n);return o}}function Ae(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(ee(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,l=i.data.get(a.dataId).values,u=y.sizeFromShape(a.shape),c=t||a.dtype,p=y.getArrayFromDType(c,u);for(let m=0;m<u;++m)p[m]=e(l[m],o);return i.makeTensorInfo(a.shape,c,p)}}function Ko(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(ee(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,l=i.data.get(a.dataId).values,u=t||a.dtype,c=e(l,u,o);return i.makeTensorInfo(a.shape,u,c)}}var zS=Ho(r=>Math.ceil(r)),uH=Ko(Zn,zS),BS={kernelName:Zn,backendName:"cpu",kernelFunc:uH};function df(r,e,t,n){let o=y.getArrayFromDType(t,y.sizeFromShape(e));if(n&&t!=="string"){let s=0;r.forEach(a=>{let i=y.sizeFromShape(a.shape);o.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=t==="string"?N.fromUint8ToStringArray(a.vals):a.vals,l=0;for(let u=0;u<a.shape[0];++u){let c=u*e[1]+s;for(let p=0;p<a.shape[1];++p)o[c+p]=i[l++]}s+=a.shape[1]})}return o}var VS=Ho(r=>Math.exp(r)),h_=Ko(oo,VS),GS={kernelName:oo,backendName:"cpu",kernelFunc:h_};var jS=Ho(r=>Math.expm1(r)),cH=Ko(li,jS),WS={kernelName:li,backendName:"cpu",kernelFunc:cH};var US=Ho(r=>Math.floor(r)),pH=Ko(so,US),qS={kernelName:so,backendName:"cpu",kernelFunc:pH};function g_(r,e,t){let n=Ce(t,r.dtype);for(let o=0;o<n.size;++o){let a=n.indexToLoc(o).slice(),i=a[0],l=a[2],u=e.locToIndex([i,l]);a[2]=e.values[u];let c=r.locToIndex(a);n.values[o]=r.values[c]}return n}var HS=Ze((r,e)=>r>e?1:0),mH=nt(pi,HS,null,"bool"),KS={kernelName:pi,backendName:"cpu",kernelFunc:mH};var XS=Ze((r,e)=>r<e?1:0),fH=nt(hi,XS,null,"bool"),YS={kernelName:hi,backendName:"cpu",kernelFunc:fH};function x_(r,e,t){let n=(e-r)/(t-1),o=y.makeZerosTypedArray(t,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var ZS=Ho(r=>Math.log(r)),dH=Ko(co,ZS),JS={kernelName:co,backendName:"cpu",kernelFunc:dH};function y_(r,e,t,n){let o=y.getTypedArrayFromDType(n,y.sizeFromShape(t));for(let s=0;s<o.length;++s){let a=s*e,i=r[a];for(let l=0;l<e;++l){let u=r[a+l];u>i&&(i=u)}o[s]=i}return o}var QS=Ze((r,e)=>Math.max(r,e)),hH=nt(mo,QS),eT={kernelName:mo,backendName:"cpu",kernelFunc:hH};var tT=Ze((r,e)=>Math.min(r,e)),gH=nt(xo,tT),rT={kernelName:xo,backendName:"cpu",kernelFunc:gH};var Tg=Ze((r,e)=>r*e),xH=mp((r,e,t,n)=>({real:r*t-e*n,imag:r*n+e*t})),hf=nt(yo,Tg,xH),nT={kernelName:yo,backendName:"cpu",kernelFunc:hf};function oT(r,e,t){let n=y.createScalarValue(-1,t);return Tg([],e,n,r,t)}function yH(r){let{inputs:e,backend:t}=r,{x:n}=e;ee(n,"neg");let o=t.data.get(n.dataId).values,[s,a]=oT(o,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,s)}var sT={kernelName:fs,backendName:"cpu",kernelFunc:yH};var iT=Ze((r,e)=>r!==e?1:0),bH=nt(wi,iT,null,"bool"),aT={kernelName:wi,backendName:"cpu",kernelFunc:bH};function gf(r,e,t,n,o){let s=e.length,a=y.sizeFromShape(e),i=y.computeStrides(e),l=y.computeStrides(o),u=y.getTypedArrayFromDType(t,y.sizeFromShape(o));for(let c=0;c<a;++c){let p=y.indexToLoc(c,s,i),m=new Array(p.length);for(let d=0;d<m.length;d++)m[d]=p[n[d]];let f=y.locToIndex(m,s,l);u[f]=r[c]}return u}function rr(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{perm:s}=t;ee(o,"transpose");let a=o.shape.length,i=new Array(a);for(let p=0;p<i.length;p++)i[p]=o.shape[s[p]];let l=n.data.get(o.dataId).values,u=gf(l,o.shape,o.dtype,s,i);return{dataId:n.write(u,i,o.dtype),shape:i,dtype:o.dtype}}var lT={kernelName:Mo,backendName:"cpu",kernelFunc:rr};function uT(r,e,t,n){let[o,s]=N.computeOutAndReduceShapes(r,n),a=fr(e,"int32"),i=y.makeZerosTypedArray(y.sizeFromShape(o),a),l=y.sizeFromShape(s);for(let u=0;u<i.length;++u){let c=u*l,p=1;for(let m=0;m<l;++m)p*=t[c+m];i[u]=p}return{outVals:i,outShape:o,outDtype:a}}function wH(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ee(o,"prod");let i=o.shape.length,l=y.parseAxisParam(s,o.shape),u=N.getAxesPermutation(l,i),c=l,p=o,m=[];u!=null&&(p=rr({inputs:{x:o},backend:t,attrs:{perm:u}}),m.push(p),c=N.getInnerMostAxes(c.length,i));let f=t.data.get(p.dataId).values,{outVals:d,outShape:h,outDtype:g}=uT(p.shape,p.dtype,f,c),x=h;return a&&(x=N.expandShapeToKeepDim(h,l)),m.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.makeTensorInfo(x,g,d)}var cT={kernelName:Ci,backendName:"cpu",kernelFunc:wH};function xf(r,e,t,n){let o=r===e,s=r<e&&t<0,a=e<r&&t>1;if(o||s||a)return y.makeZerosTypedArray(0,n);let i=Math.abs(Math.ceil((e-r)/t)),l=y.makeZerosTypedArray(i,n);e<r&&t===1&&(t=-1),l[0]=r;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}var pT=Ho(r=>1/Math.sqrt(r)),_H=Ko(To,pT),mT={kernelName:To,backendName:"cpu",kernelFunc:_H};function yf(r,e,t,n,o){let s=or.isSliceContinous(n,e,t),a=y.sizeFromShape(t),i=y.computeStrides(n);if(s){let p=or.computeFlatOffset(e,i);return o==="string"?r.slice(p,p+a):r.subarray(p,p+a)}let l=o==="string"?N.fromUint8ToStringArray(r):r,u=Ce(n,o,l),c=Ce(t,o);for(let p=0;p<c.size;++p){let m=c.indexToLoc(p),f=m.map((d,h)=>d+e[h]);c.set(u.get(...f),...m)}return o==="string"?N.fromStringArrayToUint8(c.values):c.values}function Xo(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n;ee(o,"slice");let[i,l]=or.parseSliceParams(o,s,a);or.assertParamsValid(o,i,l);let u=t.data.get(o.dataId).values,c=yf(u,i,l,o.shape,o.dtype);return t.makeTensorInfo(l,o.dtype,c)}var fT={kernelName:ys,backendName:"cpu",kernelFunc:Xo};var dT=Ze((r,e)=>{let t=r-e;return t*t}),kH=nt(Fo,dT),hT={kernelName:Fo,backendName:"cpu",kernelFunc:kH};function b_(r,e,t,n){let o=Ce(r,e.dtype);for(let s=0;s<o.size;s++){let a=o.indexToLoc(s),i=new Array(a.length);for(let l=0;l<i.length;l++)i[l]=a[l]*t[l]+n[l];o.set(e.get(...i),...a)}return o}var gT=Ze((r,e)=>r-e),vH=mp((r,e,t,n)=>({real:r-t,imag:e-n})),bf=nt(Oo,gT,vH),xT={kernelName:Oo,backendName:"cpu",kernelFunc:bf};function w_(r,e){let t=new Array(r.rank);for(let o=0;o<t.length;o++)t[o]=r.shape[o]*e[o];let n=Ce(t,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),a=new Array(r.rank);for(let l=0;l<a.length;l++)a[l]=s[l]%r.shape[l];let i=r.locToIndex(a);n.values[o]=r.values[i]}return n}function __(r,e,t,n,o){let s=e[e.length-1],[a,i]=[r.length/s,s],l=y.getTypedArrayFromDType(t,a*n),u=y.getTypedArrayFromDType("int32",a*n);for(let p=0;p<a;p++){let m=p*i,f=r.subarray(m,m+i),d=[];for(let b=0;b<f.length;b++)d.push({value:f[b],index:b});d.sort((b,w)=>w.value-b.value);let h=p*n,g=l.subarray(h,h+n),x=u.subarray(h,h+n);for(let b=0;b<n;b++)g[b]=d[b].value,x[b]=d[b].index}let c=e.slice();return c[c.length-1]=n,[Ce(c,t,l),Ce(c,"int32",u)]}function k_(r,e,t,n){let o=y.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let d=0;d<o;d++)s[0]*=t[d];s[1]=t[o];for(let d=o+1;d<t.length;d++)s[2]*=t[d];let a={},i=new Int32Array(t[o]),l=new ct(s,n,r),u=[],c=s[0]===1&&s[2]===1;for(let d=0;d<t[o];d++){let h;if(c)h=r[d].toString();else{let g=[];for(let x=0;x<s[0];x++)for(let b=0;b<s[2];b++)g.push(l.get(x,d,b));h=g.join(",")}if(a[h]!==void 0)i[d]=a[h];else{let g=Object.keys(a).length;a[h]=g,i[d]=g,u.push(d)}}let p=s.slice();p[1]=Object.keys(a).length;let m=new ct(p,n);u.forEach((d,h)=>{for(let g=0;g<s[0];g++)for(let x=0;x<s[2];x++)m.set(l.get(g,d,x),g,h,x)});let f=t.slice();return f[o]=p[1],{outputValues:m.values,outputShape:f,indices:i}}var v_="3.1.0";bu("cpu",()=>new Ku,1);var C_=Ae(si,r=>r>=0?r:Math.exp(r)-1),yT={kernelName:si,backendName:"cpu",kernelFunc:C_};function I_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n;ee([o],"leakyRelu");let a=y.sizeFromShape(o.shape),i=t.data.get(o.dataId).values,l=y.getTypedArrayFromDType("float32",a);for(let u=0;u<i.length;u++)l[u]=i[u]<0?s*i[u]:i[u];return t.makeTensorInfo(o.shape,"float32",l)}var bT={kernelName:uo,backendName:"cpu",kernelFunc:I_};var CH=Ze((r,e)=>r<0?e*r:r);function N_(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e;ee([n,o],"prelu");let s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,[i,l]=CH(n.shape,o.shape,s,a,n.dtype);return t.makeTensorInfo(l,n.dtype,i)}var wT={kernelName:ko,backendName:"cpu",kernelFunc:N_};var S_=Ae(vo,r=>Math.max(0,r)),_T={kernelName:vo,backendName:"cpu",kernelFunc:S_};var T_=Ae(Io,r=>Math.min(Math.max(0,r),6)),kT={kernelName:Io,backendName:"cpu",kernelFunc:T_};function fp(r,e,t,n,o){if(t==="linear")return Er({inputs:{x:e},backend:r});if(t==="relu")return S_({inputs:{x:e},backend:r});if(t==="elu")return C_({inputs:{x:e},backend:r});if(t==="relu6")return T_({inputs:{x:e},backend:r});if(t==="prelu")return N_({inputs:{x:e,alpha:n},backend:r});if(t==="leakyrelu")return I_({inputs:{x:e},backend:r,attrs:{alpha:o}});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function tt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=y.sizeFromShape(o.shape),i=y.inferFromImplicitShape(s,a),l=y.sizeFromShape(i);y.assert(a===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);let u=t.data.get(o.dataId);if(u.complexTensorInfos!=null){let c=u.complexTensorInfos.real,p=u.complexTensorInfos.imag;c.shape=i,p.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}var vT={kernelName:gs,backendName:"cpu",kernelFunc:tt};function E_(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;ee([o,s],"matMul");let l=o.shape.length,u=s.shape.length,c=a?o.shape[l-2]:o.shape[l-1],p=i?s.shape[u-1]:s.shape[u-2],m=a?o.shape[l-1]:o.shape[l-2],f=i?s.shape[u-2]:s.shape[u-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(d),x=y.sizeFromShape(h),b=g===x||g===1||x===1;y.assert(l>=2&&u>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${d}) and (${h}).`);let _=(g>x?o.shape.slice(0,-2):s.shape.slice(0,-2)).concat([m,f]);y.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let k=a?[g,c,m]:[g,m,c],E=i?[x,f,p]:[x,p,f],S=tt({inputs:{x:o},backend:t,attrs:{shape:k}}),R=tt({inputs:{x:s},backend:t,attrs:{shape:E}}),F=a?S.shape[1]:S.shape[2],L=a?S.shape[2]:S.shape[1],G=i?R.shape[1]:R.shape[2],j=Math.max(g,x),U=t.data.get(S.dataId).values,Y=t.data.get(R.dataId).values,K=y.computeStrides(S.shape),Z=y.computeStrides(R.shape),[te,X,re]=a?[K[0],1,K[1]]:[K[0],K[1],1],[ie,se,pe]=i?[1,Z[1],Z[0]]:[Z[1],1,Z[0]],ae=L*G,xe=Ce([j,L,G],S.dtype),ge=xe.values,we=t.blockSize;for(let ke=0;ke<j;ke++)for(let De=0;De<L;De+=we)for(let $e=0;$e<G;$e+=we)for(let Re=0;Re<F;Re+=we){let qe=Math.min(De+we,L),ut=Math.min($e+we,G),kt=Math.min(Re+we,F);for(let vt=De;vt<qe;vt++)for(let pt=$e;pt<ut;pt++){let Ct=0;for(let He=Re;He<kt;He++){let Ot=Math.min(ke,g-1)*te,mn=Math.min(ke,x-1)*pe,Jt=U[Ot+vt*X+He*re],fn=Y[He*ie+pt*se+mn];Ct+=Jt*fn}ge[ke*ae+(vt*G+pt)]+=Ct}}return t.disposeIntermediateTensorInfo(S),t.disposeIntermediateTensorInfo(R),t.makeTensorInfo(_,xe.dtype,xe.values)}var CT={kernelName:Yn,backendName:"cpu",kernelFunc:E_};function IH(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=n,m,f,d,h=[];m=E_({inputs:{a:o,b:s},attrs:{transposeA:l,transposeB:u},backend:t}),a&&(f=Pa({inputs:{a:m,b:a},backend:t}),h.push(m),m=f),c&&(d=fp(t,m,c,i,p),h.push(m),m=d);for(let x of h)t.disposeIntermediateTensorInfo(x);return m}var IT={kernelName:ks,backendName:"cpu",kernelFunc:IH};var NH=Ae(Xs,r=>Math.acos(r)),NT={kernelName:Xs,backendName:"cpu",kernelFunc:NH};var SH=Ae(Ys,r=>Math.acosh(r)),ST={kernelName:Ys,backendName:"cpu",kernelFunc:SH};function TH(r){let{inputs:e,backend:t}=r,n=e;ee(e,"addN");let o=n.map(i=>t.data.get(i.dataId).values),s=Ce(n[0].shape,n[0].dtype),a=s.values;for(let i=0;i<n.length;i++){let l=o[i];for(let u=0;u<a.length;u++)a[u]+=l[u]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var TT={kernelName:Hn,backendName:"cpu",kernelFunc:TH};function EH(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ee(o,"all");let i=y.parseAxisParam(s,o.shape),l=i,u=N.getAxesPermutation(l,o.shape.length),c=o;u!=null&&(c=rr({inputs:{x:o},backend:t,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,o.shape.length)),N.assertAxesAreInnerMostDims("all",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=y.sizeFromShape(m),d=y.makeZerosTypedArray(y.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let b=x*f,w=h[b];for(let _=0;_<f;++_){let k=h[b+_];w=w&&k}d[x]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(a){let x=N.expandShapeToKeepDim(p,i),b=tt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),b}return g}var ET={kernelName:Vl,backendName:"cpu",kernelFunc:EH};function AH(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ee(o,"any");let i=y.parseAxisParam(s,o.shape),l=i,u=N.getAxesPermutation(l,o.shape.length),c=o;u!=null&&(c=rr({inputs:{x:o},backend:t,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,o.shape.length)),N.assertAxesAreInnerMostDims("any",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=y.sizeFromShape(m),d=y.makeZerosTypedArray(y.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let b=x*f,w=h[b];for(let _=0;_<f;++_){let k=h[b+_];w=w||k}d[x]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(a){let x=N.expandShapeToKeepDim(p,i),b=tt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),b}return g}var AT={kernelName:Gl,backendName:"cpu",kernelFunc:AH};function DH(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;ee(o,"argMax");let a=y.parseAxisParam(s,o.shape),i=N.getAxesPermutation(a,o.shape.length),l=o,u=[];i!=null&&(l=rr({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(l),a=N.getInnerMostAxes(a.length,l.shape.length)),a=[a[0]],N.assertAxesAreInnerMostDims("argMax",a,l.shape.length);let[c,p]=N.computeOutAndReduceShapes(l.shape,a),m=y.sizeFromShape(c),f=y.makeZerosTypedArray(m,"int32"),d=y.sizeFromShape(p),h=t.data.get(l.dataId).values;for(let g=0;g<f.length;++g){let x=g*d,b=h[x],w=0;for(let _=0;_<d;++_){let k=h[x+_];k>b&&(b=k,w=_)}f[g]=w}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",f)}var DT={kernelName:Kn,backendName:"cpu",kernelFunc:DH};function $H(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;ee(o,"argMin");let a=y.parseAxisParam(s,o.shape),i=N.getAxesPermutation(a,o.shape.length),l=o,u=[];i!=null&&(l=rr({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(l),a=N.getInnerMostAxes(a.length,l.shape.length)),a=[a[0]],N.assertAxesAreInnerMostDims("argMin",a,l.shape.length);let[c,p]=N.computeOutAndReduceShapes(l.shape,a),m=y.sizeFromShape(c),f=y.makeZerosTypedArray(m,"int32"),d=y.sizeFromShape(p),h=t.data.get(l.dataId).values;for(let g=0;g<f.length;++g){let x=g*d,b=h[x],w=0;for(let _=0;_<d;++_){let k=h[x+_];k<b&&(b=k,w=_)}f[g]=w}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",f)}var $T={kernelName:na,backendName:"cpu",kernelFunc:$H};var RH=Ae(Zs,r=>Math.asin(r)),RT={kernelName:Zs,backendName:"cpu",kernelFunc:RH};var FH=Ae(Js,r=>Math.asinh(r)),FT={kernelName:Js,backendName:"cpu",kernelFunc:FH};var OH=Ae(Qs,r=>Math.atan(r)),OT={kernelName:Qs,backendName:"cpu",kernelFunc:OH};var PH=Ze((r,e)=>Math.atan2(r,e)),MH=nt(ti,PH),PT={kernelName:ti,backendName:"cpu",kernelFunc:MH};var LH=Ae(ei,r=>Math.atanh(r)),MT={kernelName:ei,backendName:"cpu",kernelFunc:LH};function dp(r,e,t,n,o,s){let a=o.strideHeight,i=o.strideWidth,l=o.dilationHeight,u=o.dilationWidth,c=o.effectiveFilterHeight,p=o.effectiveFilterWidth,m=o.padInfo.top,f=o.padInfo.left,d=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=Ce(o.outShape,t),g=h.values,x=o.outShape[1]*o.outShape[2]*o.outShape[3],b=o.outShape[2]*o.outShape[3],w=o.outShape[3];for(let _=0;_<o.batchSize;++_){let k=_*x,E=_*n[0];for(let S=0;S<o.inChannels;++S)for(let R=0;R<o.outHeight;++R){let F=R*a-m,L=Math.max(0,F),G=Math.min(o.inHeight,c+F),j=k+R*b;for(let U=0;U<o.outWidth;++U){let Y=U*i-f,K=Math.max(0,Y),Z=Math.min(o.inWidth,p+Y),te=d,X=0,re=0;for(let se=L;se<G;se+=l){let pe=E+se*n[1];for(let ae=K;ae<Z;ae+=u){let xe=pe+ae*n[2],ge=r[xe+S];s==="max"&&ge>te?te=ge:s==="avg"&&(X+=ge,re++)}if(isNaN(te))break}let ie=j+U*w+S;g[ie]=s==="avg"?X/re:te}}}return h}function Ag(r,e,t,n,o=!1,s=!1){let a=Ce(n.outShape,"int32"),i=n.strideHeight,l=n.strideWidth,u=n.dilationHeight,c=n.dilationWidth,p=n.effectiveFilterHeight,m=n.effectiveFilterWidth,f=n.padInfo.top,d=n.padInfo.left,h=Ce(e,t,r);for(let g=0;g<n.batchSize;++g)for(let x=0;x<n.inChannels;++x)for(let b=0;b<n.outHeight;++b){let w=b*i-f,_=w;for(;_<0;)_+=u;let k=Math.min(n.inHeight,p+w);for(let E=0;E<n.outWidth;++E){let S=E*l-d,R=S;for(;R<0;)R+=c;let F=Math.min(n.inWidth,m+S),L=Number.NEGATIVE_INFINITY,G=-1;for(let j=_;j<k;j+=u){let U=j-w;for(let Y=R;Y<F;Y+=c){let K=Y-S,Z=h.get(g,j,Y,x);Z>L&&(L=Z,o?G=s?((g*n.inHeight+j)*n.inWidth+Y)*n.inChannels+x:(j*n.inWidth+Y)*n.inChannels+x:G=U*m+K)}}a.set(G,g,b,E,x)}}return a}function Dg(r,e,t,n,o,s){let a=o.strideDepth,i=o.strideHeight,l=o.strideWidth,u=o.dilationDepth,c=o.dilationHeight,p=o.dilationWidth,m=o.effectiveFilterDepth,f=o.effectiveFilterHeight,d=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,x=o.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=Ce(o.outShape,t),_=w.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],E=o.outShape[2]*o.outShape[3]*o.outShape[4],S=o.outShape[3]*o.outShape[4],R=o.outShape[4];for(let F=0;F<o.batchSize;++F){let L=F*k,G=F*n[0];for(let j=0;j<o.inChannels;++j)for(let U=0;U<o.outDepth;++U){let Y=U*a-h,K=Y;for(;K<0;)K+=u;let Z=Math.min(o.inDepth,m+Y),te=L+U*E;for(let X=0;X<o.outHeight;++X){let re=X*i-g,ie=re;for(;ie<0;)ie+=c;let se=Math.min(o.inHeight,f+re),pe=te+X*S;for(let ae=0;ae<o.outWidth;++ae){let xe=ae*l-x,ge=xe;for(;ge<0;)ge+=p;let we=Math.min(o.inWidth,d+xe),ke=pe+ae*R,De=b,$e=0,Re=0;for(let ut=K;ut<Z;ut+=u){let kt=G+ut*n[1];for(let vt=ie;vt<se;vt+=c){let pt=kt+vt*n[2];for(let Ct=ge;Ct<we;Ct+=p){let He=pt+Ct*n[3],Ot=r[He+j];if(s==="max"&&Ot>De?De=Ot:s==="avg"&&($e+=Ot,Re++),isNaN(De))break}if(isNaN(De))break}if(isNaN(De))break}let qe=ke+j;_[qe]=s==="avg"?$e/Re:De}}}}return w}function LT(r,e){let t=Ce(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,m=e.padInfo.front,f=e.padInfo.top,d=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let x=0;x<e.outDepth;++x){let b=x*n-m,w=b;for(;w<0;)w+=a;let _=Math.min(e.inDepth,u+b);for(let k=0;k<e.outHeight;++k){let E=k*o-f,S=E;for(;S<0;)S+=i;let R=Math.min(e.inHeight,c+E);for(let F=0;F<e.outWidth;++F){let L=F*s-d,G=L;for(;G<0;)G+=l;let j=Math.min(e.inWidth,p+L),U=Number.NEGATIVE_INFINITY,Y=-1;for(let K=w;K<_;K+=a){let Z=K-b;for(let te=S;te<R;te+=i){let X=te-E;for(let re=G;re<j;re+=l){let ie=re-L,se=r.get(h,K,te,re,g);se>=U&&(U=se,Y=Z*c*p+X*c+ie)}}}t.set(Y,h,x,k,F,g)}}}return t}function zH(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;ee(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=n,u=1;y.assert(N.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=N.computePool2DInfo(o.shape,s,a,u,i,l),p;if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))p=Er({inputs:{x:o},backend:t});else{let m=t.data.get(o.dataId).values,f=y.computeStrides(o.shape),d=dp(m,o.shape,o.dtype,f,c,"avg");p=t.makeTensorInfo(c.outShape,o.dtype,d.values)}return p}var zT={kernelName:Xn,backendName:"cpu",kernelFunc:zH};function BH(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:l,dataFormat:u}=n;ee(o,"avgPool3d");let c=N.computePool3DInfo(o.shape,s,a,1,i,l,u),p=t.data.get(o.dataId).values,m=Dg(p,o.shape,o.dtype,y.computeStrides(o.shape),c,"avg");return t.makeTensorInfo(m.shape,"float32",m.values)}var BT={kernelName:oa,backendName:"cpu",kernelFunc:BH};function VH(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=n;ee([o,s],"avgPool3DGrad");let c=N.computePool3DInfo(s.shape,a,i,1,l,u),p=c.strideDepth,m=c.strideHeight,f=c.strideWidth,d=c.filterDepth,h=c.filterHeight,g=c.filterWidth,x=c.dilationDepth,b=c.dilationHeight,w=c.dilationWidth,_=c.effectiveFilterDepth,k=c.effectiveFilterHeight,E=c.effectiveFilterWidth,S=_-1-c.padInfo.front,R=E-1-c.padInfo.left,F=k-1-c.padInfo.top,L=Ce(s.shape,"float32"),G=1/(d*h*g),j=t.bufferSync(o);for(let U=0;U<c.batchSize;++U)for(let Y=0;Y<c.inChannels;++Y)for(let K=0;K<c.inDepth;++K)for(let Z=0;Z<c.inHeight;++Z)for(let te=0;te<c.inWidth;++te){let X=K-S,re=Z-F,ie=te-R,se=0;for(let pe=0;pe<_;pe+=x){let ae=(X+pe)/p;if(!(ae<0||ae>=c.outDepth||Math.floor(ae)!==ae))for(let xe=0;xe<k;xe+=b){let ge=(re+xe)/m;if(!(ge<0||ge>=c.outHeight||Math.floor(ge)!==ge))for(let we=0;we<E;we+=w){let ke=(ie+we)/f;if(ke<0||ke>=c.outWidth||Math.floor(ke)!==ke)continue;se+=j.get(U,ae,ge,ke,Y)}}}L.set(se*G,U,K,Z,te,Y)}return t.makeTensorInfo(L.shape,L.dtype,L.values)}var VT={kernelName:Wl,backendName:"cpu",kernelFunc:VH};function GH(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;ee([o,s],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=n,c=N.computePool2DInfo(a.shape,i,l,1,u),p=c.strideHeight,m=c.strideWidth,f=c.filterHeight,d=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,x=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=b-1-c.padInfo.left,_=x-1-c.padInfo.top,k=Ce(a.shape,"float32"),E=1/(f*d),S=t.data.get(o.dataId).values,R=Ce(o.shape,"float32",S);for(let F=0;F<c.batchSize;++F)for(let L=0;L<c.inChannels;++L)for(let G=0;G<c.inHeight;++G)for(let j=0;j<c.inWidth;++j){let U=G-_,Y=j-w,K=0;for(let Z=0;Z<x;Z+=h){let te=(U+Z)/p;if(!(te<0||te>=c.outHeight||Math.floor(te)!==te))for(let X=0;X<b;X+=g){let re=(Y+X)/m;if(re<0||re>=c.outWidth||Math.floor(re)!==re)continue;K+=R.get(F,te,re,L)}}k.set(K*E,F,G,j,L)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}var GT={kernelName:jl,backendName:"cpu",kernelFunc:GH};function jH(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,scale:s,offset:a,mean:i,variance:l}=e;y.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ee([o,i,l,s,a],"batchNorm");let{varianceEpsilon:u}=n;u==null&&(u=.001);let c=t.data.get(o.dataId).values,p=t.data.get(i.dataId).values,m=t.data.get(l.dataId).values,f=s?t.data.get(s.dataId).values:new Float32Array([1]),d=a?t.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(c.length),g=d.length,x=f.length,b=m.length,w=p.length,_=0,k=0,E=0,S=0;for(let R=0;R<c.length;++R)h[R]=d[_++]+(c[R]-p[k++])*f[E++]/Math.sqrt(m[S++]+u),_>=g&&(_=0),k>=w&&(k=0),E>=x&&(E=0),S>=b&&(S=0);return t.makeTensorInfo(o.shape,o.dtype,h)}var jT={kernelName:ao,backendName:"cpu",kernelFunc:jH};function WH(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;ee([o],"batchToSpaceND");let i=s.reduce((x,b)=>x*b),l=N.getReshaped(o.shape,s,i),u=N.getPermuted(l.length,s.length),c=N.getReshapedPermuted(o.shape,s,i),p=N.getSliceBeginCoords(a,s.length),m=N.getSliceSize(c,a,s.length),f=tt({inputs:{x:o},backend:t,attrs:{shape:l}}),d=rr({inputs:{x:f},backend:t,attrs:{perm:u}}),h=tt({inputs:{x:d},backend:t,attrs:{shape:c}}),g=Xo({inputs:{x:h},backend:t,attrs:{begin:p,size:m}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var WT={kernelName:sa,backendName:"cpu",kernelFunc:WH};function UH(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,u=ff(i,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}var UT={kernelName:Ul,backendName:"cpu",kernelFunc:UH};var qH=Ae(Dn,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),qT={kernelName:Dn,backendName:"cpu",kernelFunc:qH};var HH=r=>{let{x:e}=r.inputs,t=r.backend,n=new Float32Array(y.sizeFromShape(e.shape)),o=t.data.get(e.dataId),s=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=t.data.get(s.dataId).values,l=t.data.get(a.dataId).values;for(let u=0;u<i.length;u++){let c=i[u],p=l[u];n[u]=Math.hypot(c,p)}return t.makeOutput(n,e.shape,"float32")},HT={kernelName:ia,backendName:"cpu",kernelFunc:HH};function Gi(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var KT={kernelName:nu,backendName:"cpu",kernelFunc:Gi};function ml(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,e[0].shape)[0],a=N.computeOutShape(e.map(h=>h.shape),s);if(y.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(h=>y.sizeFromShape(h.shape)>0);if(i.length===1)return Er({inputs:{x:i[0]},backend:t});let l=i.map(h=>h.shape);if(N.assertParamsConsistent(l,s),i[0].dtype==="complex64"){let h=i.map(_=>Uo({inputs:{input:_},backend:t})),g=i.map(_=>Gi({inputs:{input:_},backend:t})),x=ml({inputs:h,backend:t,attrs:{axis:s}}),b=ml({inputs:g,backend:t,attrs:{axis:s}}),w=pr({inputs:{real:x,imag:b},backend:t});return h.forEach(_=>t.disposeIntermediateTensorInfo(_)),g.forEach(_=>t.disposeIntermediateTensorInfo(_)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),w}let u=i.map(h=>{let g=y.sizeFromShape(h.shape.slice(s));return tt({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}})}),c=u.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));a=N.computeOutShape(u.map(h=>h.shape),1);let p=u[0].shape[0]===1,m=df(c,a,e[0].dtype,p),f=N.computeOutShape(i.map(h=>h.shape),s),d=t.makeTensorInfo(f,e[0].dtype,m);return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var XT={kernelName:cs,backendName:"cpu",kernelFunc:ml};function A_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=n;ee([o,s],"conv2d");let p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(o.shape,s.shape,a,u,i,c,!1,p),f=m.filterHeight,d=m.filterWidth,h=m.dilationHeight,g=m.dilationWidth,x=m.padInfo.left,b=m.padInfo.top,w=m.dataFormat==="channelsLast",_=new ct(m.outShape,o.dtype),k=y.computeStrides(o.shape),E=y.computeStrides(s.shape),S=k[0],R=w?k[1]:k[2],F=w?k[2]:1,L=w?1:k[1],G=_.strides[0],j=w?_.strides[1]:_.strides[2],U=w?_.strides[2]:1,Y=w?1:_.strides[1],K=t.data.get(o.dataId).values,Z=t.data.get(s.dataId).values,te=_.values;for(let X=0;X<m.batchSize;++X){let re=X*S,ie=X*G;for(let se=0;se<m.outHeight;++se){let pe=ie+se*j,ae=se*m.strideHeight-b;for(let xe=0;xe<f;++xe){let ge=ae+xe*h;if(ge<0||ge>=m.inHeight)continue;let we=xe*E[0],ke=re+ge*R;for(let De=0;De<m.outWidth;++De){let $e=pe+De*U,Re=De*m.strideWidth-x;for(let qe=0;qe<d;++qe){let ut=Re+qe*g;if(ut<0||ut>=m.inWidth)continue;let kt=we+qe*E[1],vt=ke+ut*F,pt=kt;for(let Ct=0;Ct<m.inChannels;++Ct){let He=K[vt+Ct*L];for(let Ot=0;Ot<m.outChannels;++Ot)te[$e+Ot*Y]+=He*Z[pt+Ot];pt+=m.outChannels}}}}}}return t.makeTensorInfo(_.shape,_.dtype,te)}var YT={kernelName:Jn,backendName:"cpu",kernelFunc:A_};function KH(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=n;ee([o,s],"conv2dBackpropFilter");let p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(o.shape,c,a,1,i,u,!1,p),{strideHeight:f,strideWidth:d,filterHeight:h,filterWidth:g}=m,x=m.dataFormat==="channelsLast",b=new ct(m.filterShape,"float32"),w=m.padInfo.left,_=m.padInfo.top,k=t.data.get(o.dataId).values,E=t.data.get(s.dataId).values,S=new ct(o.shape,o.dtype,k),R=new ct(s.shape,s.dtype,E);for(let F=0;F<h;++F){let L=Math.max(0,Math.ceil((_-F)/f)),G=Math.min(m.outHeight,(m.inHeight+_-F)/f);for(let j=0;j<g;++j){let U=Math.max(0,Math.ceil((w-j)/d)),Y=Math.min(m.outWidth,(m.inWidth+w-j)/d);for(let K=0;K<m.inChannels;++K)for(let Z=0;Z<m.outChannels;++Z){let te=0;for(let X=0;X<m.batchSize;++X)for(let re=L;re<G;++re){let ie=F+re*f-_;for(let se=U;se<Y;++se){let pe=j+se*d-w;x?te+=S.get(X,ie,pe,K)*R.get(X,re,se,Z):te+=S.get(X,K,ie,pe)*R.get(X,Z,re,se)}}b.set(te,F,j,K,Z)}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}var ZT={kernelName:Hl,backendName:"cpu",kernelFunc:KH};function XH(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=n;ee([o,s],"conv2dBackpropInput");let p=y.computeStrides(s.shape),m=y.computeStrides(o.shape),f=N.convertConv2DDataFormat(u),d=N.computeConv2DInfo(a,s.shape,i,1,l,c,!1,f),h=new ct(d.inShape,"float32"),g=h.values,x=t.data.get(o.dataId).values,b=t.data.get(s.dataId).values,[w,_,k]=p,{batchSize:E,filterHeight:S,filterWidth:R,inChannels:F,inHeight:L,inWidth:G,outChannels:j,outHeight:U,outWidth:Y,strideHeight:K,strideWidth:Z}=d;f=d.dataFormat;let te=S-1-d.padInfo.top,X=R-1-d.padInfo.left,re=f==="channelsLast",ie=h.strides[0],se=re?h.strides[1]:h.strides[2],pe=re?h.strides[2]:1,ae=re?1:h.strides[1],xe=m[0],ge=re?m[1]:m[2],we=re?m[2]:1,ke=re?1:m[1];for(let De=0;De<E;++De)for(let $e=0;$e<F;++$e)for(let Re=0;Re<L;++Re){let qe=Re-te,ut=Math.max(0,Math.ceil(qe/K)),kt=Math.min(U,(S+qe)/K);for(let vt=0;vt<G;++vt){let pt=vt-X,Ct=Math.max(0,Math.ceil(pt/Z)),He=Math.min(Y,(R+pt)/Z),Ot=0;for(let Jt=ut;Jt<kt;++Jt){let fn=Jt*K-qe;for(let _r=Ct;_r<He;++_r){let Gn=_r*Z-pt,Jr=xe*De+ge*Jt+we*_r,dn=w*(S-1-fn)+_*(R-1-Gn)+k*$e;for(let kr=0;kr<j;++kr){let Sn=x[Jr+ke*kr],jn=b[dn+kr];Ot+=Sn*jn}}}let mn=ie*De+se*Re+pe*vt+ae*$e;g[mn]=Ot}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var JT={kernelName:Qn,backendName:"cpu",kernelFunc:XH};function YH(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l}=n;ee([o,s],"conv3d");let u=N.computeConv3DInfo(o.shape,s.shape,a,l,i),{filterDepth:c,filterHeight:p,filterWidth:m,dilationDepth:f,dilationHeight:d,dilationWidth:h,padInfo:g}=u,x=g.front,b=g.left,w=g.top,_=new ct(u.outShape,o.dtype),k=t.data.get(o.dataId).values,E=t.data.get(s.dataId).values,S=_.values,R=y.computeStrides(o.shape),F=y.computeStrides(s.shape);for(let L=0;L<u.batchSize;++L){let G=L*R[0],j=L*_.strides[0];for(let U=0;U<u.outDepth;++U){let Y=j+U*_.strides[1],K=U*u.strideDepth-x;for(let Z=0;Z<c;++Z){let te=K+Z*f;if(te<0||te>=u.inDepth)continue;let X=Z*F[0],re=G+te*R[1];for(let ie=0;ie<u.outHeight;++ie){let se=Y+ie*_.strides[2],pe=ie*u.strideHeight-w;for(let ae=0;ae<p;++ae){let xe=pe+ae*d;if(xe<0||xe>=u.inHeight)continue;let ge=X+ae*F[1],we=re+xe*R[2];for(let ke=0;ke<u.outWidth;++ke){let De=se+ke*u.outChannels,$e=ke*u.strideWidth-b;for(let Re=0;Re<m;++Re){let qe=$e+Re*h;if(qe<0||qe>=u.inWidth)continue;let ut=ge+Re*F[2],kt=we+qe*u.inChannels,vt=ut;for(let pt=0;pt<u.inChannels;++pt){let Ct=k[kt+pt];for(let He=0;He<u.outChannels;++He)S[De+He]+=Ct*E[vt+He];vt+=u.outChannels}}}}}}}}return t.makeTensorInfo(_.shape,_.dtype,_.values)}var QT={kernelName:aa,backendName:"cpu",kernelFunc:YH};function ZH(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:l}=n;ee([o,s],"conv3dBackpropFilterV2");let u=y.computeStrides(o.shape),c=y.computeStrides(s.shape),p=N.computeConv3DInfo(o.shape,l,a,1,i),m=p.strideDepth,f=p.strideHeight,d=p.strideWidth,h=p.filterDepth,g=p.filterHeight,x=p.filterWidth,b=new ct(p.filterShape,"float32"),w=b.values,[_,k,E,S]=b.strides,R=t.data.get(s.dataId).values,[F,L,G,j]=c,U=t.data.get(o.dataId).values,[Y,K,Z,te]=u,X=p.padInfo.front,re=p.padInfo.left,ie=p.padInfo.top;for(let se=0;se<h;++se){let pe=Math.max(0,Math.ceil((X-se)/m)),ae=Math.min(p.outDepth,(p.inDepth+X-se)/m),xe=se*_;for(let ge=0;ge<g;++ge){let we=Math.max(0,Math.ceil((ie-ge)/f)),ke=Math.min(p.outHeight,(p.inHeight+ie-ge)/f),De=ge*k+xe;for(let $e=0;$e<x;++$e){let Re=Math.max(0,Math.ceil((re-$e)/d)),qe=Math.min(p.outWidth,(p.inWidth+re-$e)/d),ut=$e*E+De;for(let kt=0;kt<p.inChannels;++kt){let vt=kt*S+ut;for(let pt=0;pt<p.outChannels;++pt){let Ct=0;for(let He=0;He<p.batchSize;++He){let Ot=He*Y,mn=He*F;for(let Jt=pe;Jt<ae;++Jt){let _r=(se+Jt*m-X)*K+Ot,Gn=Jt*L+mn;for(let Jr=we;Jr<ke;++Jr){let kr=(ge+Jr*f-ie)*Z+_r,Sn=Jr*G+Gn;for(let jn=Re;jn<qe;++jn){let ss=($e+jn*d-re)*te+kr,Tn=jn*j+Sn;Ct+=U[ss+kt]*R[Tn+pt]}}}}w[vt+pt]=Ct}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}var e1={kernelName:Kl,backendName:"cpu",kernelFunc:ZH};function JH(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:l}=n;ee([o],"conv3dBackpropInputV2");let u=y.computeStrides(o.shape),c=y.computeStrides(s.shape),p=N.computeConv3DInfo(l,s.shape,i,1,a),m=new ct(p.inShape,"float32"),f=m.values,[d,h,g,x]=m.strides,b=t.data.get(o.dataId).values,[w,_,k,E]=u,S=t.data.get(s.dataId).values,[R,F,L,G]=c,{batchSize:j,filterDepth:U,filterHeight:Y,filterWidth:K,inChannels:Z,inDepth:te,inHeight:X,inWidth:re,outChannels:ie,outDepth:se,outHeight:pe,outWidth:ae,strideDepth:xe,strideHeight:ge,strideWidth:we}=p,ke=U-1-p.padInfo.front,De=Y-1-p.padInfo.top,$e=K-1-p.padInfo.left;for(let Re=0;Re<j;++Re)for(let qe=0;qe<Z;++qe)for(let ut=0;ut<te;++ut){let kt=ut-ke,vt=Math.max(0,Math.ceil(kt/xe)),pt=Math.min(se,(U+kt)/xe);for(let Ct=0;Ct<X;++Ct){let He=Ct-De,Ot=Math.max(0,Math.ceil(He/ge)),mn=Math.min(pe,(Y+He)/ge);for(let Jt=0;Jt<re;++Jt){let fn=Jt-$e,_r=Math.max(0,Math.ceil(fn/we)),Gn=Math.min(ae,(K+fn)/we),Jr=0;for(let dn=vt;dn<pt;++dn){let kr=dn*xe-kt;for(let Sn=Ot;Sn<mn;++Sn){let jn=Sn*ge-He;for(let Qr=_r;Qr<Gn;++Qr){let ss=Qr*we-fn,Tn=w*Re+_*dn+k*Sn+E*Qr,wc=R*(U-1-kr)+F*(Y-1-jn)+L*(K-1-ss)+G*qe;for(let is=0;is<ie;++is){let Ji=b[Tn+is],$l=S[wc+is];Jr+=Ji*$l}}}}f[d*Re+h*ut+g*Ct+x*Jt+qe]=Jr}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}var t1={kernelName:Xl,backendName:"cpu",kernelFunc:JH};var QH=Ae(eo,r=>Math.cos(r)),r1={kernelName:eo,backendName:"cpu",kernelFunc:QH};var eK=Ae(ri,r=>Math.cosh(r)),n1={kernelName:ri,backendName:"cpu",kernelFunc:eK};function tK(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:l,extrapolationValue:u}=n,[c,p,m,f]=o.shape,d=s.shape[0],[h,g]=i,x=Ce([d,h,g,f],"float32"),b=t.data.get(s.dataId).values,w=t.data.get(a.dataId).values,_=t.data.get(o.dataId).values,k=y.computeStrides(o.shape),E=y.computeStrides(x.shape);for(let S=0;S<d;S++){let R=S*4,F=b[R],L=b[R+1],G=b[R+2],j=b[R+3],U=w[S];if(U>=c)continue;let Y=h>1?(G-F)*(p-1)/(h-1):0,K=g>1?(j-L)*(m-1)/(g-1):0;for(let Z=0;Z<h;Z++){let te=h>1?F*(p-1)+Z*Y:.5*(F+G)*(p-1);if(te<0||te>p-1){for(let X=0;X<g;X++)for(let re=0;re<f;re++){let ie=re+X*E[2]+Z*E[1]+S*E[0];x.values[ie]=u}continue}if(l==="bilinear"){let X=Math.floor(te),re=Math.ceil(te),ie=te-X;for(let se=0;se<g;se++){let pe=g>1?L*(m-1)+se*K:.5*(L+j)*(m-1);if(pe<0||pe>m-1){for(let we=0;we<f;we++){let ke=we+se*E[2]+Z*E[1]+S*E[0];x.values[ke]=u}continue}let ae=Math.floor(pe),xe=Math.ceil(pe),ge=pe-ae;for(let we=0;we<f;we++){let ke=we+ae*k[2]+X*k[1]+U*k[0],De=_[ke];ke=we+xe*k[2]+X*k[1]+U*k[0];let $e=_[ke];ke=we+ae*k[2]+re*k[1]+U*k[0];let Re=_[ke];ke=we+xe*k[2]+re*k[1]+U*k[0];let qe=_[ke],ut=De+($e-De)*ge,kt=Re+(qe-Re)*ge;ke=we+se*E[2]+Z*E[1]+S*E[0],x.values[ke]=ut+(kt-ut)*ie}}}else for(let X=0;X<g;++X){let re=g>1?L*(m-1)+X*K:.5*(L+j)*(m-1);if(re<0||re>m-1){for(let pe=0;pe<f;pe++){let ae=pe+X*E[2]+Z*E[1]+S*E[0];x.values[ae]=u}continue}let ie=Math.round(re),se=Math.round(te);for(let pe=0;pe<f;pe++){let ae=pe+ie*k[2]+se*k[1]+U*k[0],xe=pe+X*E[2]+Z*E[1]+S*E[0];x.values[xe]=_[ae]}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}var o1={kernelName:ni,backendName:"cpu",kernelFunc:tK};function rK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;ee(o,"cumsum");let l=N.getAxesPermutation([s],o.shape.length),u=o;l!=null&&(u=rr({inputs:{x:o},backend:t,attrs:{perm:l}}));let c=N.getInnerMostAxes(1,o.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=fr(u.dtype,"int32"),m=y.makeZerosTypedArray(y.sizeFromShape(u.shape),p),f=t.data.get(u.dataId).values,d=u.shape[u.shape.length-1],h=i?(x,b)=>x+d-b-1:(x,b)=>x+b;for(let x=0;x<f.length;x+=d)for(let b=0;b<d;b++){let w=h(x,b);if(b===0)m[w]=a?0:f[w];else{let _=h(x,b-1);m[w]=a?f[_]+m[_]:f[w]+m[_]}}let g=t.makeTensorInfo(u.shape,p,m);if(l!=null){let x=N.getUndoAxesPermutation(l),b=rr({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),b}return g}var s1={kernelName:to,backendName:"cpu",kernelFunc:rK};function nK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let l=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,c=ff(l,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,c)}else if(o.shape.length===2){let l=t.bufferSync(o),u=t.bufferSync(s),c=d_(l,u,a,i);return t.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var i1={kernelName:Yl,backendName:"cpu",kernelFunc:nK};function oK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n;y.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`),y.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let i=o.shape[0],l=o.shape[1],u=o.shape[2],c=o.shape[3],p=l*s,m=u*s,f=c/(s*s),d=t.data.get(o.dataId).values,h=new Float32Array(i*p*m*f),g=0;for(let x=0;x<i;++x)for(let b=0;b<p;++b){let w=Math.floor(b/s),_=b%s;for(let k=0;k<m;++k){let E=Math.floor(k/s),S=k%s,R=(_*s+S)*f;for(let F=0;F<f;++F){let G=F+R+c*(E+u*(w+l*x));h[g++]=d[G]}}}return t.makeTensorInfo([i,p,m,f],o.dtype,h)}var a1={kernelName:oi,backendName:"cpu",kernelFunc:oK};function D_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l,dimRoundingMode:u}=n;ee([o,s],"depthwiseConv2DNative");let c=y.computeStrides(o.shape),p=y.computeStrides(s.shape),m=l;m==null&&(m=[1,1]),y.assert(N.eitherStridesOrDilationsAreOne(a,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${m}'`);let f=N.computeConv2DInfo(o.shape,s.shape,a,m,i,u,!0),{filterHeight:d,filterWidth:h,dilationHeight:g,dilationWidth:x,padInfo:b}=f,w=b.left,_=b.top,k=f.outChannels/f.inChannels,E=new ct(f.outShape,o.dtype),S=t.data.get(o.dataId).values,R=t.data.get(s.dataId).values,F=E.values;for(let L=0;L<f.batchSize;++L){let G=L*c[0],j=L*E.strides[0];for(let U=0;U<f.outHeight;++U){let Y=j+U*E.strides[1],K=U*f.strideHeight-w;for(let Z=0;Z<d;++Z){let te=K+Z*g;if(te<0||te>=f.inHeight)continue;let X=Z*p[0],re=G+te*c[1];for(let ie=0;ie<f.outWidth;++ie){let se=Y+ie*E.strides[2],pe=ie*f.strideWidth-_;for(let ae=0;ae<h;++ae){let xe=pe+ae*x;if(xe<0||xe>=f.inWidth)continue;let ge=X+ae*p[1],we=re+xe*f.inChannels,ke=se,De=ge;for(let $e=0;$e<f.inChannels;++$e){let Re=S[we+$e];for(let qe=0;qe<k;++qe)F[ke+qe]+=Re*R[De+qe];ke+=k,De+=k}}}}}}return t.makeTensorInfo(E.shape,E.dtype,E.values)}var l1={kernelName:ro,backendName:"cpu",kernelFunc:D_};function sK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=n;ee([o,s],"depthwiseConv2dNativeBackpropFilter");let p=N.computeConv2DInfo(o.shape,c,a,i,l,u,!0),{strideHeight:m,strideWidth:f,filterHeight:d,filterWidth:h}=p,g=new ct(p.filterShape,"float32"),x=p.padInfo.left,b=p.padInfo.top,w=p.outChannels/p.inChannels,_=t.data.get(o.dataId).values,k=new ct(o.shape,o.dtype,_),E=t.data.get(s.dataId).values,S=new ct(s.shape,s.dtype,E);for(let R=0;R<d;++R){let F=Math.max(0,Math.ceil((b-R)/m)),L=Math.min(p.outHeight,(p.inHeight+b-R)/m);for(let G=0;G<h;++G){let j=Math.max(0,Math.ceil((x-G)/f)),U=Math.min(p.outWidth,(p.inWidth+x-G)/f);for(let Y=0;Y<p.outChannels;++Y){let K=Math.trunc(Y/w),Z=Y%w,te=0;for(let X=0;X<p.batchSize;++X)for(let re=F;re<L;++re){let ie=R+re*m-b;for(let se=j;se<U;++se){let pe=G+se*f-x;te+=k.get(X,ie,pe,K)*S.get(X,re,se,Y)}}g.set(te,R,G,K,Z)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var u1={kernelName:Zl,backendName:"cpu",kernelFunc:sK};function iK(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=n;ee([o,s],"depthwiseConv2DNativeBackpropInput");let p=y.computeStrides(o.shape),m=y.computeStrides(s.shape),f=N.computeConv2DInfo(c,s.shape,a,i,l,u,!0),d=new ct(f.inShape,"float32"),h=d.values,[g,x,b]=d.strides,w=t.data.get(o.dataId).values,[_,k,E]=p,S=t.data.get(s.dataId).values,[R,F,L]=m,{batchSize:G,filterHeight:j,filterWidth:U,inChannels:Y,inHeight:K,inWidth:Z,outChannels:te,outHeight:X,outWidth:re,strideHeight:ie,strideWidth:se}=f,pe=j-1-f.padInfo.top,ae=U-1-f.padInfo.left,xe=te/Y;for(let ge=0;ge<G;++ge)for(let we=0;we<Y;++we)for(let ke=0;ke<K;++ke){let De=ke-pe,$e=Math.max(0,Math.ceil(De/ie)),Re=Math.min(X,(j+De)/ie);for(let qe=0;qe<Z;++qe){let ut=qe-ae,kt=Math.max(0,Math.ceil(ut/se)),vt=Math.min(re,(U+ut)/se),pt=0;for(let Ct=$e;Ct<Re;++Ct){let He=Ct*ie-De;for(let Ot=kt;Ot<vt;++Ot){let mn=Ot*se-ut,Jt=_*ge+k*Ct+E*Ot,fn=R*(j-1-He)+F*(U-1-mn)+L*we;for(let _r=0;_r<xe;++_r){let Gn=we*xe+_r,Jr=w[Jt+Gn],dn=S[fn+_r];pt+=Jr*dn}}}h[g*ge+x*ke+b*qe+we]=pt}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}var c1={kernelName:Jl,backendName:"cpu",kernelFunc:iK};function aK(r){let{inputs:e,backend:t}=r,{x:n}=e,o=y.sizeFromShape(n.shape),s=t.data.get(n.dataId).values,a=Ce([o,o],n.dtype),i=a.values;for(let u=0;u<s.length;u++)i[u*o+u]=s[u];let l=[...n.shape,...n.shape];return t.makeTensorInfo(l,a.dtype,a.values)}var p1={kernelName:Ql,backendName:"cpu",kernelFunc:aK};var m1={kernelName:la,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o}=r,{strides:s,pad:a,dilations:i}=t,l=e,u=l.data.get(n.dataId).values,c=n.shape.length,p=l.data.get(o.dataId).values,m=o.shape.length,{batchSize:f,inHeight:d,inWidth:h,inChannels:g,outHeight:x,outWidth:b,padInfo:w,strideHeight:_,strideWidth:k,filterHeight:E,filterWidth:S,dilationHeight:R,dilationWidth:F,outShape:L}=N.computeDilation2DInfo(n.shape,o.shape,s,a,"NHWC",i),G=y.sizeFromShape(L),j=L.length,U=y.getArrayFromDType(n.dtype,G);for(let K=0;K<f;++K)for(let Z=0;Z<x;++Z){let te=Z*_-w.top;for(let X=0;X<b;++X){let re=X*k-w.left;for(let ie=0;ie<g;++ie){let se=Number.MIN_SAFE_INTEGER;for(let ae=0;ae<E;++ae){let xe=te+ae*R;if(xe>=0&&xe<d)for(let ge=0;ge<S;++ge){let we=re+ge*F;if(we>=0&&we<h){let ke=y.locToIndex([K,xe,we,ie],c,y.computeStrides(n.shape)),De=y.locToIndex([ae,ge,ie],m,y.computeStrides(o.shape)),$e=u[ke]+p[De];$e>se&&(se=$e)}}}let pe=y.locToIndex([K,Z,X,ie],j,y.computeStrides(L));U[pe]=se}}}return{dataId:l.write(y.toTypedArray(U,n.dtype),L,n.dtype),shape:L,dtype:n.dtype}}};var f1={kernelName:Mc,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:l}=t,u=e,c=y.toNestedArray(n.shape,u.data.get(n.dataId).values),p=y.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:_,filterHeight:k,filterWidth:E,dilationHeight:S,dilationWidth:R,outShape:F}=N.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",l);y.assert(s.rank===F.length,()=>`Error in ${Mc}, dy must have the same rank as output ${F.length}, but got ${s.rank}`);let L=y.toNestedArray(F,u.data.get(s.dataId).values),G=y.makeZerosNestedTypedArray(o.shape,o.dtype);for(let U=0;U<m;++U)for(let Y=0;Y<g;++Y){let K=Y*w-b.top;for(let Z=0;Z<x;++Z){let te=Z*_-b.left;for(let X=0;X<h;++X){let re=Number.MIN_SAFE_INTEGER,ie=0,se=0;for(let pe=0;pe<k;++pe){let ae=K+pe*S;if(ae>=0&&ae<f)for(let xe=0;xe<E;++xe){let ge=te+xe*R;if(ge>=0&&ge<d){let we=c[U][ae][ge][X]+p[pe][xe][X];we>re&&(re=we,ie=pe,se=xe)}}}G[ie][se][X]+=L[U][Y][Z][X]}}}return{dataId:u.write(y.toTypedArray(G,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var d1={kernelName:Pc,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:l}=t,u=e,c=y.toNestedArray(n.shape,u.data.get(n.dataId).values),p=y.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:_,filterHeight:k,filterWidth:E,dilationHeight:S,dilationWidth:R,outShape:F}=N.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",l);y.assert(s.rank===F.length,()=>`Error in ${Pc}, dy must have the same rank as output ${F.length}, but got ${s.rank}`);let L=y.toNestedArray(F,u.data.get(s.dataId).values),G=y.makeZerosNestedTypedArray(n.shape,n.dtype);for(let U=0;U<m;++U)for(let Y=0;Y<g;++Y){let K=Y*w-b.top;for(let Z=0;Z<x;++Z){let te=Z*_-b.left;for(let X=0;X<h;++X){let re=Number.MIN_SAFE_INTEGER,ie=K<0?0:K,se=te<0?0:te;for(let pe=0;pe<k;++pe){let ae=K+pe*S;if(ae>=0&&ae<f)for(let xe=0;xe<E;++xe){let ge=te+xe*R;if(ge>=0&&ge<d){let we=c[U][ae][ge][X]+p[pe][xe][X];we>re&&(re=we,ie=ae,se=ge)}}}G[U][ie][se][X]+=L[U][Y][Z][X]}}}return{dataId:u.write(y.toTypedArray(G,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function lK(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e;ee([n,o],"eluGrad");let s=new Float32Array(y.sizeFromShape(o.shape)),a=t.data.get(o.dataId).values,i=t.data.get(n.dataId).values;for(let l=0;l<a.length;++l){let u=a[l];u>=1?s[l]=i[l]:s[l]=i[l]*(u+1)}return t.makeTensorInfo(o.shape,"float32",s)}var h1={kernelName:eu,backendName:"cpu",kernelFunc:lK};var uK=Ze((r,e)=>r===e?1:0),$_=nt(ai,uK,null,"bool"),g1={kernelName:ai,backendName:"cpu",kernelFunc:$_};var cK=N.ERF_P,pK=N.ERF_A1,mK=N.ERF_A2,fK=N.ERF_A3,dK=N.ERF_A4,hK=N.ERF_A5,gK=Ae(ii,r=>{let e=Math.sign(r),t=Math.abs(r),n=1/(1+cK*t);return e*(1-((((hK*n+dK)*n+fK)*n+mK)*n+pK)*n*Math.exp(-t*t))}),x1={kernelName:ii,backendName:"cpu",kernelFunc:gK};function hp(r){let{inputs:e,backend:t,attrs:n}=r,{input:o}=e,{dim:s}=n,a=o.shape.length,i=o.shape.slice(),l=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+s+1),i.splice(l,0,1),tt({inputs:{x:o},backend:t,attrs:{shape:i}})}var y1={kernelName:ps,backendName:"cpu",kernelFunc:hp};var xK=Ze((r,e)=>r/e),wf=nt(no,xK),_f={kernelName:no,backendName:"cpu",kernelFunc:wf};function $g(r,e,t){let n=r.shape,o=n[0],s=n[1],a=t.data.get(r.dataId),i=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[o,s],c=y.sizeFromShape(u),p=y.getTypedArrayFromDType("float32",c),m=y.getTypedArrayFromDType("float32",c);for(let g=0;g<o;g++){let x=Xo({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,s]}}),b=Xo({inputs:{x:l},backend:t,attrs:{begin:[g,0],size:[1,s]}}),w=pr({inputs:{real:x,imag:b},backend:t}),{real:_,imag:k}=yK(w,e,t),E=N.mergeRealAndImagArrays(_,k);for(let S=0;S<s;S++){let R=N.getComplexWithIndex(E,S);p[g*s+S]=R.real,m[g*s+S]=R.imag}t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w)}let f=t.makeTensorInfo(u,"float32",p),d=t.makeTensorInfo(u,"float32",m),h=pr({inputs:{real:f,imag:d},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),h}function yK(r,e,t){let n=y.sizeFromShape(r.shape),o=t.data.get(r.dataId),s=t.data.get(o.complexTensorInfos.real.dataId).values,a=t.data.get(o.complexTensorInfos.imag.dataId).values;if(bK(n)){let i=R_(s,a,n,e,t),l=[r.shape[0],r.shape[1]];if(e){let u=t.makeTensorInfo(l,"float32",i.real),c=t.makeTensorInfo(l,"float32",i.imag),p=t.makeTensorInfo([],"float32",y.createScalarValue(n,"float32")),m=Er({inputs:{x:p},backend:t}),f=_f.kernelFunc({inputs:{a:u,b:p},backend:t}),d=_f.kernelFunc({inputs:{a:c,b:m},backend:t}),h=t.data.get(f.dataId).values,g=t.data.get(d.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),{real:h,imag:g}}return i}else{let i=N.mergeRealAndImagArrays(s,a),l=wK(i,n,e);return N.splitRealAndImagArrays(l)}}function bK(r){return(r&r-1)==0}function R_(r,e,t,n,o){if(t===1)return{real:r,imag:e};let s=N.mergeRealAndImagArrays(r,e),a=t/2,i=N.complexWithEvenIndex(s),l=i.real,u=i.imag,c=[l.length],p=o.makeTensorInfo(c,"float32",l),m=o.makeTensorInfo(c,"float32",u),f=pr({inputs:{real:p,imag:m},backend:o}),d=N.complexWithOddIndex(s),h=d.real,g=d.imag,x=[h.length],b=o.makeTensorInfo(x,"float32",h),w=o.makeTensorInfo(x,"float32",g),_=pr({inputs:{real:b,imag:w},backend:o}),k=R_(l,u,a,n,o),E=k.real,S=k.imag,R=[E.length],F=o.makeTensorInfo(R,"float32",E),L=o.makeTensorInfo(R,"float32",S),G=pr({inputs:{real:F,imag:L},backend:o}),j=R_(h,g,a,n,o),U=j.real,Y=j.imag,K=[U.length],Z=o.makeTensorInfo(K,"float32",U),te=o.makeTensorInfo(K,"float32",Y),X=pr({inputs:{real:Z,imag:te},backend:o}),re=N.exponents(t,n),ie=[re.real.length],se=o.makeTensorInfo(ie,"float32",re.real),pe=o.makeTensorInfo(ie,"float32",re.imag),ae=pr({inputs:{real:se,imag:pe},backend:o}),xe=hf({inputs:{a:ae,b:X},backend:o}),ge=Pa({inputs:{a:G,b:xe},backend:o}),we=bf({inputs:{a:G,b:xe},backend:o}),ke=Uo({inputs:{input:ge},backend:o}),De=Uo({inputs:{input:we},backend:o}),$e=Gi({inputs:{input:ge},backend:o}),Re=Gi({inputs:{input:we},backend:o}),qe=ml({inputs:[ke,De],backend:o,attrs:{axis:0}}),ut=ml({inputs:[$e,Re],backend:o,attrs:{axis:0}}),kt=o.data.get(qe.dataId).values,vt=o.data.get(ut.dataId).values;return o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(F),o.disposeIntermediateTensorInfo(L),o.disposeIntermediateTensorInfo(G),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(te),o.disposeIntermediateTensorInfo(X),o.disposeIntermediateTensorInfo(se),o.disposeIntermediateTensorInfo(pe),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(xe),o.disposeIntermediateTensorInfo(ge),o.disposeIntermediateTensorInfo(we),o.disposeIntermediateTensorInfo(ke),o.disposeIntermediateTensorInfo($e),o.disposeIntermediateTensorInfo(De),o.disposeIntermediateTensorInfo(Re),o.disposeIntermediateTensorInfo(qe),o.disposeIntermediateTensorInfo(ut),{real:kt,imag:vt}}function wK(r,e,t){let n=new Float32Array(e*2);for(let o=0;o<e;o++){let s=0,a=0;for(let i=0;i<e;i++){let l=N.exponent(o*i,e,t),u=N.getComplexWithIndex(r,i);s+=u.real*l.real-u.imag*l.imag,a+=u.real*l.imag+u.imag*l.real}t&&(s/=e,a/=e),N.assignToTypedArray(n,s,a,o)}return n}function _K(r){let{inputs:e,backend:t}=r,{input:n}=e,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=tt({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),l=$g(i,!1,t),u=tt({inputs:{x:l},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),u}var b1={kernelName:tu,backendName:"cpu",kernelFunc:_K};function kf(r){let{backend:e,attrs:t}=r,{shape:n,value:o,dtype:s}=t,a=s||y.inferDtype(o),i=y.getArrayFromDType(a,y.sizeFromShape(n));return kK(i,o,a),e.makeTensorInfo(n,a,i)}var w1={kernelName:ua,backendName:"cpu",kernelFunc:kf};function kK(r,e,t){r.fill(e)}var _1={kernelName:ui,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,o=t,s=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[a,i,l,u]=n.shape,c=o.data.get(n.dataId).values;for(let m=0;m<a;m++){let f=m*l*i*u;for(let d=0;d<i;d++){let h=d*(l*u);for(let g=0;g<l;g++){let x=g*u;for(let b=0;b<u;b++){let _=[a,d,g,b][2],k=Math.round(l-_),E=f+h+x+b,S=c[E];if(k>=0&&k<l){let R=k*u,F=f+h+R+b;S=c[F]}s[E]=S}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var vK=Ze((r,e)=>Math.floor(r/e)),CK=nt(io,vK,null,"int32"),k1={kernelName:io,backendName:"cpu",kernelFunc:CK};function IK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=A_({inputs:{x:o,filter:s},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m}});if(a){let g=h;h=Pa({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=fp(t,h,f,i,d),t.disposeIntermediateTensorInfo(g)}return h}var v1={kernelName:vs,backendName:"cpu",kernelFunc:IK};function NK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=D_({inputs:{x:o,filter:s},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m}});if(a){let g=h;h=Pa({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=fp(t,h,f,i,d),t.disposeIntermediateTensorInfo(g)}return h}var C1={kernelName:Cs,backendName:"cpu",kernelFunc:NK};function SK(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=y.sizeFromShape(n.shape),a=o.shape,i=a[a.length-1],[l,u,c,p]=N.prepareAndValidate(n,o);if(u===0)return t.makeTensorInfo(l,n.dtype,[]);let m=Ce([u,c],n.dtype),f=t.data.get(o.dataId).values,d=t.data.get(n.dataId).values;for(let h=0;h<u;h++){let g=[],x=0;for(let b=0;b<i;b++){let w=f[h*i+b];x+=w*p[b],g.push(w)}if(x<0||x>=s/c)throw new Error(`Invalid indices: ${g} does not index into ${n.shape}`);for(let b=0;b<c;b++)m.values[h*c+b]=d[x*c+b]}return t.makeTensorInfo(l,m.dtype,m.values)}var I1={kernelName:ci,backendName:"cpu",kernelFunc:SK};function TK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n;ee([o,s],"gatherV2");let l=i;i==null&&(l=0);let u=y.sizeFromShape(s.shape),c=y.parseAxisParam(a,o.shape)[0],p=N.segment_util.collectGatherOpShapeInfo(o,s,c,l),m=tt({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),f=tt({inputs:{x:s},backend:t,attrs:{shape:[p.batchSize,u/p.batchSize]}}),d=[p.batchSize,p.outerSize,u/p.batchSize,p.sliceSize],h=t.bufferSync(f),g=t.bufferSync(m),x=g_(g,h,d);return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.makeTensorInfo(p.outputShape,x.dtype,x.values)}var N1={kernelName:ms,backendName:"cpu",kernelFunc:TK};var EK=Ze((r,e)=>r>=e?1:0),AK=nt(lo,EK,null,"bool"),S1={kernelName:lo,backendName:"cpu",kernelFunc:AK};function DK(r){let{inputs:e,backend:t}=r,{input:n}=e,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=tt({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),l=$g(i,!0,t),u=tt({inputs:{x:l},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),u}var T1={kernelName:ru,backendName:"cpu",kernelFunc:DK};var $K=Ae(mi,r=>Number.isFinite(r)?1:0,"bool"),E1={kernelName:mi,backendName:"cpu",kernelFunc:$K};var RK=Ae(fi,r=>Math.abs(r)===Infinity?1:0,"bool"),A1={kernelName:fi,backendName:"cpu",kernelFunc:RK};var FK=Ae(di,r=>Number.isNaN(r)?1:0,"bool"),D1={kernelName:di,backendName:"cpu",kernelFunc:FK};var OK=Ze((r,e)=>r<=e?1:0),PK=nt(gi,OK,null,"bool"),$1={kernelName:gi,backendName:"cpu",kernelFunc:PK};function MK(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=x_(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var R1={kernelName:ou,backendName:"cpu",kernelFunc:MK};var LK=Ae(xi,r=>Math.log1p(r)),F1={kernelName:xi,backendName:"cpu",kernelFunc:LK};var zK=Ze((r,e)=>r&&e),BK=nt(yi,zK,null,"bool"),O1={kernelName:yi,backendName:"cpu",kernelFunc:BK};var VK=Ae(Qa,r=>r?0:1,"bool"),P1={kernelName:Qa,backendName:"cpu",kernelFunc:VK};var GK=Ze((r,e)=>r||e),jK=nt(el,GK,null,"bool"),M1={kernelName:el,backendName:"cpu",kernelFunc:jK};function WK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:l}=n;ee(o,"LRN");let u=o.shape[3],c=u-1,p=t.data.get(o.dataId).values,m=y.sizeFromShape(o.shape),f=new Float32Array(m);function d(h){let g=h%u,x=h-g+Math.max(0,g-s),b=h-g+Math.min(g+s,c),w=0;for(;x<=b;x++){let _=p[x];w+=_*_}return w}for(let h=0;h<m;h++){let g=d(h),x=p[h]*Math.pow(a+i*g,-l);f[h]=x}return t.makeTensorInfo(o.shape,o.dtype,f)}var L1={kernelName:ca,backendName:"cpu",kernelFunc:WK};function UK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:l,alpha:u,beta:c}=n;ee(a,"LRNGrad");let p=y.sizeFromShape(a.shape),m=a.shape[3],f=t.data.get(a.dataId).values,d=t.data.get(o.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(p),x=p;for(let b=0;b<x;b++){let w=b%m,_=b-w+Math.max(0,w-i),k=b-w+Math.min(m,w+i+1),E=0;for(let S=_;S<k;S++)E+=Math.pow(d[S],2);E=u*E+l;for(let S=_;S<k;S++){let R=-2*u*c*d[S]*h[b]/E;b===S&&(R+=Math.pow(E,-c)),R*=f[b],g[S]+=R}}return t.makeTensorInfo(a.shape,o.dtype,g)}var z1={kernelName:su,backendName:"cpu",kernelFunc:UK};function F_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=t,l=o.shape,u=l.length,c=y.parseAxisParam(s,l),p=c,m=N.getAxesPermutation(p,u),f=i.data.get(o.dataId).values;if(m!=null){let _=new Array(u);for(let k=0;k<_.length;k++)_[k]=l[m[k]];f=gf(f,l,o.dtype,m,_),p=N.getInnerMostAxes(p.length,u),l=_}ee(o,"max"),N.assertAxesAreInnerMostDims("max",p,u);let[d,h]=N.computeOutAndReduceShapes(l,p),g=y.sizeFromShape(h),x=y_(f,g,d,o.dtype),b=i.write(x,d,o.dtype),w=d;return a&&(w=N.expandShapeToKeepDim(d,c)),{dataId:b,shape:w,dtype:o.dtype}}var B1={kernelName:po,backendName:"cpu",kernelFunc:F_};function qK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;ee(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=n,u=1;y.assert(N.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=N.computePool2DInfo(o.shape,s,a,u,i,l),p;if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))p=Er({inputs:{x:o},backend:t});else{let m=t.data.get(o.dataId).values,f=y.computeStrides(o.shape),d=dp(m,o.shape,o.dtype,f,c,"max");p=t.makeTensorInfo(c.outShape,o.dtype,d.values)}return p}var V1={kernelName:fo,backendName:"cpu",kernelFunc:qK};function HK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:l,dataFormat:u}=n;ee(o,"maxPool3d");let c=N.computePool3DInfo(o.shape,s,a,1,i,l,u),p=t.data.get(o.dataId).values,m=Dg(p,o.shape,o.dtype,y.computeStrides(o.shape),c,"max");return t.makeTensorInfo(m.shape,"float32",m.values)}var G1={kernelName:pa,backendName:"cpu",kernelFunc:HK};function KK(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=n;ee([o,s],"maxPool3DGrad");let c=N.computePool3DInfo(s.shape,a,i,1,l,u),p=t.bufferSync(s),m=LT(p,c),f=c.strideDepth,d=c.strideHeight,h=c.strideWidth,g=c.dilationDepth,x=c.dilationHeight,b=c.dilationWidth,w=c.effectiveFilterDepth,_=c.effectiveFilterHeight,k=c.effectiveFilterWidth,E=w-1-c.padInfo.front,S=k-1-c.padInfo.left,R=_-1-c.padInfo.top,F=Ce(s.shape,"float32"),L=t.bufferSync(o);for(let G=0;G<c.batchSize;++G)for(let j=0;j<c.inChannels;++j)for(let U=0;U<c.inDepth;++U)for(let Y=0;Y<c.inHeight;++Y)for(let K=0;K<c.inWidth;++K){let Z=U-E,te=Y-R,X=K-S,re=0;for(let ie=0;ie<w;ie+=g){let se=(Z+ie)/f;if(!(se<0||se>=c.outDepth||Math.floor(se)!==se))for(let pe=0;pe<_;pe+=x){let ae=(te+pe)/d;if(!(ae<0||ae>=c.outHeight||Math.floor(ae)!==ae))for(let xe=0;xe<k;xe+=b){let ge=(X+xe)/h;if(ge<0||ge>=c.outWidth||Math.floor(ge)!==ge)continue;let we=w*_*k-1-m.get(G,se,ae,ge,j),ke=ie*_*k+pe*k+xe,De=we===ke?1:0;if(De===0)continue;re+=L.get(G,se,ae,ge,j)*De}}}F.set(re,G,U,Y,K,j)}return t.makeTensorInfo(F.shape,F.dtype,F.values)}var j1={kernelName:au,backendName:"cpu",kernelFunc:KK};function XK(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;ee([s,a],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=n,m=N.computePool2DInfo(i.shape,l,u,1,c,p),f=t.data.get(i.dataId).values,d=Ce(m.outShape,i.dtype,Ag(f,i.shape,i.dtype,m).values),h=m.strideHeight,g=m.strideWidth,x=m.dilationHeight,b=m.dilationWidth,w=m.effectiveFilterHeight,_=m.effectiveFilterWidth,k=_-1-m.padInfo.left,E=w-1-m.padInfo.top,S=Ce(i.shape,"float32"),R=t.data.get(o.dataId).values,F=Ce(o.shape,"float32",R);for(let L=0;L<m.batchSize;++L)for(let G=0;G<m.inChannels;++G)for(let j=0;j<m.inHeight;++j)for(let U=0;U<m.inWidth;++U){let Y=j-E,K=U-k,Z=0;for(let te=0;te<w;te+=x){let X=(Y+te)/h;if(!(X<0||X>=m.outHeight||Math.floor(X)!==X))for(let re=0;re<_;re+=b){let ie=(K+re)/g;if(ie<0||ie>=m.outWidth||Math.floor(ie)!==ie)continue;let se=w*_-1-d.get(L,X,ie,G),pe=te*_+re,ae=se===pe?1:0;if(ae===0)continue;Z+=F.get(L,X,ie,G)*ae}}S.set(Z,L,j,U,G)}return t.makeTensorInfo(S.shape,S.dtype,S.values)}var W1={kernelName:iu,backendName:"cpu",kernelFunc:XK};function U1(r,e,t,n,o){let s=y.computeStrides(e),a=dp(r,e,t,s,o,"max"),i=Ag(r,e,t,o,!0,n);return[a.values,i.values]}var q1={kernelName:lu,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,l=t;ee(n,"MaxPoolWithArgmax");let u=l.data.get(n.dataId).values,c=N.computePool2DInfo(n.shape,o,s,[1,1],a),[p,m]=U1(u,n.shape,n.dtype,i,c),f=l.write(p,c.outShape,n.dtype),d=l.write(m,c.outShape,n.dtype);return[{dataId:f,shape:c.outShape,dtype:n.dtype},{dataId:d,shape:c.outShape,dtype:"int32"}]}};function Xu(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ee(o,"sum");let i;o.dtype==="bool"?i=qo({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):i=Er({inputs:{x:o},backend:t});let l=i.shape.length,u=y.parseAxisParam(s,i.shape),c=N.getAxesPermutation(u,l),p=u,m=i;c!=null&&(m=rr({inputs:{x:i},backend:t,attrs:{perm:c}}),p=N.getInnerMostAxes(p.length,l)),N.assertAxesAreInnerMostDims("sum",p,m.shape.length);let[f,d]=N.computeOutAndReduceShapes(m.shape,p),h=N.upcastType(m.dtype,"int32"),g=pp(t,f,h),x=y.sizeFromShape(d),b=t.data.get(g.dataId).values,w=t.data.get(m.dataId).values;for(let _=0;_<b.length;++_){let k=_*x,E=0;for(let S=0;S<x;++S)E+=w[k+S];b[_]=E}if(a){let _=N.expandShapeToKeepDim(g.shape,u),k=g;g=tt({inputs:{x:g},backend:t,attrs:{shape:_}}),t.disposeIntermediateTensorInfo(k)}return t.disposeIntermediateTensorInfo(i),c!=null&&t.disposeIntermediateTensorInfo(m),g}var H1={kernelName:$o,backendName:"cpu",kernelFunc:Xu};function YK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=y.parseAxisParam(s,o.shape),u=N.computeOutAndReduceShapes(o.shape,i)[1],c=y.sizeFromShape(u),p=[],m=t.makeTensorInfo([],"float32",new Float32Array([c]));p.push(m);let f=qo({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});p.push(f);let d=wf({inputs:{a:f,b:m},backend:t});p.push(d);let h=Xu({inputs:{x:d},backend:t,attrs:{axis:s,keepDims:a}});return p.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var K1={kernelName:ho,backendName:"cpu",kernelFunc:YK};function ZK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;ee(o,"min");let i=y.parseAxisParam(s,o.shape),l=i,u=N.getAxesPermutation(l,o.shape.length),c=o;u!=null&&(c=rr({inputs:{x:o},backend:t,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,o.shape.length)),N.assertAxesAreInnerMostDims("min",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=y.sizeFromShape(m),d=y.makeZerosTypedArray(y.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let b=x*f,w=h[b];for(let _=0;_<f;++_){let k=h[b+_];k<w&&(w=k)}d[x]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(a){let x=N.expandShapeToKeepDim(p,i),b=tt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),b}return g}var X1={kernelName:go,backendName:"cpu",kernelFunc:ZK};function JK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,mode:a}=n;ee(o,"mirrorPad");let i=s.map((w,_)=>w[0]+o.shape[_]+w[1]),l=s.map(w=>w[0]),u=s.map((w,_)=>w[0]+o.shape[_]),c=a==="reflect"?0:1,p=t.data.get(o.dataId).values,m=o.shape.length,f=y.computeStrides(o.shape),d=y.sizeFromShape(i),h=i.length,g=y.computeStrides(i),x=y.getTypedArrayFromDType(o.dtype,d);for(let w=0;w<d;w++){let _=y.indexToLoc(w,h,g);for(let E=0;E<h;E++)_[E]<l[E]?_[E]=l[E]*2-_[E]-c:_[E]>=u[E]&&(_[E]=(u[E]-1)*2-_[E]+c);_=_.map((E,S)=>E-l[S]);let k=y.locToIndex(_,m,f);x[w]=p[k]}return{dataId:t.write(x,i,o.dtype),shape:i,dtype:o.dtype}}var Y1={kernelName:ma,backendName:"cpu",kernelFunc:JK};var QK=Ze((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),e6=nt(bi,QK),Z1={kernelName:bi,backendName:"cpu",kernelFunc:e6};var dE=Dc(mE());function V_(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=o.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let l=y.parseAxisParam([i],o.shape),u=F_({inputs:{x:o},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),c=N.expandShapeToKeepDim(u.shape,l),p=tt({inputs:{x:u},backend:t,attrs:{shape:c}}),m=bf({inputs:{a:o,b:p},backend:t}),f=h_({inputs:{x:m},backend:t}),d=Xu({inputs:{x:f},backend:t,attrs:{axis:l,keepDims:!1}}),h=tt({inputs:{x:d},backend:t,attrs:{shape:c}}),g=wf({inputs:{a:f,b:h},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var fE={kernelName:Ro,backendName:"cpu",kernelFunc:V_};function a6(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n;ee(o,"multinomial");let l=i?o:V_({inputs:{logits:o},backend:t,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],p=t.data.get(l.dataId).values,m=[u,s],f=y.makeZerosTypedArray(y.sizeFromShape(m),"int32");for(let d=0;d<u;++d){let h=d*c,g=new Float32Array(c-1);g[0]=p[h];for(let w=1;w<g.length;++w)g[w]=g[w-1]+p[h+w];let x=dE.alea(a.toString()),b=d*s;for(let w=0;w<s;++w){let _=x();f[b+w]=g.length;for(let k=0;k<g.length;k++)if(_<g[k]){f[b+w]=k;break}}}return i||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(m,"int32",f)}var hE={kernelName:uu,backendName:"cpu",kernelFunc:a6};var l6=Tr.nonMaxSuppressionV3Impl;function u6(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=n;ee(o,"NonMaxSuppression");let u=t.data.get(o.dataId).values,c=t.data.get(s.dataId).values,{selectedIndices:p}=l6(u,c,a,i,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}var gE={kernelName:_i,backendName:"cpu",kernelFunc:u6};var c6=Tr.nonMaxSuppressionV4Impl;function p6(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=n;ee(o,"NonMaxSuppressionPadded");let c=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,{selectedIndices:m,validOutputs:f}=c6(c,p,a,i,l,u);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var xE={kernelName:ki,backendName:"cpu",kernelFunc:p6};var m6=Tr.nonMaxSuppressionV5Impl;function f6(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=n;ee(o,"NonMaxSuppressionWithScore");let c=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,m=a,f=i,d=l,h=u,{selectedIndices:g,selectedScores:x}=m6(c,p,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var yE={kernelName:vi,backendName:"cpu",kernelFunc:f6};function d6(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n;ee(o,"oneHot");let l=y.sizeFromShape(o.shape),u=new Float32Array(l*s);u.fill(i);let c=t.data.get(o.dataId).values;for(let p=0;p<l;++p)c[p]>=0&&c[p]<s&&(u[p*s+c[p]]=a);return t.makeTensorInfo([...o.shape,s],"int32",u)}var bE={kernelName:bo,backendName:"cpu",kernelFunc:d6};function vf(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Uo({inputs:{input:n},backend:t}),s=vf({inputs:{x:o},backend:t}),a=Gi({inputs:{input:n},backend:t}),i=vf({inputs:{x:a},backend:t}),l=pr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return kf({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var wE={kernelName:_s,backendName:"cpu",kernelFunc:vf};function _E(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Uo({inputs:{input:n},backend:t}),s=_E({inputs:{x:o},backend:t}),a=Gi({inputs:{input:n},backend:t}),i=vf({inputs:{x:a},backend:t}),l=pr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return kf({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var kE={kernelName:ds,backendName:"cpu",kernelFunc:_E};function G_(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return hp({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(c=>{y.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=e.map(c=>{let p=hp({inputs:{input:c},backend:t,attrs:{dim:o}});return i.push(p),p}),u=ml({inputs:l,backend:t,attrs:{axis:o}});return i.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}var vE={kernelName:hs,backendName:"cpu",kernelFunc:G_};function h6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;ee(o,"pad");let i=s.map((b,w)=>b[0]+o.shape[w]+b[1]),l=s.map(b=>b[0]),u=t.data.get(o.dataId).values,c=y.sizeFromShape(o.shape),p=o.shape.length,m=y.computeStrides(o.shape),f=y.sizeFromShape(i),d=i.length,h=y.computeStrides(i),g=y.getTypedArrayFromDType(o.dtype,f);a!==0&&g.fill(a);for(let b=0;b<c;b++){let _=y.indexToLoc(b,p,m).map((E,S)=>E+l[S]),k=y.locToIndex(_,d,h);g[k]=u[b]}return{dataId:t.write(g,i,o.dtype),shape:i,dtype:o.dtype}}var Fg={kernelName:wo,backendName:"cpu",kernelFunc:h6};var g6=Ze((r,e)=>Math.pow(r,e)),x6=nt(_o,g6),CE={kernelName:_o,backendName:"cpu",kernelFunc:x6};function y6(r){let{backend:e,attrs:t}=r,{start:n,stop:o,dtype:s,step:a}=t,i=xf(n,o,a,s);return e.makeTensorInfo([i.length],s,i)}var IE={kernelName:fa,backendName:"cpu",kernelFunc:y6};var b6=Ae(Ii,r=>1/r),NE={kernelName:Ii,backendName:"cpu",kernelFunc:b6};function w6(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;ee(o,"resizeBilinear");let l=y.computeStrides(o.shape),[u,c]=i,[p,m,f,d]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(y.sizeFromShape([p,u,c,d])),x=[s&&u>1?m-1:m,s&&c>1?f-1:f],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],w=0,_=x[0]/b[0],k=x[1]/b[1];for(let E=0;E<p;E++)for(let S=0;S<u;S++){let R;a?R=_*(S+.5)-.5:R=_*S;let F=Math.max(0,Math.floor(R)),L=R-F,G=Math.min(m-1,Math.ceil(R)),j=E*l[0]+F*l[1],U=E*l[0]+G*l[1];for(let Y=0;Y<c;Y++){let K;a?K=k*(Y+.5)-.5:K=k*Y;let Z=Math.max(0,Math.floor(K)),te=K-Z,X=Math.min(f-1,Math.ceil(K)),re=j+Z*l[2],ie=U+Z*l[2],se=j+X*l[2],pe=U+X*l[2];for(let ae=0;ae<d;ae++){let xe=h[re+ae],ge=h[ie+ae],we=h[se+ae],ke=h[pe+ae],De=xe+(we-xe)*te,$e=ge+(ke-ge)*te,Re=De+($e-De)*L;g[w++]=Re}}}return t.makeTensorInfo([p,u,c,d],"float32",g)}var SE={kernelName:Co,backendName:"cpu",kernelFunc:w6};function _6(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;ee([s,o],"resizeBilinearGrad");let i=y.computeStrides(o.shape),[l,u,c,p]=o.shape,[,m,f]=s.shape,d=new Float32Array(l*u*c*p),h=[a&&m>1?u-1:u,a&&f>1?c-1:c],g=[a&&m>1?m-1:m,a&&f>1?f-1:f],x=h[0]/g[0],b=h[1]/g[1],w=t.data.get(s.dataId).values,_=0;for(let k=0;k<l;k++){let E=k*i[0];for(let S=0;S<m;S++){let R=S*x,F=Math.floor(R),L=Math.min(Math.ceil(R),u-1),G=E+F*i[1],j=E+L*i[1],U=R-F,Y=1-U;for(let K=0;K<f;K++){let Z=K*b,te=Math.floor(Z),X=Math.min(Math.ceil(Z),c-1),re=Z-te,ie=1-re,se=G+te*i[2],pe=G+X*i[2],ae=j+te*i[2],xe=j+X*i[2],ge=Y*ie,we=Y*re,ke=U*ie,De=U*re;for(let $e=0;$e<p;$e++){let Re=w[_++];d[se+$e]+=Re*ge,d[pe+$e]+=Re*we,d[ae+$e]+=Re*ke,d[xe+$e]+=Re*De}}}}return t.makeTensorInfo([l,c,u,p],"float32",d)}var TE={kernelName:mu,backendName:"cpu",kernelFunc:_6};function k6(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;ee(o,"resizeNearestNeighbor");let l=y.computeStrides(o.shape),[u,c]=i,[p,m,f,d]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(p*u*c*d),x=[s&&u>1?m-1:m,s&&c>1?f-1:f],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],w=x[0]/b[0],_=x[1]/b[1],k=0;for(let E=0;E<p;E++){let S=E*l[0];for(let R=0;R<u;R++){let F=a?w*(R+.5):w*R,L=Math.min(m-1,s?Math.round(F):Math.floor(F));a&&(L=Math.max(0,L));let G=S+L*l[1];for(let j=0;j<c;j++){let U=a?_*(j+.5):_*j,Y=Math.min(f-1,s?Math.round(U):Math.floor(U));a&&(Y=Math.max(0,Y));let K=G+Y*l[2];for(let Z=0;Z<d;Z++){let te=h[K+Z];g[k++]=te}}}}return t.makeTensorInfo([p,u,c,d],o.dtype,g)}var EE={kernelName:da,backendName:"cpu",kernelFunc:k6};function v6(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;ee([s,o],"resizeNearestNeighborGrad");let i=y.computeStrides(o.shape),l=y.computeStrides(s.shape),[u,c,p,m]=o.shape,[,f,d]=s.shape,h=new Float32Array(u*c*p*m),g=t.data.get(s.dataId).values,x=[a&&f>1?c-1:c,a&&d>1?p-1:p],b=[a&&f>1?f-1:f,a&&d>1?d-1:d],w=x[0]/b[0],_=x[1]/b[1],k=1/w,E=1/_,S=Math.ceil(k)*2+2,R=Math.ceil(E)*2+2;for(let F=0;F<u;F++){let L=F*i[0];for(let G=0;G<c;G++){let j=L+G*i[1],U=Math.floor(G*k),Y=Math.floor(U-S/2);for(let K=0;K<p;K++){let Z=j+K*i[2],te=Math.floor(K*E),X=Math.floor(te-R/2);for(let re=0;re<m;re++){let ie=0;for(let se=0;se<S;se++){let pe=se+Y;if(pe<0||pe>=f)continue;let ae=L+pe*l[1],xe=pe*w,ge=Math.min(c-1,a?Math.round(xe):Math.floor(xe));if(G===ge)for(let we=0;we<R;we++){let ke=we+X;if(ke<0||ke>=d)continue;let De=ae+ke*l[2],$e=ke*_,Re=Math.min(p-1,a?Math.round($e):Math.floor($e));K===Re&&(ie+=g[De+re])}}h[Z+re]=ie}}}}return t.makeTensorInfo(o.shape,o.dtype,h)}var AE={kernelName:pu,backendName:"cpu",kernelFunc:v6};function C6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n;ee(o,"reverse");let a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return Er({inputs:{x:o},backend:t});let l=new ct(o.shape,o.dtype),u=t.bufferSync(o);for(let c=0;c<l.size;c++){let p=l.indexToLoc(c),m=p.slice();i.forEach(f=>m[f]=o.shape[f]-1-m[f]),l.set(u.get(...m),...p)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}var DE={kernelName:No,backendName:"cpu",kernelFunc:C6};var $E={kernelName:Fi,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,l=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[u,c,p,m]=n.shape,[f,d]=N.getImageCenter(a,c,p),h=255,g=Math.sin(o),x=Math.cos(o),b=i.data.get(n.dataId).values;for(let _=0;_<u;_++){let k=_*p*c*m;for(let E=0;E<c;E++){let S=E*(p*m);for(let R=0;R<p;R++){let F=R*m;for(let L=0;L<m;L++){let G=[u,E,R,L],j=G[2],U=G[1],Y=(j-f)*x-(U-d)*g,K=(j-f)*g+(U-d)*x;Y=Math.round(Y+f),K=Math.round(K+d);let Z=s;if(typeof s!="number"&&(L===3?Z=h:Z=s[L]),Y>=0&&Y<p&&K>=0&&K<c){let X=K*(p*m),re=Y*m,ie=k+X+re+L;Z=b[ie]}let te=k+S+F+L;l[te]=Z}}}}return{dataId:i.write(l,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var I6=Ae(So,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2==0?e:e+1}),RE={kernelName:So,backendName:"cpu",kernelFunc:I6};function Og(r,e,t,n,o,s,a,i,l,u){let c=[n/o,o],p=r.values,m=e.values;if(n===0)return Ce(t,e.dtype);let f=Ce(c,e.dtype);f.values.fill(l);for(let d=0;d<s;d++){let h=[],g=0;for(let x=0;x<a;x++){let b=p[d*a+x];h.push(b),g+=b*i[x]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let x=0;x<o;x++)u?f.values[g*o+x]+=m[d*o+x]:f.values[g*o+x]=e.rank===0?m[0]:m[d*o+x]}return f}function N6(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=N.calculateShapes(s,o,a),m=!0,f=t.bufferSync(o),d=t.bufferSync(s),h=Og(f,d,a,p,u,l,i,c,0,m);return t.makeTensorInfo(a,h.dtype,h.values)}var FE={kernelName:Ni,backendName:"cpu",kernelFunc:N6};function S6(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e;ee([n,o,s],"select");let a=n.shape.length,i=t.data.get(n.dataId).values,l=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,c=fr(o.dtype,s.dtype),p=y.makeZerosTypedArray(y.sizeFromShape(o.shape),c),m=0,f=a===0||a>1||o.shape.length===1?1:y.sizeFromShape(o.shape.slice(1));for(let d=0;d<i.length;d++)for(let h=0;h<f;h++)i[d]===1?p[m++]=l[d]:p[m++]=u[d];return t.makeTensorInfo(o.shape,c,p)}var OE={kernelName:xs,backendName:"cpu",kernelFunc:S6};var T6=N.SELU_SCALEALPHA,E6=N.SELU_SCALE,A6=Ae(Si,r=>r>=0?E6*r:T6*(Math.exp(r)-1)),PE={kernelName:Si,backendName:"cpu",kernelFunc:A6};var D6=Ae(Ao,r=>1/(1+Math.exp(-r))),ME={kernelName:Ao,backendName:"cpu",kernelFunc:D6};var $6=Ae(Ei,r=>r<0?-1:r>0?1:0),LE={kernelName:Ei,backendName:"cpu",kernelFunc:$6};var R6=Ae(Eo,r=>Math.sin(r)),zE={kernelName:Eo,backendName:"cpu",kernelFunc:R6};var F6=Ae(Ti,r=>Math.sinh(r)),BE={kernelName:Ti,backendName:"cpu",kernelFunc:F6};var O6=11920928955078125e-23,VE=Math.log(O6)+2,P6=Ae(Ai,r=>{let e=r>-VE,t=r<VE,n=Math.exp(r),o;return t?o=n:e?o=r:o=Math.log(1+n),o}),GE={kernelName:Ai,backendName:"cpu",kernelFunc:P6};function M6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;ee([o],"spaceToBatchND");let i=y.sizeFromShape(s),l=[[0,0]];l.push(...a);for(let E=1+s.length;E<o.shape.length;++E)l.push([0,0]);let u=Fg.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:l,constantValue:0}}),c=N.getReshaped(u.shape,s,i,!1),p=N.getPermuted(c.length,s.length,!1),m=N.getReshapedPermuted(u.shape,s,i,!1),h=tt({inputs:{x:u},backend:t,attrs:{shape:c}}),b=rr({inputs:{x:h},backend:t,attrs:{perm:p}}),k=tt({inputs:{x:b},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(b),k}var jE={kernelName:ha,backendName:"cpu",kernelFunc:M6};function L6(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:m}=N.calculateShapes(s,o,i),f=!1,d=t.bufferSync(o),h=t.bufferSync(s),g=t.data.get(a.dataId).values[0],x=Og(d,h,i,m,c,u,l,p,g,f);return t.makeTensorInfo(i,x.dtype,x.values)}var WE={kernelName:fu,backendName:"cpu",kernelFunc:L6};function z6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],l=N.prepareSplitSize(o,s,i),u=new Array(o.shape.length).fill(0),c=o.shape.slice();return l.map(p=>{let m=[...c];m[i]=p;let f=Xo({inputs:{x:o},backend:t,attrs:{begin:u,size:m}});return u[i]+=p,f})}var UE={kernelName:bs,backendName:"cpu",kernelFunc:z6};var B6=Ae(Do,r=>Math.sqrt(r)),qE={kernelName:Do,backendName:"cpu",kernelFunc:B6};var HE={kernelName:ga,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e;ee(t,"square");let o=n.data.get(t.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){let l=o[i];s[i]=l*l}return{dataId:n.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var V6=Ae(Rn,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),KE={kernelName:Rn,backendName:"cpu",kernelFunc:V6};function G6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n;ee(o,"stridedSlice");let{nonStrided:f,$begin:d,$strides:h,size:g,newShape:x,outShape:b}=or.sliceInfo(o.shape,s,a,i,l,u,c,p,m),w=tt({inputs:{x:o},backend:t,attrs:{shape:x}}),_;if(f){let E=Xo({inputs:{x:w},backend:t,attrs:{begin:d,size:g}});_=tt({inputs:{x:E},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(E)}else if(b.some(E=>E===0))_=t.makeTensorInfo(b,o.dtype,[]);else{let E=t.bufferSync(w),S=b_(b,E,h,d);_=t.makeTensorInfo(S.shape,S.dtype,S.values)}let k=tt({inputs:{x:_},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(_),k}var XE={kernelName:Di,backendName:"cpu",kernelFunc:G6};var j6=Ae($i,r=>Math.tan(r)),YE={kernelName:$i,backendName:"cpu",kernelFunc:j6};var W6=Ae(Po,r=>Math.tanh(r)),ZE={kernelName:Po,backendName:"cpu",kernelFunc:W6};function U6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;ee(o,"tile");let a=w_(t.bufferSync(o),s);return t.makeTensorInfo(a.shape,a.dtype,a.values)}var JE={kernelName:yn,backendName:"cpu",kernelFunc:U6};function q6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n;ee(o,"topk");let i=t.data.get(o.dataId).values,[l,u]=__(i,o.shape,o.dtype,s,a);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}var QE={kernelName:Ri,backendName:"cpu",kernelFunc:q6};function H6(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;ee(s,"unique");let a=n.data.get(s.dataId).values,{outputValues:i,outputShape:l,indices:u}=k_(a,o,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,i),n.makeTensorInfo([u.length],"int32",u)]}var eA={kernelName:du,backendName:"cpu",kernelFunc:H6};function K6(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape.length,i=o.shape[s],l=new Array(a-1),u=0;for(let f=0;f<a;f++)f!==s&&(l[u++]=o.shape[f]);let c=new Array(a).fill(0),p=o.shape.slice();p[s]=1;let m=new Array(i);for(let f=0;f<m.length;f++){c[s]=f;let d=Xo({inputs:{x:o},backend:t,attrs:{begin:c,size:p}});m[f]=tt({inputs:{x:d},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(d)}return m}var tA={kernelName:ws,backendName:"cpu",kernelFunc:K6};function X6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n;ee(o,"unsortedSegmentSum");let i=o.shape.length,l=s.shape.length,u=[],c=[],p=i-l,m=s;for(let d=0;d<p;++d){let h=hp({inputs:{input:m},backend:t,attrs:{dim:d+1}});m=h,c.push(h)}for(let d=0;d<a;++d){let h=y.createScalarValue(d,"int32"),g=t.makeTensorInfo([],"int32",h),x=$_({inputs:{a:g,b:m},backend:t}),b=qo({inputs:{x},backend:t,attrs:{dtype:"float32"}}),w=hf({inputs:{a:b,b:o},backend:t}),_=Xu({inputs:{x:w},backend:t,attrs:{axis:0,keepDims:!1}});u.push(_),c.push(g),c.push(x),c.push(b),c.push(w),c.push(_)}let f=G_({inputs:u,backend:t,attrs:{axis:0}});return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var rA={kernelName:xa,backendName:"cpu",kernelFunc:X6};var Y6=[IT,$S,NT,ST,LS,TT,ET,AT,DT,$T,RT,FT,OT,PT,MT,zT,BT,VT,GT,CT,jT,WT,UT,PS,BS,qT,RS,HT,XT,ZT,JT,YT,e1,t1,QT,r1,n1,o1,s1,i1,a1,l1,u1,c1,p1,m1,d1,f1,_f,yT,h1,g1,x1,GS,y1,WS,b1,w1,_1,qS,k1,v1,C1,I1,N1,KS,S1,FS,T1,KT,E1,A1,D1,bT,YS,$1,R1,JS,F1,O1,P1,M1,L1,z1,eT,V1,G1,j1,W1,q1,B1,K1,X1,rT,Y1,Z1,hE,nT,sT,gE,xE,yE,aT,bE,kE,vE,Fg,CE,wT,cT,IE,OS,NE,_T,kT,vT,SE,TE,EE,AE,DE,$E,RE,mT,FE,OE,PE,ME,LE,zE,BE,fT,fE,GE,jE,WE,UE,qE,HE,hT,KE,XE,xT,H1,YE,ZE,JE,QE,lT,eA,tA,rA,wE];for(let r of Y6)tl(r);var sA={};Ye(sA,{assertNotComplex:()=>Fs,bindCanvasToFramebuffer:()=>i5,bindColorTextureToFramebuffer:()=>Nf,bindTextureToProgramUniformSampler:()=>nk,bindTextureUnit:()=>lA,bindVertexBufferToProgramAttribute:()=>Pg,callAndCheck:()=>Ne,canBeRepresented:()=>U_,createFragmentShader:()=>H_,createFramebuffer:()=>ek,createProgram:()=>K_,createStaticIndexBuffer:()=>Z_,createStaticVertexBuffer:()=>Y_,createTexture:()=>J_,createVertexShader:()=>q_,getBatchDim:()=>La,getExtensionOrThrow:()=>gp,getFramebufferErrorMessage:()=>uA,getMaxTexturesInShader:()=>ik,getNumChannels:()=>o5,getProgramUniformLocation:()=>rk,getProgramUniformLocationOrThrow:()=>tk,getRowsCols:()=>za,getShapeAs3D:()=>Sf,getTextureShapeFromLogicalShape:()=>ok,getWebGLDisjointQueryTimerVersion:()=>ak,getWebGLErrorMessage:()=>iA,getWebGLMaxTextureSize:()=>sk,hasExtension:()=>kn,isCapableOfRenderingToFloatTexture:()=>uk,isDownloadFloatTextureEnabled:()=>ck,isReshapeFree:()=>hl,isWebGLFenceEnabled:()=>pk,isWebGLVersionEnabled:()=>Vg,linkProgram:()=>X_,resetMaxTextureSize:()=>a5,resetMaxTexturesInShader:()=>l5,unbindColorTextureFromFramebuffer:()=>Mg,unbindTextureUnit:()=>s5,validateFramebuffer:()=>xp,validateProgram:()=>If,validateTextureSize:()=>Q_});var Zu={},j_={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function W_(r,e){Zu[r]=e}function zn(r){if(!(r in Zu)){let t=Z6(r);if(t!==null)Zu[r]=t;else return console.log("Could not get context for WebGL version",r),null}let e=Zu[r];return e.isContextLost()?(delete Zu[r],zn(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Zu[r])}function J6(r){if(typeof OffscreenCanvas!="undefined"&&r===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Z6(r){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=J6(r);return e.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete Zu[r]},!1),r===1?e.getContext("webgl",j_)||e.getContext("experimental-webgl",j_):e.getContext("webgl2",j_)}var fl;(function(r){r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH"})(fl||(fl={}));var Ar;(function(r){r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD"})(Ar||(Ar={}));var wr;(function(r){r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(wr||(wr={}));function Ju(r,e){return[e,r]}function nA(r,e){return r*e}function dl(r){let e=y.sizeFromShape(r),t=Math.ceil(e/4);return y.sizeToSquarishShape(t)}function ji(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function oA(r,e){let[t,n]=ji(r,e);return t*n*4}function Cf(r,e){let t=r,n,o,s,a,i,l,u,c,p,m;return W().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,s=t.RGBA16F,a=t.RGBA32F,i=t.RED,u=4,c=1,p=t.HALF_FLOAT,m=t.FLOAT):(n=r.RGBA,o=r.RGBA,s=r.RGBA,a=t.RGBA,i=r.RGBA,u=4,c=4,p=e!=null?e.HALF_FLOAT_OES:null,m=r.FLOAT),l=r.RGBA,{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:m}}function Ne(r,e){let t=e();return W().getBool("DEBUG")&&Q6(r),t}function Q6(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+iA(r,e))}var e5=596e-10,t5=65504;function U_(r){return!!(W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||e5<Math.abs(r)&&Math.abs(r)<t5)}function iA(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function gp(r,e){return Ma(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function q_(r,e){let t=Ma(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ne(r,()=>r.shaderSource(t,e)),Ne(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function H_(r,e){let t=Ma(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ne(r,()=>r.shaderSource(t,e)),Ne(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw r5(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var n5=/ERROR: [0-9]+:([0-9]+):/g;function r5(r,e){let t=n5.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let n=+t[1],o=r.split(`
`),s=o.length.toString().length+2,a=o.map((p,m)=>y.rightPad((m+1).toString(),s)+p),i=0;for(let p=0;p<a.length;p++)i=Math.max(a[p].length,i);let l=a.slice(0,n-1),u=a.slice(n-1,n),c=a.slice(n);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${y.rightPad(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function K_(r){return Ma(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function X_(r,e){if(Ne(r,()=>r.linkProgram(e)),r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function If(r,e){if(Ne(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Y_(r,e){let t=Ma(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Ne(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),Ne(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function Z_(r,e){let t=Ma(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Ne(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),Ne(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function o5(){return W().getNumber("WEBGL_VERSION")===2?1:4}function J_(r){return Ma(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function Q_(r,e){let t=W().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let n=`[${r}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>t||e>t){let n=`[${r}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function ek(r){return Ma(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Pg(r,e,t,n,o,s,a){let i=r.getAttribLocation(e,t);return i===-1?!1:(Ne(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),Ne(r,()=>r.vertexAttribPointer(i,o,r.FLOAT,!1,s,a)),Ne(r,()=>r.enableVertexAttribArray(i)),!0)}function lA(r,e,t){aA(r,t),Ne(r,()=>r.activeTexture(r.TEXTURE0+t)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function s5(r,e){aA(r,e),Ne(r,()=>r.activeTexture(r.TEXTURE0+e)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function tk(r,e,t){return Ma(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function rk(r,e,t){return r.getUniformLocation(e,t)}function nk(r,e,t,n){Ne(r,()=>lA(r,e,n)),Ne(r,()=>r.uniform1i(t,n))}function i5(r){Ne(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),Ne(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),Ne(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function Nf(r,e,t){Ne(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),Ne(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function Mg(r,e){Ne(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),Ne(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function xp(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+uA(r,e))}function uA(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Ma(r,e,t){let n=Ne(r,()=>e());if(n==null)throw new Error(t);return n}function aA(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+r.TEXTURE0;if(n<r.TEXTURE0||n>t){let o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function La(r,e=2){return y.sizeFromShape(r.slice(0,r.length-e))}function za(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Sf(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[La(r),...za(r)]),e}function ok(r,e=!1){let t=W().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,r=r.map((o,s)=>s>=r.length-2?y.nearestLargerEven(r[s]):r[s]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=y.squeezeShape(r).newShape);let n=y.sizeFromShape(r);if(r.length<=1&&n<=t)return[1,n];if(r.length===2&&r[0]<=t&&r[1]<=t)return r;if(r.length===3&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(r.length===3&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(e){let o=La(r),s=2,a=2;return r.length&&([s,a]=za(r)),n=o*(s/2)*(a/2),y.sizeToSquarishShape(n).map(i=>i*2)}return y.sizeToSquarishShape(n)}function Lg(r){return r%2==0}function hl(r,e){if(r=r.slice(-2),e=e.slice(-2),y.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r.slice(-1)[0],n=e.slice(-1)[0];if(t===n||Lg(t)&&Lg(n)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&Lg(r[0])&&Lg(e[0])}var zg,Bg;function sk(r){if(zg==null){let e=zn(r);zg=e.getParameter(e.MAX_TEXTURE_SIZE)}return zg}function a5(){zg=null}function l5(){Bg=null}function ik(r){if(Bg==null){let e=zn(r);Bg=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Bg)}function ak(r){if(r===0)return 0;let e,t=zn(r);return kn(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:kn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function kn(r,e){return r.getExtension(e)!=null}function Vg(r){try{if(zn(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function uk(r){if(r===0)return!1;let e=zn(r);if(r===1){if(!kn(e,"OES_texture_float"))return!1}else if(!kn(e,"EXT_color_buffer_float"))return!1;return lk(e)}function ck(r){if(r===0)return!1;let e=zn(r);if(r===1){if(!kn(e,"OES_texture_float")||!kn(e,"WEBGL_color_buffer_float"))return!1}else{if(kn(e,"EXT_color_buffer_float"))return lk(e);let n="EXT_color_buffer_half_float";if(kn(e,n)){let o=e.getExtension(n);return u5(e,o)}return!1}return lk(e)}function lk(r){let e=Cf(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,n,o,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),a}function u5(r,e){let t=Cf(r,e),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,o,s,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(a),i}function pk(r){return r!==2?!1:zn(r).fenceSync!=null}function Fs(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&y.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var Be=W();Be.registerFlag("HAS_WEBGL",()=>Be.getNumber("WEBGL_VERSION")>0);Be.registerFlag("WEBGL_VERSION",()=>Vg(2)?2:Vg(1)?1:0);Be.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Be.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Be.get("WEBGL_VERSION")===2);Be.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Be.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Be.registerFlag("WEBGL_PACK",()=>Be.getBool("HAS_WEBGL"));Be.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Be.getBool("WEBGL_PACK"));Be.registerFlag("WEBGL_PACK_CLIP",()=>Be.getBool("WEBGL_PACK"));Be.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1);Be.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Be.getBool("WEBGL_PACK"));Be.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Be.getBool("WEBGL_PACK"));Be.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Be.getBool("WEBGL_PACK"));Be.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Be.getBool("WEBGL_PACK"));Be.registerFlag("WEBGL_PACK_REDUCE",()=>Be.getBool("WEBGL_PACK"));Be.registerFlag("WEBGL_LAZILY_UNPACK",()=>Be.getBool("WEBGL_PACK"));Be.registerFlag("WEBGL_CONV_IM2COL",()=>Be.getBool("WEBGL_PACK"));Be.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>sk(Be.getNumber("WEBGL_VERSION")));Be.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>ik(Be.getNumber("WEBGL_VERSION")));Be.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Be.getNumber("WEBGL_VERSION");return r===0?0:ak(r)});Be.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Be.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Wc.isMobile());Be.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>uk(Be.getNumber("WEBGL_VERSION")));Be.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Be.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Be.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Be.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>ck(Be.getNumber("WEBGL_VERSION")));Be.registerFlag("WEBGL_FENCE_API_ENABLED",()=>pk(Be.getNumber("WEBGL_VERSION")));Be.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Be.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Be.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});function Pt(){let r,e,t,n,o,s,a,i,l,u;return W().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",n="in",o="texture",s="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",n="varying",o="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}function Os(r,e,t="index"){let n=y.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / ${o}`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${a}; ${i};`}).join("")}function yp(r){let e=y.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}var Gg=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var mk=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=fl.DENSE;let t=dl(e),n=Pt();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${Os(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}};var fk=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=fl.DENSE;let t=dl(e),n=Pt();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${Os(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}};var dk=class{constructor(e){this.variableNames=["A"],this.outTexUsage=Ar.DOWNLOAD;let t=Pt();this.outputShape=e,this.userCode=`
      ${Gg}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var hk=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Ar.DOWNLOAD;let t=Pt();this.outputShape=e,this.userCode=`
      ${Gg}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var gk=class{constructor(e,t,n=!1){this.variableNames=["A"];let o=Pt(),[s,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`
      ${yp(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${a};
        int c = imod(flatIndex, ${a});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);
        vec4 values = ${o.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${o.output} = vec4(${i}, 0., 0., 0.);
      }
    `}};var xk=class{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let o=Pt(),[s,a]=t;this.outputShape=e;let i="",l="result";n&&(l="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let c=0;c<=1;c++){let p=u*2+c;i+=`
          localCoords = coords;
          if(localCoords[2] + ${c} < ${e[2]}) {
            localCoords[2] += ${c};
            if(localCoords[1] + ${u} < ${e[1]}) {
              localCoords[1] += ${u};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${a};
              c = imod(flatIndex, ${a});
              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);
              values = ${o.texture2D}(A, uv);

              if(offset == 0) {
                result[${p}] = values[0];
              } else if(offset == 1) {
                result[${p}] = values[1];
              } else if(offset == 2) {
                result[${p}] = values[2];
              } else {
                result[${p}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${yp(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${i}

        ${o.output} = ${l};
      }
    `}};var cA={};Ye(cA,{bindVertexProgramAttributeStreams:()=>Nk,createBufferFromOutputTexture:()=>Ek,createFloat16MatrixTexture:()=>kk,createFloat16PackedMatrixTexture:()=>Ik,createFloat32MatrixTexture:()=>_k,createIndexBuffer:()=>wk,createPackedMatrixTexture:()=>Ck,createUnsignedBytesMatrixTexture:()=>vk,createVertexBuffer:()=>bk,createVertexShader:()=>yk,downloadByteEncodedFloatMatrixFromOutputTexture:()=>Dk,downloadFloat32MatrixFromBuffer:()=>Ak,downloadMatrixFromPackedOutputTexture:()=>Rk,downloadPackedMatrixFromBuffer:()=>$k,getInternalFormatForFloat16MatrixTexture:()=>Wg,getInternalFormatForFloat16PackedMatrixTexture:()=>Hg,getInternalFormatForFloat32MatrixTexture:()=>jg,getInternalFormatForPackedMatrixTexture:()=>qg,getInternalFormatForUnsignedBytesMatrixTexture:()=>Ug,uploadDenseMatrixToTexture:()=>Sk,uploadPixelDataToTexture:()=>Tk});function yk(r){let e=Pt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return q_(r,t)}function bk(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return Y_(r,e)}function wk(r){let e=new Uint16Array([0,1,2,2,1,3]);return Z_(r,e)}function Tf(r,e,t,n,o,s){Q_(e,t);let a=J_(r),i=r.TEXTURE_2D;return Ne(r,()=>r.bindTexture(i,a)),Ne(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),Ne(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),Ne(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),Ne(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),Ne(r,()=>r.texImage2D(i,0,n,e,t,0,o,s,null)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,null)),a}function jg(r){return r.internalFormatFloat}function _k(r,e,t,n){let[o,s]=Ju(e,t);return Tf(r,o,s,jg(n),n.textureFormatFloat,r.FLOAT)}function Wg(r){return r.internalFormatHalfFloat}function kk(r,e,t,n){let[o,s]=Ju(e,t);return Tf(r,o,s,Wg(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function Ug(r){return r.downloadTextureFormat}function vk(r,e,t,n){let[o,s]=Ju(e,t);return Tf(r,o,s,Ug(n),r.RGBA,r.UNSIGNED_BYTE)}function qg(r){return r.internalFormatPackedFloat}function Ck(r,e,t,n){let[o,s]=ji(e,t);return Tf(r,o,s,qg(n),r.RGBA,r.FLOAT)}function Hg(r){return r.internalFormatPackedHalfFloat}function Ik(r,e,t,n){let[o,s]=ji(e,t);return Tf(r,o,s,Hg(n),r.RGBA,n.textureTypeHalfFloat)}function Nk(r,e,t){let n=0,o=3*4,s=3*4+2*4;return Ne(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),Pg(r,e,"clipSpacePos",t,3,s,n)&&Pg(r,e,"uv",t,2,s,o)}function Sk(r,e,t,n,o,s){Ne(r,()=>r.bindTexture(r.TEXTURE_2D,e));let a,i,l;o instanceof Uint8Array?(a=new Uint8Array(t*n*4),i=r.UNSIGNED_BYTE,l=r.RGBA):(a=new Float32Array(t*n*4),i=r.FLOAT,l=s.internalFormatPackedFloat),a.set(o),Ne(r,()=>r.texImage2D(r.TEXTURE_2D,0,l,t,n,0,r.RGBA,i,a)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function Tk(r,e,t){Ne(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?Ne(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):Ne(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function Ek(r,e,t,n){let o=r.createBuffer();Ne(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let i=4*4*e*t;return Ne(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),Ne(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),Ne(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function Ak(r,e,t){let n=r,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function Dk(r,e,t,n){let[o,s]=Ju(e,t),a=4,i=new Uint8Array(nA(e*t,a));return Ne(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function $k(r,e,t,n,o,s,a,i){let l=r,u=new Float32Array(oA(s,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function Rk(r,e,t){let n=new Float32Array(e*t*4);return Ne(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,n)),n}var Kg=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=W().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,W_(t,e)):this.gl=zn(t);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(W().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=gp(this.gl,s),kn(this.gl,a))this.textureHalfFloatExtension=gp(this.gl,a);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),kn(this.gl,o))this.colorBufferHalfFloatExtension=gp(this.gl,o);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",kn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(kn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=bk(this.gl),this.indexBuffer=wk(this.gl),this.framebuffer=ek(this.gl),this.textureConfig=Cf(this.gl,this.textureHalfFloatExtension)}get debug(){return W().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;Ne(e,()=>e.finish()),Ne(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ne(e,()=>e.deleteFramebuffer(this.framebuffer)),Ne(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Ne(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Ne(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),_k(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),kk(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),vk(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Tk(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),Sk(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Ik(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),Ck(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Mg(this.gl,this.framebuffer),this.outputTexture=null),Ne(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>Dk(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,s,a){return $k(this.gl,e,t,n,o,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Ak(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let o=Ek(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(W().getBool("WEBGL_FENCE_API_ENABLED")){let o=e,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=o.clientWaitSync(s,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},t=s}else W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>Rk(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl,n=H_(t,e),o=yk(t),s=K_(t);return Ne(t,()=>t.attachShader(s,o)),Ne(t,()=>t.attachShader(s,n)),X_(t,s),this.debug&&If(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=Nk(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Ne(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&If(this.gl,this.program),Ne(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?tk(this.gl,e,t):rk(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Ne(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),nk(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[o,s]=ji(t,n);this.setOutputMatrixTextureDriver(e,o,s)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&If(this.gl,this.program),xp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),Ne(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ne(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=gp(this.gl,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await y.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=c5(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&y.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Nf(this.gl,e,this.framebuffer),this.debug&&xp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Nf(this.gl,this.outputTexture,this.framebuffer),this.debug&&xp(this.gl)):Mg(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let o=this.gl;Nf(o,e,this.framebuffer),this.debug&&xp(o),this.outputTexture=e,Ne(o,()=>o.viewport(0,0,t,n)),Ne(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),Ne(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function c5(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{getBroadcastDims:pA}=N;function mA(r,e,t,n){let o=[];r.forEach(d=>{let h=y.sizeFromShape(d.shapeInfo.logicalShape);d.shapeInfo.isUniform?o.push(`uniform float ${d.name}${h>1?`[${h}]`:""};`):(o.push(`uniform sampler2D ${d.name};`),o.push(`uniform int offset${d.name};`))});let s=o.join(`
`),a=r.map(d=>p5(d,e,n)).join(`
`),i=e.texShape,l=Pt(),u=d5(l),c,p,m=x5(l);return e.isPacked?(c=m5(e.logicalShape,i),p=g5(l)):(c=f5(e.logicalShape,i),p=h5(l)),n&&(m+=y5),[m,u,p,s,c,a,t].join(`
`)}function bp(r){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return b5(r);case 1:return w5(r);case 2:return _5(r);case 3:return k5(r);case 4:return v5(r);case 5:return C5(r);case 6:return I5(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function fA(r){switch(r.shapeInfo.logicalShape.length){case 0:return N5(r);case 1:return S5(r);case 2:return T5(r);case 3:return E5(r);default:return A5(r)}}function p5(r,e,t=!1){let n="";t?n+=fA(r):n+=bp(r);let o=r.shapeInfo.logicalShape,s=e.logicalShape;return o.length<=s.length&&(t?n+=D5(r,e):n+=$5(r,e)),n}function m5(r,e){switch(r.length){case 0:return dA();case 1:return R5(r,e);case 2:return P5(r,e);case 3:return F5(r,e);default:return O5(r,e)}}function f5(r,e){switch(r.length){case 0:return dA();case 1:return M5(r,e);case 2:return G5(r,e);case 3:return L5(r,e);case 4:return z5(r,e);case 5:return B5(r,e);case 6:return V5(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function d5(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function h5(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function g5(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function x5(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${j5}
    ${W5}
    ${U5}
  `}var j5=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,W5=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,U5=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,y5=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function dA(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function R5(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return t[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${t[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return 2 * (resTexRC.x * ${t[1]} + resTexRC.y);
    }
  `}function M5(r,e){return e[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function F5(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],n=Math.ceil(r[2]/2),o=n*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec3(b, r, c);
    }
  `}function L5(r,e){let t=Os(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${t}
      return ivec3(r, c, d);
    }
  `}function O5(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],n=Math.ceil(r[r.length-1]/2),o=n*Math.ceil(r[r.length-2]/2),s=o,a="",i="b, r, c";for(let l=2;l<r.length-1;l++)s*=r[r.length-l-1],a=`
      int b${l} = index / ${s};
      index -= b${l} * ${s};
    `+a,i=`b${l}, `+i;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${r.length}(${i});
    }
  `}function z5(r,e){let t=Os(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${t}
      return ivec4(r, c, d, d2);
    }
  `}function B5(r,e){let t=Os(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function V5(r,e){let t=Os(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function P5(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(y.arraysEqual(r,e))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `;let n=Math.ceil(r[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec2(r, c);
    }
  `}function G5(r,e){return y.arraysEqual(r,e)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Qu(r){return`offset${r}`}function N5(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Pt();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function b5(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${t}() {return ${e};}`;let[n,o]=r.shapeInfo.texShape;if(n===1&&o===1)return`
      float ${t}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let[s,a]=r.shapeInfo.texShape,i=Qu(e);return`
    float ${t}() {
      vec2 uv = uvFromFlat(${s}, ${a}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function S5(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=r.shapeInfo.texShape,o=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)],s=Pt();return`
    vec4 ${t}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${s.texture2D}(${e}, uv);
    }
  `}function w5(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${t}(int index) {
        ${wp(r)}
      }
    `;let n=r.shapeInfo.texShape,o=n[0],s=n[1];if(s===1&&o===1)return`
      float ${t}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=Qu(e);return s===1?`
      float ${t}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);
        return sampleTexture(${e}, uv);
      }
    `:o===1?`
      float ${t}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
    float ${t}(int index) {
      vec2 uv = uvFromFlat(${o}, ${s}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function T5(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=o[0],a=o[1],i=Pt();if(o!=null&&y.arraysEqual(e,o))return`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${s}.0);

        return ${i.texture2D}(${t}, uv);
      }
    `;let l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=Math.ceil(e[1]/2);return`
    vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${l[0]}, ${l[1]}, row, col);
      return ${i.texture2D}(${t}, uv);
    }
  `}function _5(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape;if(o!=null&&y.arraysEqual(e,o)){let p=o[0],m=o[1];return`
    float ${n}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${t}, uv);
    }
  `}let{newShape:s,keptDims:a}=y.squeezeShape(e),i=s;if(i.length<e.length){let p=_p(r,i),m=["row","col"];return`
      ${bp(p)}
      float ${n}(int row, int col) {
        return ${n}(${kp(m,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${wp(r)}
      }
    `;let l=o[0],u=o[1],c=Qu(t);return u===1?`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${t}, uv);
    }
  `:l===1?`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${t}, uv);
    }
  `:`
  float ${n}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${c};
    vec2 uv = uvFromFlat(${l}, ${u}, index);
    return sampleTexture(${t}, uv);
  }
`}function E5(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(e[0]===1){let p=e.slice(1),m=[1,2],f=_p(r,p),d=["b","row","col"];return`
        ${fA(f)}
        vec4 ${n}(int b, int row, int col) {
          return ${n}(${kp(d,m)});
        }
      `}let a=s[0],i=s[1],l=Math.ceil(e[2]/2),u=l*Math.ceil(e[1]/2),c=Pt();return`
    vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${a}, ${i}, ${u}, ${l}, b, row, col);
      return ${c.texture2D}(${t}, uv);
    }
  `}function k5(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[1]*e[2],s=e[2],{newShape:a,keptDims:i}=y.squeezeShape(e),l=a;if(l.length<e.length){let d=_p(r,l),h=["row","col","depth"];return`
        ${bp(d)}
        float ${n}(int row, int col, int depth) {
          return ${n}(${kp(h,i)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${s}, 1)));
        ${wp(r)}
      }
    `;let u=r.shapeInfo.texShape,c=u[0],p=u[1],m=r.shapeInfo.flatOffset;if(p===o&&m==null)return`
        float ${n}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${s}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${c}.0);
          return sampleTexture(${t}, uv);
        }
      `;if(p===s&&m==null)return`
    float ${n}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${c}.0);
      return sampleTexture(${t}, uv);
    }
  `;let f=Qu(t);return`
      float ${n}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${s} + depth + ${f};
        vec2 uv = uvFromFlat(${c}, ${p}, index);
        return sampleTexture(${t}, uv);
      }
  `}function A5(r){let e=r.shapeInfo.logicalShape,t=e.length,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],i=a[0],l=a[1],u=Math.ceil(e[t-1]/2),c=u*Math.ceil(e[t-2]/2),p="int b, int row, int col",m=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let d=2;d<t-1;d++)p=`int b${d}, `+p,c*=e[t-d-1],m=`b${d} * ${c} + `+m;let f=Pt();return`
    vec4 ${o}(${p}) {
      int index = ${m};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${i});
      return ${f.texture2D}(${n}, uv);
    }
  `}function v5(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[3],s=e[2]*o,a=e[1]*s,{newShape:i,keptDims:l}=y.squeezeShape(e);if(i.length<e.length){let d=_p(r,i),h=["row","col","depth","depth2"];return`
      ${bp(d)}
      float ${n}(int row, int col, int depth, int depth2) {
        return ${n}(${kp(h,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${s}, ${o}, 1)));
        ${wp(r)}
      }
    `;let u=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,p=c[0],m=c[1];if(m===a&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(m===o&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;let f=Qu(t);return`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${s} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${p}, ${m}, index + ${f});
      return sampleTexture(${t}, uv);
    }
  `}function C5(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],s=e[3]*o,a=e[2]*s,i=e[1]*a,{newShape:l,keptDims:u}=y.squeezeShape(e);if(l.length<e.length){let h=_p(r,l),g=["row","col","depth","depth2","depth3"];return`
      ${bp(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${kp(g,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${o})) +
          depth3;
        ${wp(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1];if(f===i&&c==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===o&&c==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;let d=Qu(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${o} + depth3 + ${d};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function I5(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:s}=y.squeezeShape(e);if(o.length<e.length){let g=_p(r,o),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${bp(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${kp(x,s)});
      }
    `}let a=e[5],i=e[4]*a,l=e[3]*i,u=e[2]*l,c=e[1]*u;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${wp(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,f=m[0],d=m[1];if(d===c&&p==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===a&&p==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=Qu(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${f}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function wp(r){let e=r.name,t=y.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function D5(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=pA(r.shapeInfo.logicalShape,e.logicalShape),l=Le(a),u=a-s,c,p=["x","y","z","w","u","v"];s===0?c="":a<2&&i.length>=1?c="coords = 0;":c=i.map(b=>`coords.${p[b+u]} = 0;`).join(`
`);let m="";a<2&&s>0?m="coords":m=r.shapeInfo.logicalShape.map((b,w)=>`coords.${p[w+u]}`).join(", ");let f="return outputValue;",h=y.sizeFromShape(r.shapeInfo.logicalShape)===1,x=y.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!x)a===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(i.length){let b=s-2,w=s-1;i.indexOf(b)>-1&&i.indexOf(w)>-1?f="return vec4(outputValue.x);":i.indexOf(b)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(w)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${n}(${m});
      ${f}
    }
  `}function $5(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=e.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!r.shapeInfo.isUniform&&i===l&&r.shapeInfo.flatOffset==null&&y.arraysEqual(a,s))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let u=Le(l),c=pA(r.shapeInfo.logicalShape,e.logicalShape),p=l-i,m,f=["x","y","z","w","u","v"];i===0?m="":l<2&&c.length>=1?m="coords = 0;":m=c.map(h=>`coords.${f[h+p]} = 0;`).join(`
`);let d="";return l<2&&i>0?d="coords":d=r.shapeInfo.logicalShape.map((h,g)=>`coords.${f[g+p]}`).join(", "),`
    float ${o}() {
      ${u} coords = getOutputCoords();
      ${m}
      return get${n}(${d});
    }
  `}function Le(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function _p(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function kp(r,e){return e.map(t=>r[t]).join(", ")}function hA(r,e,t,n){let o=e.userCode,s=t.map((f,d)=>{let h={logicalShape:f.shape,texShape:f.isUniform?null:f.texData.texShape,isUniform:f.isUniform,isPacked:f.isUniform?!1:f.texData.isPacked,flatOffset:null};return f.texData!=null&&f.texData.slice!=null&&f.texData.slice.flatOffset>0&&(h.flatOffset=f.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:h}}),a=s.map(f=>f.shapeInfo),i={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},l=mA(s,i,o,e.packedInputs),u=r.createProgram(l),c=null,p=r.getUniformLocation(u,"NAN",!1);W().getNumber("WEBGL_VERSION")===1&&(c=r.getUniformLocation(u,"INFINITY",!1));let m={};for(let f=0;f<e.variableNames.length;f++){let d=e.variableNames[f],h=!1;m[d]=r.getUniformLocation(u,d,h),m[`offset${d}`]=r.getUniformLocation(u,`offset${d}`,h)}return{program:e,source:l,webGLProgram:u,uniformLocations:m,inShapeInfos:a,outShapeInfo:i,infLoc:c,nanLoc:p}}function gA(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,n)=>{let o=t.logicalShape,s=e[n],a=s.shape;if(!y.arraysEqual(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(t.isUniform&&s.isUniform)return;let i=t.texShape,l=s.isUniform?null:s.texData.texShape;if(!y.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function xA(r,e,t,n,o){gA(e.inShapeInfos,t),gA([e.outShapeInfo],[n]);let s=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s,a[0],a[1]):r.setOutputMatrixTexture(s,a[0],a[1]),r.setProgram(e.webGLProgram),W().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,Infinity),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN),t.forEach((i,l)=>{let u=e.program.variableNames[l],c=e.uniformLocations[u],p=e.uniformLocations[`offset${u}`];if(c!=null){if(i.isUniform){if(y.sizeFromShape(i.shape)<2)r.gl.uniform1f(c,i.uniformValues[0]);else{let m=i.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),r.gl.uniform1fv(c,m)}return}i.texData.slice!=null&&p!=null&&r.gl.uniform1i(p,i.texData.slice.flatOffset),r.setInputMatrixTexture(i.texData.texture,c,l)}}),o!=null&&o(r,e.webGLProgram),r.executeProgram()}function yA(r,e,t){let n="";e.concat(t).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0,l=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${l}_${i}`});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o,s}var{addImpl:bA,bincountImpl:Xg,bincountReduceImpl:wA,ceilImpl:_A,concatImpl:kA,expImpl:vA,expm1Impl:CA,floorImpl:IA,gatherV2Impl:NA,greaterImpl:SA,lessImpl:TA,linSpaceImpl:EA,logImpl:AA,maxImpl:DA,maximumImpl:$A,minimumImpl:RA,multiplyImpl:FA,negImpl:OA,prodImpl:PA,rangeImpl:MA,rsqrtImpl:LA,simpleAbsImpl:Yg,sliceImpl:zA,stridedSliceImpl:BA,subImpl:VA,tileImpl:GA,topKImpl:jA,transposeImpl:vp,uniqueImpl:WA}=Eg;function Fk(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function Wt(r,e){return e===1?[r]:Fk(r,e)}function UA(r,e){if(r===1)return"rc";let t="";for(let n=0;n<r;n++)t+=e[n],n<r-1&&(t+=",");return t}var Ok=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;let t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let n=Wt("rc",t),o=Le(t),s=q5(t,e,n),a=H5(t,e[e.length-1],e[e.length-2],n),i=K5(e,n);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${i}));
          }
        }
      `}}};function X5(r,e){let t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<r;a++)s=`${e[e.length-1-a]},`+s;t.push(s)}return t}function q5(r,e,t){if(r===1)return`rc > ${e[0]}`;let n="";for(let o=r-2;o<r;o++)n+=`${t[o]} >= ${e[o]}`,o<r-1&&(n+="||");return n}function H5(r,e,t,n){if(r===1)return"";let o=n.slice(-2);return`
    int r = ${o[0]};
    int c = ${o[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${e};
    bool rEdge = rp1 >= ${t};
  `}function K5(r,e){let t=r.length,n=X5(t,e);return t===1?`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${n[0]}),
          cEdge ? 0. : getA(${n[1]}),
          rEdge ? 0. : getA(${n[2]}),
          rEdge || cEdge ? 0. : getA(${n[3]})`}var Ef=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2==1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${Y5(t)}
      ${yp(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${e[1]};
        int cols = ${e[2]};

        ${n}

        setOutput(result);
      }
    `}};function Y5(r){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${Os(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var Pk=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let o=HA(t,n),s=KA(e,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=qA(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let l=this.freeTextures[s].shift();return this.usedTextures[s].push(l),l}let i;return o===wr.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===wr.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===wr.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===wr.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===wr.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;let s=HA(n,o),a=KA(t,s,o);a in this.freeTextures||(this.freeTextures[a]=[]);let i=qA(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),l=W().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[a],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function Z5(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}function qA(r,e,t,n,o){let s=J5(e,n),a;if(o){let[l,u]=ji(r[0],r[1]);a=l*u}else{let[l,u]=Ju(r[0],r[1]);a=l*u}let i=Z5(t,s);return a*i}function J5(r,e){switch(r){case wr.PACKED_2X2_FLOAT32:return qg(e);case wr.PACKED_2X2_FLOAT16:return Hg(e);case wr.UNPACKED_FLOAT32:return jg(e);case wr.UNPACKED_FLOAT16:return Wg(e);case wr.PACKED_4X1_UNSIGNED_BYTE:return Ug(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function Q5(r){return W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?wr.PACKED_2X2_FLOAT32:wr.UNPACKED_FLOAT32:r?wr.PACKED_2X2_FLOAT16:wr.UNPACKED_FLOAT16}function HA(r,e){if(r===Ar.UPLOAD)return wr.PACKED_2X2_FLOAT32;if(r===Ar.RENDER||r==null)return Q5(e);if(r===Ar.DOWNLOAD||r===Ar.PIXELS)return wr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function KA(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var rn=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},hr="if (isnan(x)) return x;",XA="return x;",Mk="return abs(x);";var YA="return (x >= 0.0) ? x : (exp(x) - 1.0);",ZA=hr+`
  return (x < 0.0) ? 0.0 : x;
`,JA=hr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Af="return x;";var QA="return x;",e2=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,t2=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,r2=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ps=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var Lk=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;let t=e.length,n=Wt("rc",t),o=Le(t),s=UA(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var e8=Tr.whereImpl,t8=1e-7,r8=1e-4,Zg={};function n8(r){return r in Zg||(Zg[r]={}),Zg[r]}var o8=128,s8=600;function i8(){return W().global.screen==null?1024:W().global.screen.height*W().global.screen.width*window.devicePixelRatio*s8/1024/1024}var ec=class extends qs{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!W().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=zn(W().getNumber("WEBGL_VERSION"));this.binaryCache=n8(W().getNumber("WEBGL_VERSION")),this.gpgpu=new Kg(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new Pk(this.gpgpu),this.numMBBeforeWarning=i8(),this.texData=new Ja(this,On())}nextDataId(){return ec.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((W().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||W().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:n,values:e,usage:Ar.UPLOAD,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,o,s){if(W().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:o,values:t,usage:Ar.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:o,complexTensorInfos:s,slice:a,shape:i,isPacked:l}=t;if(a!=null){let m;l?m=new Ps(i,Af):m=new rn(i,Af);let f=this.runWebGLProgram(m,[{dataId:e,shape:i,dtype:o}],o),d=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),d}if(n!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return n;let u=this.activeTimers!=null,c;u&&(c=y.now());let p;if(o==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);p=N.mergeRealAndImagArrays(m,f)}else p=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=y.now()-c),this.convertAndCacheOnCPU(e,p)}async read(e){if(this.pendingRead.has(e)){let d=this.pendingRead.get(e);return new Promise(h=>d.push(h))}let t=this.texData.get(e),{values:n,shape:o,slice:s,dtype:a,complexTensorInfos:i,isPacked:l}=t;if(s!=null){let d;l?d=new Ps(o,Af):d=new rn(o,Af);let h=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:a}],a),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(e);if(!W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&W().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(a!=="complex64"&&W().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let d=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(d.texture,...dl(o))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(a==="complex64"){let d=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),h=d[0],g=d[1];p=N.mergeRealAndImagArrays(h,g)}else if(u==null)p=this.getValuesFromTexture(e);else{let d=y.sizeFromShape(o);p=this.gpgpu.downloadFloat32MatrixFromBuffer(u,d)}c!=null&&this.disposeIntermediateTensorInfo(c);let m=this.convertAndCacheOnCPU(e,p),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(d=>d(m)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&On().removeDataId(e,this),this.pendingDeletes--),m}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>y.decodeString(o))}catch(o){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!U_(n))throw W().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:o}=this.texData.get(e),s=y.sizeFromShape(t);if(W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(e),f=this.texData.get(m.dataId),d=this.gpgpu.downloadMatrixFromPackedTexture(f.texture,...dl(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),d}let a=W().getBool("WEBGL_PACK")&&o===!0,i=a?Sf(t):t,l=a?new hk(i):new dk(i),u=this.runWebGLProgram(l,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),p}timerAvailable(){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=y.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=y.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let l=await Promise.all(s);i.kernelMs=y.sum(l),i.getExtraProfileInfo=()=>l.map((u,c)=>({name:a[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:y.now(),endMs:null}}endTimer(e){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=y.now(),e)}async getQueryTime(e){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:o,usage:s,isPacked:a,slice:i}=this.texData.get(e),l=i&&i.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(t,o,s,a)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return W().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=On().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=o8){let n=this.getCPUBackend();return!W().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&n==null&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),n!=null&&e.every(o=>this.texData.get(o.dataId).texture==null&&y.sizeFromShape(o.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return e8(e.shape,t)}packedUnaryOp(e,t,n){let o=new Ps(e.shape,t),s=this.compileAndRun(o,[e],n);return On().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let o=Yg(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Mk,e.dtype);let t=new rn(e.shape,Mk),n=this.compileAndRun(t,[e]);return On().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&y.isString(n[0])){let s=n.map(a=>y.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:o}=this.makeTensorInfo(e,t,n);return On().makeTensorFromDataId(o,e,t,this)}unpackTensor(e){let t=new Lk(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new Ok(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[La(e.shape),...za(e.shape)],o={dtype:e.dtype,shape:n,dataId:e.dataId},s=[La(t),...za(t)],a=new Ef(s,n),i=!0,l=this.runWebGLProgram(a,[o],e.dtype,null,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:o,dtype:s}=t,a=Sf(o),i;n?i=new fk(a):i=new mk(a);let l=!0,u=this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,l);return{dtype:s,shape:o,dataId:u.dataId}}runWebGLProgram(e,t,n,o,s=!1){let a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===fl.DENSE){let h=dl(e.outputShape);i.texShape=h.map(g=>g*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),y.sizeFromShape(a.shape)===0)return i.values=y.getTypedArrayFromDType(a.dtype,0),a;let l=[],u=t.map(h=>{if(h.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let g=this.texData.get(h.dataId);if(g.texture==null){if(!e.packedInputs&&y.sizeFromShape(h.shape)<=W().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:h.shape,texData:null,isUniform:!0,uniformValues:g.values};e.packedInputs&&(g.isPacked=!0,g.shape=h.shape)}else if(!!g.isPacked!=!!e.packedInputs)h=g.isPacked?this.unpackTensor(h):this.packTensor(h),l.push(h),g=this.texData.get(h.dataId);else if(g.isPacked&&!hl(g.shape,h.shape)){let x=h,b=h.shape;h.shape=g.shape,h=this.packedReshape(h,b),l.push(h),g=this.texData.get(h.dataId),x.shape=b}return this.uploadToGPU(h.dataId),{shape:h.shape,texData:g,isUniform:!1}});this.uploadToGPU(a.dataId);let c={shape:a.shape,texData:i,isUniform:!1},p=yA(e,u,c),m=this.getAndSaveBinary(p,()=>hA(this.gpgpu,e,u,c)),f=this.activeTimers!=null,d;if(f&&(d=this.startTimer()),xA(this.gpgpu,m,u,c,o),l.forEach(h=>this.disposeIntermediateTensorInfo(h)),f&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)})),!W().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&s===!1){let h=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),h}return a}compileAndRun(e,t,n,o,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,o,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(W().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=V(()=>{if(!W().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=W().getBool("DEBUG");W().set("DEBUG",!1);let t=this.abs(le(1e-8)).dataSync()[0];if(W().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?t8:r8}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:o,values:s,texture:a,usage:i,isPacked:l}=t;if(a!=null)return;let u=this.activeTimers!=null,c;u&&(c=y.now());let p=t.texShape;if(p==null&&(p=ok(n,l),t.texShape=p),s!=null){let m=Sf(n),f,d=p[1],h=p[0],g=s instanceof Uint8Array;l?([d,h]=ji(p[0],p[1]),f=new xk(m,[h,d],g)):f=new gk(m,[h,d],g);let x=this.makeTensorInfo([h,d],o);g?this.texData.get(x.dataId).usage=Ar.PIXELS:this.texData.get(x.dataId).usage=Ar.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),d,h,s);let b=!0,w=this.runWebGLProgram(f,[x],o,null,b),_=this.texData.get(w.dataId);t.texture=_.texture,t.texShape=_.texShape,t.isPacked=_.isPacked,t.usage=_.usage,this.disposeIntermediateTensorInfo(x),this.texData.delete(w.dataId),t.values=null,u&&(this.uploadWaitMs+=y.now()-c)}else{let m=this.acquireTexture(p,i,o,l);t.texture=m}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:o}=n;return this.releaseGPUData(e),t!=null&&(n.values=a8(t,o)),n.values}acquireTexture(e,t,n,o){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*y.bytesPerElement(t)}};ec.nextDataId=0;function a8(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<t.length;++n)t[n]=Math.round(r[n]);return t}else throw new Error(`Unknown dtype ${e}`)}var zk="3.1.0";function Bk(){W().set("WEBGL_FORCE_F16_TEXTURES",!0)}Wc.isBrowser()&&bu("webgl",()=>new ec,2);var l8={forceHalfFloat:Bk};var Jg=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Yo=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var gl=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var Ms=class{constructor(e,t,n,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length,a="";if(o)if(s===0||y.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Le(s)} coords = getOutputCoords();
        `,s===1)a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let l=Wt("coords",s);a+=`
            bool nextRowOutOfBounds =
              (${l[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${l[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function Ut(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var n2={kernelName:$n,backendName:"webgl",kernelFunc:Ut};function nn(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.texData.get(s.dataId),i=Ut({inputs:{x:n},backend:t}),l=Ut({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:l},s}var o2={kernelName:ql,backendName:"webgl",kernelFunc:nn};var Vk="return (a < 0.) ? b * a : a;",Gk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function u8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=t.makeTensorInfo([],"float32",y.createScalarValue(s,"float32")),i=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ms(Gk,o.shape,a.shape):new Yo(Vk,o.shape,a.shape),l=t.runWebGLProgram(i,[o,a],o.dtype);return t.disposeIntermediateTensorInfo(a),l}var s2={kernelName:uo,backendName:"webgl",kernelFunc:u8};var jk="return (a < 0.) ? b * a : a;",Wk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function c8(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ms(Wk,n.shape,o.shape):new Yo(jk,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)}var i2={kernelName:ko,backendName:"webgl",kernelFunc:c8};var Qg="if (isnan(x)) return x;",a2=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,l2=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function ve({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:s})=>{let{x:a}=o,i=s,l=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let p=i.texData.get(a.dataId),m=t(p.values,l);return i.makeTensorInfo(a.shape,l,m)}let u=W().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,c;return u?c=new Ps(a.shape,e):c=new rn(a.shape,r),i.runWebGLProgram(c,[a],l)}}function it({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:i})=>{let{a:l,b:u}=a,c=i;if(n&&l.dtype==="complex64"){let d=c.texData.get(l.dataId),h=c.texData.get(u.dataId),[g,x]=[[d.complexTensorInfos.real,h.complexTensorInfos.real],[d.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(w=>{let[_,k]=w,E={dataId:_.dataId,dtype:_.dtype,shape:l.shape},S={dataId:k.dataId,dtype:k.dtype,shape:u.shape},R=new Yo(r,l.shape,u.shape);return c.runWebGLProgram(R,[E,S],fr(_.dtype,k.dtype))}),b=nn({inputs:{real:g,imag:x},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(x),b}let p=s||fr(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&o!=null){let d=c.texData.get(l.dataId),h=c.texData.get(u.dataId),[g,x]=o(l.shape,u.shape,d.values,h.values,p),b=c.makeTensorInfo(x,p),w=c.texData.get(b.dataId);return w.values=g,b}let m=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,f;return m?f=new Ms(e,l.shape,u.shape,t):f=new Yo(r,l.shape,u.shape),c.runWebGLProgram(f,[l,u],p)}}function xl(r,e=!1){if(r==="linear")return e?QA:XA;if(r==="relu")return e?t2:ZA;if(r==="elu")return e?e2:YA;if(r==="relu6")return e?r2:JA;if(r==="prelu")return e?Wk:jk;if(r==="leakyrelu")return e?Gk:Vk;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Df=class{constructor(e,t,n,o=!1,s=!1,a=!1,i=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;let c=o?e[1]:e[2],p=Math.ceil(c/2),m=o?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",d=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",x="";i&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,x="result = activation(result);");let b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let w="rc.x",_="rc.x";e[0]<t[0]?w=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(_=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}

      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${p}; i++) {
          int batchA = ${w};
          int batchB = ${_};
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${d[0]} * ${h[0]});
          result += (${d[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${x}

        setOutput(result);
      }
    `}};var Uk={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},ex=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var u2="return a * b;";function qk(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=N.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let i=t.texData.get(n.dataId),l=t.texData.get(o.dataId),u=new ex(Uk.REAL,n.shape,o.shape),c=new ex(Uk.IMAG,n.shape,o.shape),p=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:o.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:o.shape}],m=t.runWebGLProgram(u,p,"float32"),f=t.runWebGLProgram(c,p,"float32"),d=nn({inputs:{real:m,imag:f},backend:t});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}if(t.shouldExecuteOnCPU([n,o])){let i=t.texData.get(n.dataId),l=t.texData.get(o.dataId),[u,c]=FA(n.shape,o.shape,i.values,l.values,s),p=t.makeTensorInfo(c,s),m=t.texData.get(p.dataId);return m.values=u,p}let a;return W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Ms(u2,n.shape,o.shape):a=new Yo(u2,n.shape,o.shape),t.runWebGLProgram(a,[n,o],s)}var c2={kernelName:yo,backendName:"webgl",kernelFunc:qk};function p2(r,e,t){let n=[La(r.shape),...za(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[La(e),...za(e)],a=new Ef(s,n),i=!0,l=t.runWebGLProgram(a,[o],r.dtype,null,i);return{dataId:l.dataId,shape:e,dtype:l.dtype}}function ce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=t,i=y.sizeFromShape(o.shape),l=y.inferFromImplicitShape(s,i),u=y.sizeFromShape(l);y.assert(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let c=a.texData.get(o.dataId);return c.isPacked&&!hl(o.shape,l)&&!(c.texture!==null&&hl(c.shape,l))?p2(o,l,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:l,dtype:o.dtype})}var m2={kernelName:gs,backendName:"webgl",kernelFunc:ce};var tx=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i=Math.floor(n/4)*4,l=n%4,u="sumValue += dot(values, ones);";if(t!=null){let p=1/t;u=`sumValue += dot(values * ${y.isInt(p)?p.toPrecision(2):p}, ones);`}let c="";s%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var Hk=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i="0.0",l="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",l="min"):t==="max"&&(i="-1.0 / 1e-20",l="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let c=Math.floor(n/4)*4,p=n%4,m=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
      }
    `,f="vec4";t==="all"?(i="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(i="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${u});
      }
    `}};function p8(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],n=N.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function vn(r,e,t,n){let o=p8(r.shape),s=r;for(let a=0;a<o.length;a++){let{inSize:i,windowSize:l,outSize:u}=o[a],c,p;t==="mean"?c=a===0?new tx({windowSize:l,inSize:i,batchSize:r.shape[0],outSize:u},i):new tx({windowSize:l,inSize:i,batchSize:r.shape[0],outSize:u}):c=new Hk({windowSize:l,inSize:i,batchSize:r.shape[0],outSize:u},t),p=s,s=n.runWebGLProgram(c,[s],e),p.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(p)}return s}var Kk=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let o=Le(this.rank),s=m8(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function m8(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<r.length;o++)n[r[o]]=t[o];return n.join()}var Xk=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=Le(this.rank),s=Fk("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=s[c];let i=`vec2(${a.slice(-2).join()})`,l=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function yl(r,e,t){let n=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xk(r.shape,e):new Kk(r.shape,e);return t.runWebGLProgram(n,[r],r.dtype)}function f2(r,e,t,n){let o=e,s=r.shape.length,a=y.parseAxisParam(o,r.shape),i=a,l=N.getAxesPermutation(i,s),u=l!=null,c=r;u&&(c=yl(r,l,n),i=N.getInnerMostAxes(i.length,s)),N.assertAxesAreInnerMostDims("sum",i,s);let[p,m]=N.computeOutAndReduceShapes(c.shape,i),f=p;t&&(f=N.expandShapeToKeepDim(p,a));let d=y.sizeFromShape(m),g=y.sizeFromShape(r.shape)/d,x=ce({inputs:{x:c},attrs:{shape:[g,d]},backend:n}),b=gu(r.dtype),w=vn(x,b,"sum",n),_=ce({inputs:{x:w},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),u&&n.disposeIntermediateTensorInfo(c),_}function $f(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return f2(o,s,a,t)}var d2={kernelName:$o,backendName:"webgl",kernelFunc:$f};function zt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=o.shape[s[c]];let u;if(a.shouldExecuteOnCPU([o])){let p=a.texData.get(o.dataId).values,m=vp(p,o.shape,o.dtype,s,l);u=a.makeTensorInfo(l,o.dtype);let f=a.texData.get(u.dataId);f.values=m}else u=yl(o,s,a);return u}var h2={kernelName:Mo,backendName:"webgl",kernelFunc:zt};var Yk=1e3;function tc({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:l=null}){let u=r.shape.length,c=e.shape.length,p=t?r.shape[u-2]:r.shape[u-1],m=n?e.shape[c-1]:e.shape[c-2],f=t?r.shape[u-1]:r.shape[u-2],d=n?e.shape[c-2]:e.shape[c-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),x=y.sizeFromShape(h),b=y.sizeFromShape(g),w=x===b||x===1||b===1;y.assert(u>=2&&c>=2&&w,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${h}) and (${g}).`);let k=(x>b?r.shape.slice(0,-2):e.shape.slice(0,-2)).concat([f,d]);y.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let E=t?[x,p,f]:[x,f,p],S=n?[b,d,m]:[b,m,d],R=ce({inputs:{x:r},backend:o,attrs:{shape:E}}),F=ce({inputs:{x:e},backend:o,attrs:{shape:S}}),L=[R,F],G=Math.max(x,b),j=t?R.shape[1]:R.shape[2],U=s!=null,Y=a!=null,K=l==="leakyrelu",Z=l!=null?xl(l,!0):null,te=U||Y||K||Z!=null,X;if((f===1||d===1)&&j>Yk&&te===!1){let ie=R,se=F;t&&(ie=zt({inputs:{x:R},backend:o,attrs:{perm:[0,2,1]}}),L.push(ie)),n&&(se=zt({inputs:{x:F},backend:o,attrs:{perm:[0,2,1]}}),L.push(se));let pe=d!==1,ae=d===1,xe=ie;pe&&(xe=ce({inputs:{x:ie},backend:o,attrs:{shape:[G,j,1]}}),L.push(xe));let ge=d===1?2:1,we=se;ae&&(we=ce({inputs:{x:se},backend:o,attrs:{shape:[G,1,j]}}),L.push(we));let ke=qk({inputs:{a:xe,b:we},backend:o});X=$f({inputs:{x:ke},backend:o,attrs:{axis:ge,keepDims:!0}}),L.push(ke)}else{let ie=fr(r.dtype,e.dtype),se=new Df(E,S,[G,f,d],t,n,U,Z,Y,K),pe=[R,F];if(s!=null&&pe.push(s),Y&&pe.push(a),K){let ae=o.makeTensorInfo([],"float32",y.createScalarValue(i,"float32"));pe.push(ae),L.push(ae)}X=o.runWebGLProgram(se,pe,ie)}let re=ce({inputs:{x:X},backend:o,attrs:{shape:k}});L.push(X);for(let ie of L)o.disposeIntermediateTensorInfo(ie);return re}function f8(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=n;return tc({a:o,b:s,transposeA:l,transposeB:u,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:p,activation:c})}var g2={kernelName:ks,backendName:"webgl",kernelFunc:f8};var x2="return abs(x);";function d8(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=t.texData.get(n.dataId),a=Yg(s.values);return t.makeTensorInfo(n.shape,n.dtype,a)}let o;return W().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Ps(n.shape,x2):o=new rn(n.shape,x2),t.runWebGLProgram(o,[n],n.dtype)}var y2={kernelName:us,backendName:"webgl",kernelFunc:d8};var h8=hr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,g8=ve({opSnippet:h8}),b2={kernelName:Xs,backendName:"webgl",kernelFunc:g8};var x8=hr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,y8=ve({opSnippet:x8}),w2={kernelName:Ys,backendName:"webgl",kernelFunc:y8};var _2="return a + b;",b8=it({opSnippet:_2,packedOpSnippet:_2,supportsComplex:!0,cpuKernelImpl:bA}),k2={kernelName:xn,backendName:"webgl",kernelFunc:b8};var Zk=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var Jk=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function rx(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return Ut({inputs:{x:n[0]},backend:t});if(n.length>W().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(n.length/2),u=rx({inputs:n.slice(0,l),backend:t}),c=rx({inputs:n.slice(l),backend:t});return rx({inputs:[u,c],backend:t})}let o=n.map(l=>l.dtype).reduce((l,u)=>fr(l,u)),s=n.map(l=>l.shape),i=W().getBool("WEBGL_PACK")?new Jk(n[0].shape,s):new Zk(n[0].shape,s);return t.runWebGLProgram(i,n,o)}var v2={kernelName:Hn,backendName:"webgl",kernelFunc:rx};function w8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,l=y.parseAxisParam(s,o.shape),u=l,c=N.getAxesPermutation(u,i),p=o;c!=null&&(p=zt({inputs:{x:o},backend:t,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,i)),N.assertAxesAreInnerMostDims("all",u,i);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(f),h=ce({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=vn(h,h.dtype,"all",t),x;if(a){let b=N.expandShapeToKeepDim(m,l);x=ce({inputs:{x:g},backend:t,attrs:{shape:b}})}else x=ce({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),x}var C2={kernelName:Vl,backendName:"webgl",kernelFunc:w8};function _8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,l=y.parseAxisParam(s,o.shape),u=l,c=N.getAxesPermutation(u,i),p=o;c!=null&&(p=zt({inputs:{x:o},backend:t,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,i)),N.assertAxesAreInnerMostDims("any",u,i);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(f),h=ce({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=vn(h,h.dtype,"any",t),x;if(a){let b=N.expandShapeToKeepDim(m,l);x=ce({inputs:{x:g},backend:t,attrs:{shape:b}})}else x=ce({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),x}var I2={kernelName:Gl,backendName:"webgl",kernelFunc:_8};var Qk=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=t==="max"?">":"<",l=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var ev=class{constructor(e,t,n,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,y.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");let i=this.outputShape,l=i.length,u=Le(l),c=Wt("coords",l),p,m;if(a===1){m=l+1;let R=Le(m);p=`
        ${R} sourceLocR = ${R}(${c.join()}, 0);
        ++${c[l-1]};
        ${R} sourceLocG = ${R}(${c.join()}, 0);
        ++${c[l-2]};
        ${R} sourceLocA = ${R}(${c.join()}, 0);
        --${c[l-1]};
        ${R} sourceLocB = ${R}(${c.join()}, 0);
        --${c[l-2]};`}else m=l,p=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;let f=["x","y","z","w","u","v"].slice(0,m),d="."+f[m-1],h=f.map(R=>"int "+R),g=Wt("sourceLocR",m-1).concat("inIdx.r"),x=Wt("sourceLocG",m-1).concat("inIdx.g"),b=Wt("sourceLocB",m-1).concat("inIdx.b"),w=Wt("sourceLocA",m-1).concat("inIdx.a"),_=n==="max"?"greaterThan":"lessThan",k=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${w.join()})));`,E=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,S=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${S}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${i[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${i[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},
          sourceLocB${d}, sourceLocA${d}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${E};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${E};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${_}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function N2(r,e,t,n=null){let o=e.shape[0],s=e.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let a=N.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:o,outSize:Math.ceil(s/a)},l=new Qk(i,t,n==null),u=[e];n!=null&&u.push(n);let c=r.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=N2(r,e,t,c);return r.disposeIntermediateTensorInfo(c),p}function S2(r,e,t,n=null){let o=n!=null?n.shape:e.shape,s=o[o.length-1],a=N.computeOptimalWindowSize(s),i=new ev(o,a,t,n==null),l=n==null?[e]:[e,n],u=r.runWebGLProgram(i,l,"int32");if(u.shape.length===e.shape.length){let c=S2(r,e,t,u);return r.disposeIntermediateTensorInfo(u),c}return u}function nx(r,e,t,n){let o=[t];if(N.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!W().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],[a,i]=N.computeOutAndReduceShapes(e.shape,o),l=y.sizeFromShape(i),u=ce({inputs:{x:e},backend:r,attrs:{shape:[-1,l]}});s.push(u);let c=N2(r,u,n);s.push(c);let p=ce({inputs:{x:c},backend:r,attrs:{shape:a}});return s.forEach(m=>r.disposeIntermediateTensorInfo(m)),p}return S2(r,e,n)}function k8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=N.getAxesPermutation(a,o.shape.length),l=o,u=[];i!=null&&(l=zt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(l),a=N.getInnerMostAxes(a.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[a[0]],l.shape.length);let c=nx(t,l,a[0],"max");return u.forEach(p=>t.disposeIntermediateTensorInfo(p)),c}var T2={kernelName:Kn,backendName:"webgl",kernelFunc:k8};function v8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=N.getAxesPermutation(a,o.shape.length),l=o,u=[];i!=null&&(l=zt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(l),a=N.getInnerMostAxes(a.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[a[0]],l.shape.length);let c=nx(t,l,a[0],"min");return u.forEach(p=>t.disposeIntermediateTensorInfo(p)),c}var E2={kernelName:na,backendName:"webgl",kernelFunc:v8};var C8=hr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,I8=ve({opSnippet:C8}),A2={kernelName:Zs,backendName:"webgl",kernelFunc:I8};var N8=hr+"return log(x + sqrt(x * x + 1.0));",S8=ve({opSnippet:N8}),D2={kernelName:Js,backendName:"webgl",kernelFunc:S8};var T8=hr+`
  return atan(x);
`,E8=ve({opSnippet:T8}),$2={kernelName:Qs,backendName:"webgl",kernelFunc:E8};var A8=a2+`
  return atan(a, b);
`,D8=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+l2+`
  return result;
`,$8=it({opSnippet:A8,packedOpSnippet:D8}),R2={kernelName:ti,backendName:"webgl",kernelFunc:$8};var R8=hr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,F8=ve({opSnippet:R8}),F2={kernelName:ei,backendName:"webgl",kernelFunc:F8};var Wi=class{constructor(e,t,n,o=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,x=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,b="0.0";if(h||(b="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${l});
        const ivec2 pads = ivec2(${f}, ${d});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${R} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:x:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let w="max",_=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(_="avgValue / count");let k=Math.floor(a/4)*4,E=a%4,S=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${f}, ${d});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${S}
          }

          int xC = xCCorner + ${k};
          if (${E===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${E===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${E===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${S}
          }
        }
        setOutput(${_});
      }
    `}},rc=class{constructor(e,t,n,o=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,p=e.dilationHeight,m=e.dilationWidth,f=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,x=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;let w=t==="avg",_="0.0";if(w||(_="-1.0 / 1e-20"),n){let L=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${l}, ${u});
        const ivec3 pads = ivec3(${g}, ${x}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${d};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${L} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let k="max",E=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(E="avgValue / count");let S=Math.floor(a/4)*4,R=a%4,F=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${l}, ${u});
      const ivec3 pads = ivec3(${g}, ${x}, ${b});
      const float initializationValue = ${_};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${_});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${S}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${F}
            }

            int xC = xCCorner + ${S};
            if (${R===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${F}
            } else if (${R===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${F}
            } else if (${R===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${F}
            }
          }
          setOutput(${E});
        }
      }
    `}};function O8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Fs(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=n,u=1;y.assert(N.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=N.computePool2DInfo(o.shape,s,a,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))return Ut({inputs:{x:o},backend:t});let p=new Wi(c,"avg",!1);return t.runWebGLProgram(p,[o],"float32")}var O2={kernelName:Xn,backendName:"webgl",kernelFunc:O8};function P8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:l,dataFormat:u}=n,c=[1,1,1],p=N.computePool3DInfo(o.shape,s,a,c,i,l,u),m=new rc(p,"avg",!1);return t.runWebGLProgram(m,[o],"float32")}var P2={kernelName:oa,backendName:"webgl",kernelFunc:P8};var tv=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,p=u-1-e.padInfo.left,m=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},rv=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,p=e.effectiveFilterDepth,m=e.effectiveFilterHeight,f=e.effectiveFilterWidth,d=p-1-e.padInfo.front,h=m-1-e.padInfo.top,g=f-1-e.padInfo.left,x=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function M8(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=n,p=[1,1,1],m=N.computePool3DInfo(a.shape,i,l,p,u,c),f=new rv(m);return t.runWebGLProgram(f,[o],a.dtype)}var M2={kernelName:Wl,backendName:"webgl",kernelFunc:M8};function L8(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;Fs([o,s],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=n,c=N.computePool2DInfo(a.shape,i,l,1,u),p=new tv(c);return t.runWebGLProgram(p,[o],a.dtype)}var L2={kernelName:jl,backendName:"webgl",kernelFunc:L8};function z8(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return tc({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var z2={kernelName:Yn,backendName:"webgl",kernelFunc:z8};var nv=class{constructor(e,t,n,o,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let i="0.0";o!=null&&(N.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="1.0";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var ov=class{constructor(e,t,n,o,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";o!=null&&(N.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="vec4(1.0)";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var B8=({inputs:r,backend:e,attrs:t})=>{let{x:n,mean:o,variance:s,offset:a,scale:i}=r;y.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);let u=[n,o,s],c=null;a!=null&&(c=a.shape,u.push(a));let p=null;i!=null&&(p=i.shape,u.push(i));let m=W().getBool("WEBGL_PACK_NORMALIZATION")?new ov(n.shape,o.shape,s.shape,c,p,l):new nv(n.shape,o.shape,s.shape,c,p,l);return e.runWebGLProgram(m,u,u[0].dtype)},B2={kernelName:ao,backendName:"webgl",kernelFunc:B8};var sv=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=Le(this.rank),n=`uniform int start[${this.rank}];`,o=V8(this.rank),s,a=e.map((i,l)=>`sourceLoc.${iv[l]} = start[${l}] + coords.${iv[l]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      ${n}
      void main() {
        ${s}
        setOutput(getSource(${o}));
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}},iv=["x","y","z","w","u","v"];function V8(r){if(r===1)return"sourceLoc";if(r<=6)return iv.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var av=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;let t=Le(this.rank),n=Wt("coords",this.rank),o=Wt("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,p)=>`start[${p}]`).join()});`:e.map((c,p)=>`${o[p]} = ${n[p]} + start[${p}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${l}
        setOutput(result);
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}};function G8(r,e,t,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(t,r.dtype),a=n.texData.get(s.dataId);Object.assign(a,o),a.refCount=1,a.shape=t,a.dtype=r.dtype;let i=or.computeFlatOffset(e,y.computeStrides(r.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||r.dataId};let l=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,l+1),s}function Ba(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,l]=or.parseSliceParams(o,s,a);if(or.assertParamsValid(o,i,l),y.sizeFromShape(l)===0)return t.makeTensorInfo(l,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){let p=t.texData.get(o.dataId),m=zA(p.values,i,l,o.shape,o.dtype);return t.makeTensorInfo(l,o.dtype,m)}let{isPacked:u}=t.texData.get(o.dataId),c=or.isSliceContinous(o.shape,i,l);if(u||!c){let p=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new av(l):new sv(l),m=p.getCustomSetupFunc(i);return t.runWebGLProgram(p,[o],o.dtype,m)}return t.uploadToGPU(o.dataId),G8(o,i,l,t)}var V2={kernelName:ys,backendName:"webgl",kernelFunc:Ba};var j8=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((b,w)=>b*w),l=N.getReshaped(o.shape,s,i),u=N.getPermuted(l.length,s.length),c=N.getReshapedPermuted(o.shape,s,i),p=N.getSliceBeginCoords(a,s.length),m=N.getSliceSize(c,a,s.length),f=[],d=ce({inputs:{x:o},backend:t,attrs:{shape:l}}),h=zt({inputs:{x:d},backend:t,attrs:{perm:u}}),g=ce({inputs:{x:h},backend:t,attrs:{shape:c}}),x=Ba({inputs:{x:g},backend:t,attrs:{begin:p,size:m}});return f.push(d),f.push(h),f.push(g),f.forEach(b=>t.disposeIntermediateTensorInfo(b)),x},G2={kernelName:sa,backendName:"webgl",kernelFunc:j8};function W8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.readSync(o.dataId),l=t.readSync(s.dataId),u=Xg(i,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}var j2={kernelName:Ul,backendName:"webgl",kernelFunc:W8};var U8="return float(a != b);",lv=it({opSnippet:U8,dtype:"bool"}),W2={kernelName:wi,backendName:"webgl",kernelFunc:lv};function Va(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return Ut({inputs:{x:o.complexTensorInfos.real},backend:t})}var U2={kernelName:cu,backendName:"webgl",kernelFunc:Va};var q8="return float(int(x));";function q2(r,e){let t=new rn(r.shape,q8),n=e.runWebGLProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function uv(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Ut({inputs:{x:o},backend:t});let a=xt(o.shape),i=uv({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),l=nn({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),l}if(o.dtype==="complex64"){let a=Va({inputs:{input:o},backend:t}),i=uv({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=Ut({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return q2(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),l=lv({inputs:{a:o,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),l}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var H2={kernelName:An,backendName:"webgl",kernelFunc:uv};var K2="return ceil(x);",H8=ve({opSnippet:K2,packedOpSnippet:K2,cpuKernelImpl:_A}),X2={kernelName:Zn,backendName:"webgl",kernelFunc:H8};var cv=class{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(e,t){return(n,o)=>{this.minLoc==null&&(this.minLoc=n.getUniformLocationNoThrow(o,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(o,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}};var pv=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(e,t){return(n,o)=>{this.minLoc==null&&(this.minLoc=n.getUniformLocationNoThrow(o,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(o,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}};function K8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i;W().getBool("WEBGL_PACK_CLIP")?i=new pv(o.shape):i=new cv(o.shape);let l=i.getCustomSetupFunc(s,a);return t.runWebGLProgram(i,[o],o.dtype,l)}var Y2={kernelName:Dn,backendName:"webgl",kernelFunc:K8};var mv=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function Z2(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function X8(r){let{inputs:e,backend:t}=r,{x:n}=e,o=t.texData.get(n.dataId),s=new mv(n.shape),a=[Z2(n,o.complexTensorInfos.real),Z2(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(s,a,a[0].dtype)}var J2={kernelName:ia,backendName:"webgl",kernelFunc:X8};var fv=class{constructor(e){this.outputShape=[],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let o=t.length,s=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var dv=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(e,t);let n=this.outputShape,o=n.length,s=Le(o),a=Wt("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((h,g)=>`T${g}`);let l=new Array(e.length-1);l[0]=e[0][t];for(let h=1;h<l.length;h++)l[h]=l[h-1]+e[h][t];let u=i[t],c=i.slice(-2),p=i.join(),m=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${c.join()}));
        }`;for(let h=1;h<l.length;h++){let g=l[h-1];m+=`
        if (${u} < ${l[h]}  && ${u} >= ${l[h-1]}) {
          return getChannel(
            getT${h}(${ox(i,u,g)}),
            vec2(${ox(c,u,g)}));
        }`}let f=l.length,d=l[l.length-1];m+=`
        return getChannel(
          getT${f}(${ox(i,u,d)}),
          vec2(${ox(c,u,d)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${m}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function ox(r,e,t){let n=r.indexOf(e);return r.map((s,a)=>a===n?`${s} - ${t}`:s).join()}function nc(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return Ut({inputs:{x:o.complexTensorInfos.imag},backend:t})}var Q2={kernelName:nu,backendName:"webgl",kernelFunc:nc};function oc(r,e,t){let n=r[0].dtype;if(n==="complex64"){let u=r.map(d=>Va({inputs:{input:d},backend:t})),c=r.map(d=>nc({inputs:{input:d},backend:t})),p=oc(u,e,t),m=oc(c,e,t),f=nn({inputs:{real:p,imag:m},backend:t});return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),c.forEach(d=>t.disposeIntermediateTensorInfo(d)),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),f}if(n==="string"){let{tensors2D:u,outShape:c}=eD(r,e,t),p=u.map(g=>({vals:t.readSync(g.dataId),shape:g.shape})),m=u[0].shape[0]===1,f=kA(p,c,n,m),d=N.computeOutShape(r.map(g=>g.shape),e),h=t.makeTensorInfo(d,n,f);return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}if(r.length>W().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(r.length/2),c=oc(r.slice(0,u),e,t),p=oc(r.slice(u),e,t),m=oc([c,p],e,t);return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),m}if(W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let u=new dv(r.map(c=>c.shape),e);return t.runWebGLProgram(u,r,n)}let{tensors2D:o,outShape:s}=eD(r,e,t),a=new fv(o.map(u=>u.shape)),i=t.runWebGLProgram(a,o,n);o.forEach(u=>t.disposeIntermediateTensorInfo(u));let l=ce({inputs:{x:i},attrs:{shape:s},backend:t});return t.disposeIntermediateTensorInfo(i),l}function eD(r,e,t){let n=N.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>ce({inputs:{x:s},attrs:{shape:[-1,y.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:n}}function hv(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,e[0].shape)[0],a=N.computeOutShape(e.map(u=>u.shape),s);if(y.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(u=>y.sizeFromShape(u.shape)>0);if(i.length===1)return Ut({inputs:{x:i[0]},backend:t});let l=i.map(u=>u.shape);return N.assertParamsConsistent(l,s),oc(i,s,t)}var tD={kernelName:cs,backendName:"webgl",kernelFunc:hv};var Rf=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,p=e.dilationWidth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",x=g?1:2,b=g?2:3,w=g?3:1,_="",k="";n&&(o?_=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?_=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:_=`
          float activation(float x) {
            ${n}
          }
        `,k="result = activation(result);");let E=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${_}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${d}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${d}) *
                    getW(wR, wC, ${d}, d2);
              } else {
                dotProd +=
                    getX(batch, ${d}, xR, xC) *
                    getW(wR, wC, ${d}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2),
                getW(wR, wC, ${d} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1),
                  getX(batch, xR, xC, ${d} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC),
                  getX(batch, ${d} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${E}
        ${k}
        setOutput(result);
      }
    `}},gv=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,p=e.filterDepth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${d}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${d}) *
                  getW(wF, wR, wC, ${d}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1),
                  getX(batch, xF, xR, xC, ${d} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2),
                  getW(wF, wR, wC, ${d} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var xv=class{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let{filterWidth:o,inChannels:s,strideWidth:a,strideHeight:i,padInfo:l,outWidth:u,dilationWidth:c,dilationHeight:p,dataFormat:m}=n,{left:f,top:d}=l,h=s*o,g=Pt(),x=m==="channelsLast",b=x?0:1,w=x?1:2,_="";for(let k=0;k<=1;k++)for(let E=0;E<=1;E++)_+=`
          blockIndex = rc.y + ${E};
          pos = rc.x + ${k};

          if(blockIndex < ${e[1]} && pos < ${e[0]}) {
            offsetY = int(blockIndex / (${u})) * ${i} - ${d};
            d0 = offsetY + ${p} * (pos / ${h});

            if(d0 < ${t[b]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${f}.);
              d1 = offsetX + ${c} * (int(mod(float(pos), ${h}.) / ${s}.));

              if(d1 < ${t[w]} && d1 >= 0) {

                ch = int(mod(float(pos), ${s}.));

                if (${x}) {
                  innerDims = vec2(d1, ch);
                  result[${k*2+E}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${k*2+E}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${_}

        ${g.output} = result;
      }
    `}};function sx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let l=r.shape,u=n.texData.get(r.dataId),c=t.inChannels,p=l[0]*l[1]*l[2],m=t.outChannels,f=t.dataFormat==="channelsLast",d=!1,h=!1,g,x=[],b=(p===1||m===1)&&c>Yk,w=l[2]%2!=0&&!!u.isPacked;if(b||!W().getBool("WEBGL_LAZILY_UNPACK")||!W().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!w){let _=f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],k=ce({inputs:{x:r},backend:n,attrs:{shape:[1,_,t.inChannels]}}),E=ce({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),S=tc({a:k,b:E,transposeA:d,transposeB:h,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=ce({inputs:{x:S},backend:n,attrs:{shape:t.outShape}}),x.push(k),x.push(E),x.push(S)}else{let _=f?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),k={dataId:r.dataId,shape:[1,_,t.inChannels],dtype:r.dtype},E=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,y.assert(hl(u.shape,k.shape),()=>`packed reshape ${u.shape} to ${k.shape} isn't free`);let S=ce({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});x.push(S);let R=tc({a:k,b:S,backend:n,transposeA:d,transposeB:h,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),F=n.texData.get(R.dataId);y.assert(F.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=E,F.shape=t.outShape,g=Ut({inputs:{x:R},backend:n}),g.shape=t.outShape,x.push(R)}for(let _ of x)n.disposeIntermediateTensorInfo(_);return g}function ix({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:m,dataFormat:f}=t,d=f==="channelsLast",h=l*u*c,g=m*p,x=[h,g],b=!0,w=!1,_=[],k=ce({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),E=ce({inputs:{x:e},backend:n,attrs:{shape:[1,h,y.sizeFromShape(e.shape)/h]}});_.push(k),_.push(E);let S=new xv(x,k.shape,t),R=n.runWebGLProgram(S,[k],"float32"),F=ce({inputs:{x:R},backend:n,attrs:{shape:[1,x[0],x[1]]}});_.push(R),_.push(F);let L=o!=null,G=s!=null,j=i==="leakyrelu",U=i?xl(i,!0):null,Y=new Df(F.shape,E.shape,[1,g,t.outChannels],b,w,L,U,G,j),K=[F,E];if(o&&K.push(o),G&&K.push(s),j){let re=n.makeTensorInfo([],"float32",y.createScalarValue(a,"float32"));K.push(re),_.push(re)}let Z=n.runWebGLProgram(Y,K,"float32"),te=d?[1,m,p,t.outChannels]:[1,t.outChannels,m,p],X=ce({inputs:{x:Z},backend:n,attrs:{shape:te}});_.push(Z);for(let re of _)n.disposeIntermediateTensorInfo(re);return X}function Y8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=n,p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(o.shape,s.shape,a,u,i,c,!1,p),f;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))f=sx({x:o,filter:s,convInfo:m,backend:t});else if(W().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)f=ix({x:o,filter:s,convInfo:m,backend:t});else{let h=new Rf(m);f=t.runWebGLProgram(h,[o,s],"float32")}let d=ce({inputs:{x:f},backend:t,attrs:{shape:m.outShape}});return t.disposeIntermediateTensorInfo(f),d}var rD={kernelName:Jn,backendName:"webgl",kernelFunc:Y8};var yv=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},bv=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,l=n-1-e.padInfo.left,u=a?1:2,c=a?2:3,p=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},wv=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},_v=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Z8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=n,p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(o.shape,c,a,1,i,u,!1,p),f=new yv(m);return t.runWebGLProgram(f,[o,s],"float32")}var nD={kernelName:Hl,backendName:"webgl",kernelFunc:Z8};function J8(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=n,p=N.convertConv2DDataFormat(u),m=N.computeConv2DInfo(a,s.shape,i,1,l,c,!1,p),f=new bv(m);return t.runWebGLProgram(f,[o,s],"float32")}var oD={kernelName:Qn,backendName:"webgl",kernelFunc:J8};function Q8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l}=n,u=N.computeConv3DInfo(o.shape,s.shape,a,l,i),c=new gv(u);return t.runWebGLProgram(c,[o,s],"float32")}var sD={kernelName:aa,backendName:"webgl",kernelFunc:Q8};function eX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:l}=n,u=N.computeConv3DInfo(o.shape,l,a,1,i),c=new wv(u);return t.runWebGLProgram(c,[o,s],"float32")}var iD={kernelName:Kl,backendName:"webgl",kernelFunc:eX};function tX(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:l}=n,u=N.computeConv3DInfo(l,s.shape,i,1,a),c=new _v(u);return t.runWebGLProgram(c,[o,s],"float32")}var aD={kernelName:Xl,backendName:"webgl",kernelFunc:tX};var rX=Qg+`
  return cos(x);
`,nX=ve({opSnippet:rX}),lD={kernelName:eo,backendName:"webgl",kernelFunc:nX};var oX=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,sX=ve({opSnippet:oX}),uD={kernelName:ri,backendName:"webgl",kernelFunc:sX};var kv=class{constructor(e,t,n,o,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,i,l,u]=e,[c]=t,[p,m]=n;this.outputShape=[c,p,m,u];let f=o==="bilinear"?1:0,[d,h]=[`${i-1}.0`,`${l-1}.0`],[g,x,b]=p>1?[`${(i-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[w,_,k]=m>1?[`${(l-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${_};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${d} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var iX=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:l,extrapolationValue:u}=n,c=new kv(o.shape,s.shape,i,l,u);return t.runWebGLProgram(c,[o,s,a],"float32")},cD={kernelName:ni,backendName:"webgl",kernelFunc:iX};var ax=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;let o=e.length,s=t?"0.0":`getX(${pD(o,"coords")})`,a=e[e.length-1],i="",l="";t?(i=n?`end != ${a-1}`:"end != 0",l=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",l=n?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${Le(o)} coords = getOutputCoords();
        int end = ${mD(o,"coords")};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${l};
          ${mD(o,"coords")} = idx;
          val += getX(${pD(o,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.index==null&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}};function pD(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function mD(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function aX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,l=o.shape.length,u=N.getAxesPermutation([s],l),c=o;u!=null&&(c=zt({inputs:{x:o},backend:t,attrs:{perm:u}}));let p=N.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${o.shape.length-1} but got axis=${s}`);let m=c.shape[p],f=Ut({inputs:{x:c},backend:t});for(let d=0;d<=Math.ceil(Math.log2(m))-1;d++){let h=new ax(c.shape,!1,i),g=h.getCustomSetupFunc(d),x=f;f=t.runWebGLProgram(h,[f],f.dtype,g),t.disposeIntermediateTensorInfo(x)}if(a){let d=new ax(c.shape,a,i),h=f;f=t.runWebGLProgram(d,[f],f.dtype),t.disposeIntermediateTensorInfo(h)}if(u!=null){let d=N.getUndoAxesPermutation(u),h=zt({inputs:{x:f},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(c),h}return f}var fD={kernelName:to,backendName:"webgl",kernelFunc:aX};function lX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let l=t.readSync(o.dataId),u=t.readSync(s.dataId),c=Xg(l,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,c)}else if(o.shape.length===2){let l=t.bufferSync(o),u=t.bufferSync(s),c=wA(l,u,a,i);return t.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var dD={kernelName:Yl,backendName:"webgl",kernelFunc:lX};var vv=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function uX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n;y.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let i=o.shape[0],l=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],c=a==="NHWC"?o.shape[3]:o.shape[1],p=l*s,m=u*s,f=c/(s*s),d=a==="NHWC"?[i,p,m,f]:[i,f,p,m],h=new vv(d,s,a);return t.runWebGLProgram(h,[o],o.dtype)}var hD={kernelName:oi,backendName:"webgl",kernelFunc:uX};var Ff=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.inHeight,i=e.inWidth,l=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,p=e.strideWidth,m=e.dilationHeight,f=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,g=e.outChannels/e.inChannels,x="",b="";n&&(o?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:x=`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${c}, ${p});
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${g};
        int q = d2 - d1 * ${g};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${m};

          if (xR < 0 || xR >= ${a}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${f};

            if (xC < 0 || xC >= ${i}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${w}
        ${b}
        setOutput(result);
      }
    `}};var Of=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;let a=e.inHeight,i=e.inWidth,l=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,p=e.strideWidth,m=e.dilationHeight,f=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,g=h,x="int xR; int xC; int xCOffset;";for(let k=0;k<d;k++)for(let E=0;E<h;E++)x+=`
          vec4 xTexelR${k}C${E*2} = vec4(0.);
          vec4 wR${k}C${E} = vec4(0.);
          vec4 xR${k}C${E} = vec4(0.);`;for(let k=0;k<d;k++)for(let E=0;E<g;E++){let S=E*2;if(x+=`
          xR = xRCorner + ${k*m};
          xC = xCCorner + ${S*f};
        `,p===1){if(S<h&&(u%2==1?x+=`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${k}C${S} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    xTexelR${k}C${S}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${k}C${S} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    previous.zw = vec2(0.);
                  }

                  xR${k}C${S} = vec4(previous.zw, xTexelR${k}C${S}.xy);
                } else {
                  xR${k}C${S} = vec4(0, 0, xTexelR${k}C${S}.xy);
                }
              `:x+=`
                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {
                  xTexelR${k}C${S} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${k}C${S} = vec4(0.);
                }

                xR${k}C${S} = xTexelR${k}C${S};
              `,S+1<h)){let R=u%2==0?y.nearestLargerEven(f):f;f%2==0&&u%2==1||f%2!=0&&u%2!=1?(x+=`
                  xCOffset = xC + ${u%2} + ${R};

                  if(xR >= 0 && xR < ${a} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${k}C${S+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,f>1&&(x+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${a} &&
                      xCOffset >= 0 && xCOffset < ${i}) {
                      xTexelR${k}C${S} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${k}C${S} = vec4(0.);
                    }
                  `),x+=`
                  xR${k}C${S+1} = vec4(
                    xTexelR${k}C${S}.zw, xTexelR${k}C${S+2}.xy);
                `):x+=`
                  xCOffset = xC + ${R};

                  if(xR >= 0 && xR < ${a} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${k}C${S+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${k}C${S+1} = xTexelR${k}C${S+2};
                `}}else S<h&&(x+=`
              if(xR >= 0 && xR < ${a}) {
            `,u%2==1?(x+=`
                xCOffset = xC + 1 - ${p};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${k}C${S} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${k}C${S} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${i}) {
                  xTexelR${k}C${S+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${k}C${S+2} = vec4(0.);
                }

                xR${k}C${S} = vec4(
                  xTexelR${k}C${S}.zw, xTexelR${k}C${S+2}.zw);
              `,S+1<h&&(x+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${p};
                  if(xCOffset >= 0 && xCOffset < ${i}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${k}C${S+1} = vec4(xTexelR${k}C${S+2}.xy, final.xy);
                `)):(x+=`
                if(xC >= 0 && xC < ${i}) {
                  xTexelR${k}C${S} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${k}C${S} = vec4(0.);
                }

                xCOffset = xC + ${p};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${k}C${S+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${k}C${S+2} = vec4(0.);
                }

                xR${k}C${S} = vec4(
                  xTexelR${k}C${S}.xy, xTexelR${k}C${S+2}.xy);
              `,S+1<h&&(x+=`
                  xR${k}C${S+1} = vec4(
                    xTexelR${k}C${S}.zw, xTexelR${k}C${S+2}.zw);
                `)),x+="}");S<h&&(x+=`
            vec4 wTexelR${k}C${S} = getW(${k}, ${S}, d1, q);
            wR${k}C${S} = vec4(wTexelR${k}C${S}.xz, wTexelR${k}C${S}.xz);
          `,S+1<h&&(x+=`
              vec4 wTexelR${k}C${S+1} = getW(${k}, ${S+1}, d1, q);
              wR${k}C${S+1} =
                vec4(wTexelR${k}C${S+1}.xz, wTexelR${k}C${S+1}.xz);`))}for(let k=0;k<d;k++)for(let E=0;E<h;E++)x+=`dotProd += xR${k}C${E} * wR${k}C${E};`;let b="",w="";n&&(o?b=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?b=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:b=`vec4 activation(vec4 x) {
          ${n}
        }`,w="result = activation(result);");let _=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${c}, ${p});
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${x}

        vec4 result = dotProd;
        ${_}
        ${w}
        setOutput(result);
      }
    `}};function cX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l,dimRoundingMode:u}=n,c=l;c==null&&(c=[1,1]),y.assert(N.eitherStridesOrDilationsAreOne(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let p=N.computeConv2DInfo(o.shape,s.shape,a,c,i,u,!0),m;return W().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?m=new Of(p):m=new Ff(p),t.runWebGLProgram(m,[o,s],"float32")}var gD={kernelName:ro,backendName:"webgl",kernelFunc:cX};var Cv=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Iv=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function pX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=n,p=N.computeConv2DInfo(o.shape,c,a,i,l,u,!0),m=new Cv(p);return t.runWebGLProgram(m,[o,s],"float32")}var xD={kernelName:Zl,backendName:"webgl",kernelFunc:pX};function mX(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=n,p=N.computeConv2DInfo(c,s.shape,a,i,l,u,!0),m=new Iv(p);return t.runWebGLProgram(m,[o,s],"float32")}var yD={kernelName:Jl,backendName:"webgl",kernelFunc:mX};var Nv=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function fX(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=y.sizeFromShape(n.shape),a=ce({inputs:{x:n},backend:t,attrs:{shape:[s]}}),i=new Nv(s),l=t.runWebGLProgram(i,[a],a.dtype),u=ce({inputs:{x:l},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}var bD={kernelName:Ql,backendName:"webgl",kernelFunc:fX};var Sv=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:o,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:p,left:m}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function dX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l}=n,u=N.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",l),c,p=new Sv(u);c=t.runWebGLProgram(p,[o,s],"float32");let m=ce({inputs:{x:c},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(c),m}var wD={kernelName:la,backendName:"webgl",kernelFunc:dX};var hX="return (x >= 0.0) ? x : (exp(x) - 1.0);",gX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,xX=ve({opSnippet:hX,packedOpSnippet:gX}),_D={kernelName:si,backendName:"webgl",kernelFunc:xX};var yX="return (b >= 1.0) ? a : a * (b + 1.0);",bX=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,wX=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ms(bX,n.shape,o.shape):new Yo(yX,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)},kD={kernelName:eu,backendName:"webgl",kernelFunc:wX};var _X=`
  return vec4(equal(a, b));
`,kX="return float(a == b);",vX=it({opSnippet:kX,packedOpSnippet:_X,dtype:"bool"}),vD={kernelName:ai,backendName:"webgl",kernelFunc:vX};var CX=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N.ERF_P};
  float a1 = ${N.ERF_A1};
  float a2 = ${N.ERF_A2};
  float a3 = ${N.ERF_A3};
  float a4 = ${N.ERF_A4};
  float a5 = ${N.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,IX=ve({opSnippet:CX}),CD={kernelName:ii,backendName:"webgl",kernelFunc:IX};var ID="return exp(x);",Tv=ve({opSnippet:ID,packedOpSnippet:ID,cpuKernelImpl:vA}),ND={kernelName:oo,backendName:"webgl",kernelFunc:Tv};function lx(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),l=o;return o<0&&(y.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+o+1),i.splice(l,0,1),ce({inputs:{x:s},backend:n,attrs:{shape:i}})}var SD={kernelName:ps,backendName:"webgl",kernelFunc:lx};var TD="return exp(x) - 1.0;",NX=ve({opSnippet:TD,packedOpSnippet:TD,cpuKernelImpl:CA}),ED={kernelName:li,backendName:"webgl",kernelFunc:NX};var ux=class{constructor(e,t,n){this.variableNames=["real","imag"];let o=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function cx(r,e,t){let n=t.texData.get(r.dataId),o=y.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=ce({inputs:{x:r},backend:t,attrs:{shape:[a,s]}}),l=i.shape,u=new ux("real",l,e),c=new ux("imag",l,e),p=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],m=t.runWebGLProgram(u,p,"float32"),f=t.runWebGLProgram(c,p,"float32"),d=nn({inputs:{real:m,imag:f},backend:t});t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f);let h=ce({inputs:{x:d},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(d),h}function SX(r){let{inputs:e,backend:t}=r,{input:n}=e;return cx(n,!1,t)}var AD={kernelName:tu,backendName:"webgl",kernelFunc:SX};var Ev=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}};function Pf(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||y.inferDtype(o),s==="string"){let a=y.getArrayFromDType(s,y.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new Ev(n,o),i=a.getCustomSetupFunc(o);return e.runWebGLProgram(a,[],s,i)}}var DD={kernelName:ua,backendName:"webgl",kernelFunc:Pf};var Av=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var $D={kernelName:ui,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new Av(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};var RD="return floor(x);",TX=ve({opSnippet:RD,packedOpSnippet:RD,cpuKernelImpl:IA}),FD={kernelName:so,backendName:"webgl",kernelFunc:TX};var EX=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,AX=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,DX=it({opSnippet:EX,packedOpSnippet:AX,dtype:"int32"}),OD={kernelName:io,backendName:"webgl",kernelFunc:DX};var Dv=class{constructor(e){this.variableNames=["A"];let t=Pt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var $v=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Pt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var PD={kernelName:Lc,backendName:"webgl",kernelFunc:$X},Cp;function $X(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n,a=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,l=typeof ImageBitmap!="undefined"&&o instanceof ImageBitmap,[u,c]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],p=[c,u],m=[c,u,s];(i||a||l)&&(Cp==null&&(Cp=document.createElement("canvas").getContext("2d")),Cp.canvas.width=u,Cp.canvas.height=c,Cp.drawImage(o,0,0,u,c),o=Cp.canvas);let f=t.makeTensorInfo(p,"int32");t.texData.get(f.dataId).usage=Ar.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(f.dataId),o);let d=W().getBool("WEBGL_PACK")?new $v(m):new Dv(m),h=t.runWebGLProgram(d,[f],"int32");return t.disposeData(f.dataId),h}function RX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=N.convertConv2DDataFormat(c),g=N.computeConv2DInfo(o.shape,s.shape,l,p,u,m,!1,h),x,b=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=sx({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:d});else if(W().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)x=ix({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:d});else{let _=a!=null,k=i!=null,E=f==="leakyrelu",S=f?xl(f,!1):null,R=new Rf(g,_,S,k,E),F=[o,s];if(a&&F.push(a),i&&F.push(i),E){let L=t.makeTensorInfo([],"float32",y.createScalarValue(d,"float32"));F.push(L),b.push(L)}x=t.runWebGLProgram(R,F,"float32")}let w=ce({inputs:{x},backend:t,attrs:{shape:g.outShape}});return b.push(x),b.forEach(_=>t.disposeIntermediateTensorInfo(_)),w}var MD={kernelName:vs,backendName:"webgl",kernelFunc:RX};function FX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:m,leakyreluAlpha:f}=n,d=[],h=c;h==null&&(h=[1,1]),y.assert(N.eitherStridesOrDilationsAreOne(l,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${h}'`);let g=N.computeConv2DInfo(o.shape,s.shape,l,h,u,p,!0),x=W().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=m?xl(m,x):null,w=[o,s],_=a!=null,k=i!=null,E=m==="leakyrelu";if(_&&w.push(a),k&&w.push(i),E){let F=t.makeTensorInfo([],"float32",y.createScalarValue(f,"float32"));w.push(F),d.push(F)}let S;x?S=new Of(g,_,b,k,E):S=new Ff(g,_,b,k,E);let R=t.runWebGLProgram(S,w,"float32");return d.forEach(F=>t.disposeIntermediateTensorInfo(F)),R}var LD={kernelName:Cs,backendName:"webgl",kernelFunc:FX};var Rv=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let o=Le(t.length),s=Le(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function OX(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],[i,l,u,c]=N.prepareAndValidate(n,o),p=ce({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),m=ce({inputs:{x:n},backend:t,attrs:{shape:[y.sizeFromShape(n.shape)/u,u]}}),f=new Rv(a,c,[l,u]),d=t.runWebGLProgram(f,[m,p],m.dtype),h=ce({inputs:{x:d},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(d),h}var zD={kernelName:ci,backendName:"webgl",kernelFunc:OX};var Fv=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=Le(this.rank),o=PX(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}};function PX(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("int(getIndices(resRC.x, resRC.z))"):n.push(`${t[o]}`);return n.join()}function MX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,l=y.parseAxisParam(a,o.shape)[0],u=N.segment_util.collectGatherOpShapeInfo(o,s,l,i),c=y.sizeFromShape(s.shape),p=[],m=ce({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=ce({inputs:{x:s},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(m),p.push(f);let d=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let b=t.bufferSync(f),w=t.bufferSync(m),_=NA(w,b,d);return p.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.makeTensorInfo(u.outputShape,_.dtype,_.values)}let h=new Fv(m.shape,d),g=t.runWebGLProgram(h,[m,f],m.dtype);p.push(g);let x=ce({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),x}var BD={kernelName:ms,backendName:"webgl",kernelFunc:MX};var LX="return float(a > b);",zX=`
  return vec4(greaterThan(a, b));
`,BX=it({opSnippet:LX,packedOpSnippet:zX,cpuKernelImpl:SA,dtype:"bool"}),VD={kernelName:pi,backendName:"webgl",kernelFunc:BX};var VX="return float(a >= b);",GX=`
  return vec4(greaterThanEqual(a, b));
`,jX=it({opSnippet:VX,packedOpSnippet:GX,dtype:"bool"}),GD={kernelName:lo,backendName:"webgl",kernelFunc:jX};function WX(r){let{inputs:e,backend:t}=r,{input:n}=e;return cx(n,!0,t)}var jD={kernelName:ru,backendName:"webgl",kernelFunc:WX};var UX="return float(!isnan(x) && !isinf(x));",qX=ve({opSnippet:UX,dtype:"bool"}),WD={kernelName:mi,backendName:"webgl",kernelFunc:qX};var HX="return float(isinf(x));",KX=ve({opSnippet:HX,dtype:"bool"}),UD={kernelName:fi,backendName:"webgl",kernelFunc:KX};var XX="return float(isnan(x));",YX=ve({opSnippet:XX,dtype:"bool"}),qD={kernelName:di,backendName:"webgl",kernelFunc:YX};var ZX="return float(a < b);",JX=`
  return vec4(lessThan(a, b));
`,QX=it({opSnippet:ZX,packedOpSnippet:JX,cpuKernelImpl:TA,dtype:"bool"}),HD={kernelName:hi,backendName:"webgl",kernelFunc:QX};var e7="return float(a <= b);",t7=`
  return vec4(lessThanEqual(a, b));
`,r7=it({opSnippet:e7,packedOpSnippet:t7,dtype:"bool"}),KD={kernelName:gi,backendName:"webgl",kernelFunc:r7};function n7(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=EA(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var XD={kernelName:ou,backendName:"webgl",kernelFunc:n7};var o7=`if (x < 0.0) return NAN;
  return log(x);`,s7=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,i7=ve({opSnippet:o7,packedOpSnippet:s7,cpuKernelImpl:AA}),YD={kernelName:co,backendName:"webgl",kernelFunc:i7};var a7="return log(1.0 + x);",l7=ve({opSnippet:a7}),ZD={kernelName:xi,backendName:"webgl",kernelFunc:l7};var u7="return float(a >= 1.0 && b >= 1.0);",c7=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,p7=it({opSnippet:u7,packedOpSnippet:c7,dtype:"bool"}),JD={kernelName:yi,backendName:"webgl",kernelFunc:p7};var m7="return float(!(x >= 1.0));",f7=ve({opSnippet:m7}),QD={kernelName:Qa,backendName:"webgl",kernelFunc:f7};var d7="return float(a >= 1.0 || b >= 1.0);",h7=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,g7=it({opSnippet:d7,packedOpSnippet:h7,dtype:"bool"}),e$={kernelName:el,backendName:"webgl",kernelFunc:g7};var Ov=class{constructor(e,t,n,o,s){this.variableNames=["x"],this.outputShape=[];let a=t,i=e[3]-1;this.outputShape=e;let l,u=`float(${n}) + float(${o}) * sum`;s===.5?l=`inversesqrt(${u})`:s===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};var Pv=class{constructor(e,t,n,o,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,i=e[3]-1;this.outputShape=e;let l,u=`float(${n}) + float(${o}) * sum`;s===.5?l=`inversesqrt(${u})`:s===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}};var x7=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:l}=n,u=W().getBool("WEBGL_PACK_NORMALIZATION")?new Pv(o.shape,s,a,i,l):new Ov(o.shape,s,a,i,l);return t.runWebGLProgram(u,[o],o.dtype)},t$={kernelName:ca,backendName:"webgl",kernelFunc:x7};var Mv=class{constructor(e,t,n,o,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var y7=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:l,alpha:u,beta:c}=n,p=new Mv(o.shape,i,l,u,c);return t.runWebGLProgram(p,[o,s,a],o.dtype)},r$={kernelName:su,backendName:"webgl",kernelFunc:y7};function n$(r,e,t,n){let o=y.sizeFromShape(e),a=y.sizeFromShape(r.shape)/o,i=ce({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),l=vn(i,r.dtype,"max",n),u=ce({inputs:{x:l},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}function Lv(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=o.shape.length,l=y.parseAxisParam(s,o.shape),u=l,c=N.getAxesPermutation(u,i),p=c!=null,m=t.shouldExecuteOnCPU([o]),f=o;if(p){if(m){let w=t.texData.get(f.dataId).values,_=new Array(i);for(let S=0;S<_.length;S++)_[S]=o.shape[c[S]];let k=vp(w,o.shape,o.dtype,c,_);f=t.makeTensorInfo(_,o.dtype);let E=t.texData.get(f.dataId);E.values=k}else f=yl(o,c,t);u=N.getInnerMostAxes(u.length,i)}N.assertAxesAreInnerMostDims("max",u,i);let[d,h]=N.computeOutAndReduceShapes(f.shape,u),g=d;a&&(g=N.expandShapeToKeepDim(d,l));let x;if(m){let w=t.texData.get(f.dataId).values,_=DA(w,y.sizeFromShape(h),g,o.dtype);x=t.makeTensorInfo(g,o.dtype);let k=t.texData.get(x.dataId);k.values=_}else x=n$(f,h,g,t);return p&&t.disposeIntermediateTensorInfo(f),x}var o$={kernelName:po,backendName:"webgl",kernelFunc:Lv};var b7=Jg+`
  return max(a, b);
`,w7=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+gl+`
  return result;
`,_7=it({opSnippet:b7,packedOpSnippet:w7,cpuKernelImpl:$A}),s$={kernelName:mo,backendName:"webgl",kernelFunc:_7};function k7(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Fs(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=n,u=1;y.assert(N.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=N.computePool2DInfo(o.shape,s,a,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))return Ut({inputs:{x:o},backend:t});let p=new Wi(c,"max",!1);return t.runWebGLProgram(p,[o],o.dtype)}var i$={kernelName:fo,backendName:"webgl",kernelFunc:k7};function v7(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dataFormat:l,dimRoundingMode:u}=n,c=[1,1,1],p=N.computePool3DInfo(o.shape,s,a,c,i,u,l),m=new rc(p,"max",!1);return t.runWebGLProgram(m,[o],o.dtype)}var a$={kernelName:pa,backendName:"webgl",kernelFunc:v7};var zv=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,l=a-1-e.padInfo.left,u=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Bv=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,p=l-1-e.padInfo.front,m=u-1-e.padInfo.top,f=c-1-e.padInfo.left,d=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${d} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function C7(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=n,p=[1,1,1],m=N.computePool3DInfo(a.shape,i,l,p,u,c),f=new rc(m,"max",!0),d=t.runWebGLProgram(f,[a],a.dtype),h=new Bv(m),g=t.runWebGLProgram(h,[o,d],a.dtype);return t.disposeIntermediateTensorInfo(d),g}var l$={kernelName:au,backendName:"webgl",kernelFunc:C7};function I7(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;Fs([s,a],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=n,m=N.computePool2DInfo(i.shape,l,u,1,c,p),f=!0,d=new Wi(m,"max",f),h=t.runWebGLProgram(d,[i],i.dtype),g=new zv(m),x=t.runWebGLProgram(g,[o,h],i.dtype);return t.disposeIntermediateTensorInfo(h),x}var u$={kernelName:iu,backendName:"webgl",kernelFunc:I7};function c$(r,e,t,n){let o=new Wi(t,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new Wi(t,"max",!0,!0,e);let a=n.runWebGLProgram(o,[r],"float32");return[s,a]}var p$={kernelName:lu,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,l=t;y.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let u=[1,1];y.assert(N.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=N.computePool2DInfo(n.shape,o,s,u,a),[p,m]=c$(n,i,c,l);return[p,m]}};function m$(r,e,t,n){let o=y.sizeFromShape(e),a=y.sizeFromShape(r.shape)/o,i=ce({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),l=vn(i,"float32","mean",n),u=ce({inputs:{x:l},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var f$={kernelName:ho,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{keepDims:o,axis:s}=e,a=t,i=n.shape.length,l=y.parseAxisParam(s,n.shape),u=l,c=N.getAxesPermutation(u,i),p=c!=null,m=a.shouldExecuteOnCPU([n]),f=[],d=n;if(p){if(m){let _=a.texData.get(d.dataId).values,k=new Array(i);for(let R=0;R<k.length;R++)k[R]=n.shape[c[R]];let E=vp(_,n.shape,n.dtype,c,k);d=a.makeTensorInfo(k,n.dtype);let S=a.texData.get(d.dataId);S.values=E}else d=yl(n,c,a);f.push(d),u=N.getInnerMostAxes(u.length,i)}N.assertAxesAreInnerMostDims("sum",u,i);let[h,g]=N.computeOutAndReduceShapes(d.shape,u),x=h;o&&(x=N.expandShapeToKeepDim(h,l));let b=m$(d,g,x,a);for(let w of f)a.disposeIntermediateTensorInfo(w);return b}};function N7(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,l=y.parseAxisParam(s,o.shape),u=l,c=N.getAxesPermutation(u,i),p=o;c!=null&&(p=zt({inputs:{x:o},backend:t,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,o.shape.length)),N.assertAxesAreInnerMostDims("min",u,i);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(f),h=ce({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=vn(h,h.dtype,"min",t),x;if(a){let b=N.expandShapeToKeepDim(m,l);x=ce({inputs:{x:g},backend:t,attrs:{shape:b}})}else x=ce({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),x}var d$={kernelName:go,backendName:"webgl",kernelFunc:N7};var S7=Jg+`
  return min(a, b);
`,T7=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+gl+`
  return result;
`,E7=it({opSnippet:S7,packedOpSnippet:T7,cpuKernelImpl:RA}),h$={kernelName:xo,backendName:"webgl",kernelFunc:E7};var Vv=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,p)=>c[0]+e[p]+c[1]);let o=e.length,s=Le(o),a=t.map(c=>c[0]).join(","),i=t.map((c,p)=>c[0]+e[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),u=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};var Gv=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((d,h)=>d[0]+e[h]+d[1]);let o=e.length,s=Le(o),a=t.map(d=>d[0]).join(","),i=t.map((d,h)=>d[0]+e[h]).join(","),l=Wt("rc",o),u=Wt("source",o),c=`${l[o-1]} < ${this.outputShape[o-1]}`,p=o===1?"source":`vec2(${u.slice(-2).join()})`,m=n==="reflect"?0:1,f="";if(o===1){let d=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[o-1]} += 1;
        if(${c}) {
          ${d}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
      `}else{let d=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[o-1]} += 1;
        if(${c}) {
          ${d}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
        rc = outputLoc;
        ${l[o-2]} += 1;
        if(${l[o-2]} < ${this.outputShape[o-2]}) {
          ${d}
          result[2] = getChannel(getX(${u.join()}), ${p});
          ${l[o-1]} += 1;
          if(${c}) {
            ${d}
            result[3] = getChannel(getX(${u.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var A7=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{paddings:o,mode:s}=t,a=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gv(n.shape,o,s):new Vv(n.shape,o,s);return e.runWebGLProgram(a,[n],n.dtype)},g$={kernelName:ma,backendName:"webgl",kernelFunc:A7};var D7=`if (b == 0.0) return NAN;
  return mod(a, b);`,$7=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+gl+`
  return result;
`,R7=it({opSnippet:D7,packedOpSnippet:$7}),x$={kernelName:bi,backendName:"webgl",kernelFunc:R7};var jv=class{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.seedLoc==null&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}};var F7=`
if (a == b) {
  return 1.0;
};
return a / b;`,O7=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,Wv=it({opSnippet:F7,packedOpSnippet:O7,checkOutOfBounds:!0}),y$={kernelName:no,backendName:"webgl",kernelFunc:Wv};var b$="return a - b;",Uv=it({opSnippet:b$,packedOpSnippet:b$,supportsComplex:!0,cpuKernelImpl:VA}),w$={kernelName:Oo,backendName:"webgl",kernelFunc:Uv};function qv(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=y.parseAxisParam([s],o.shape),i=Lv({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),l=N.expandShapeToKeepDim(i.shape,a),u=ce({inputs:{x:i},backend:t,attrs:{shape:l}}),c=Uv({inputs:{a:o,b:u},backend:t}),p=Tv({inputs:{x:c},backend:t}),m=$f({inputs:{x:p},backend:t,attrs:{axis:a,keepDims:!1}}),f=ce({inputs:{x:m},backend:t,attrs:{shape:l}}),d=Wv({inputs:{a:p,b:f},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}var _$={kernelName:Ro,backendName:"webgl",kernelFunc:qv};function P7(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n,l=i?o:qv({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new jv(u,c,s),m=p.getCustomSetupFunc(a),f=t.runWebGLProgram(p,[l],"int32",m);return i||t.disposeIntermediateTensorInfo(l),f}var k$={kernelName:uu,backendName:"webgl",kernelFunc:P7};var v$="return -x;";function M7(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.texData.get(n.dataId),[a,i]=OA(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o;return W().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Ps(n.shape,v$):o=new rn(n.shape,v$),t.runWebGLProgram(o,[n],n.dtype)}var C$={kernelName:fs,backendName:"webgl",kernelFunc:M7};var L7=Tr.nonMaxSuppressionV3Impl;function z7(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=n,u=t.readSync(o.dataId),c=t.readSync(s.dataId),{selectedIndices:p}=L7(u,c,a,i,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}var I$={kernelName:_i,backendName:"webgl",kernelFunc:z7};var B7=Tr.nonMaxSuppressionV4Impl;function V7(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=n,c=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:m,validOutputs:f}=B7(c,p,a,i,l,u);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var N$={kernelName:ki,backendName:"webgl",kernelFunc:V7};var G7=Tr.nonMaxSuppressionV5Impl;function j7(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=n,c=t.readSync(o.dataId),p=t.readSync(s.dataId),m=a,f=i,d=l,h=u,{selectedIndices:g,selectedScores:x}=G7(c,p,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var S$={kernelName:vi,backendName:"webgl",kernelFunc:j7};var Hv=class{constructor(e,t,n,o){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var W7=r=>{let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,l=y.sizeFromShape(o.shape),u=new Hv(l,s,a,i),c=ce({inputs:{x:o},backend:t,attrs:{shape:[l]}}),p=t.runWebGLProgram(u,[c],o.dtype);t.disposeIntermediateTensorInfo(c);let m=[...o.shape,s],f=ce({inputs:{x:p},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(p),f},T$={kernelName:bo,backendName:"webgl",kernelFunc:W7};function Mf(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=Va({inputs:{input:n},backend:t}),s=Mf({inputs:{x:o},backend:t}),a=nc({inputs:{input:n},backend:t}),i=Mf({inputs:{x:a},backend:t}),l=nn({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return Pf({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var E$={kernelName:_s,backendName:"webgl",kernelFunc:Mf};function A$(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=Va({inputs:{input:n},backend:t}),s=A$({inputs:{x:o},backend:t}),a=nc({inputs:{input:n},backend:t}),i=Mf({inputs:{x:a},backend:t}),l=nn({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return Pf({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var D$={kernelName:ds,backendName:"webgl",kernelFunc:A$};function U7(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return lx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(c=>{y.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=e.map(c=>{let p=lx({inputs:{input:c},backend:t,attrs:{dim:o}});return i.push(p),p}),u=hv({inputs:l,backend:t,attrs:{axis:o}});return i.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}var $$={kernelName:hs,backendName:"webgl",kernelFunc:U7};var Kv=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);let o=e.length,s=Le(o),a=t.map(u=>u[0]).join(","),i=t.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(float(${n}));
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(float(${n}));
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};var Xv=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let o=e.length,s=Le(o),a=t.map(h=>h[0]).join(","),i=t.map((h,g)=>h[0]+e[g]).join(","),l=Wt("rc",o),u=Wt("source",o),c=`${l[o-1]} < ${this.outputShape[o-1]}`,p=o===1?"source":`vec2(${u.slice(-2).join()})`,m=[`${s} rc = outputLoc;`,`${l[o-1]} += 1;
       if(${c}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${l[o-2]} += 1;
       if(${l[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${l[o-1]} += 1;
         if(${c}) {`],f=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",d="";for(let h=0,g=o===1?2:4;h<g;h++)d+=`
        ${m[h]}
        if (${f}) {
          result[${h}] = float(${n});
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${u.join()}), ${p});
        }
      `;d+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var Yv=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n,i=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xv(o.shape,s,a):new Kv(o.shape,s,a);return t.runWebGLProgram(i,[o],o.dtype)},R$={kernelName:wo,backendName:"webgl",kernelFunc:Yv};var q7=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,H7=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+gl+`
  return result;
`,K7=it({opSnippet:q7,packedOpSnippet:H7}),F$={kernelName:_o,backendName:"webgl",kernelFunc:K7};function X7(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,l=[],u=y.parseAxisParam(s,o.shape),c=u,p=N.getAxesPermutation(c,i),m=o;p!=null&&(m=zt({inputs:{x:o},backend:t,attrs:{perm:p}}),c=N.getInnerMostAxes(c.length,i),l.push(m)),N.assertAxesAreInnerMostDims("prod",c,i);let f;if(t.shouldExecuteOnCPU([m])){let d=t.texData.get(m.dataId).values,{outVals:h,outShape:g,outDtype:x}=PA(m.shape,m.dtype,d,c);f=t.makeTensorInfo(g,x,h)}else{let[d,h]=N.computeOutAndReduceShapes(m.shape,c),g=y.sizeFromShape(h),x=ce({inputs:{x:m},backend:t,attrs:{shape:[-1,g]}}),b=gu(o.dtype),w=vn(x,b,"prod",t);f=ce({inputs:{x:w},backend:t,attrs:{shape:d}}),l.push(x),l.push(w)}if(a){l.push(f);let d=N.expandShapeToKeepDim(f.shape,u);f=ce({inputs:{x:f},backend:t,attrs:{shape:d}})}return l.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var O$={kernelName:Ci,backendName:"webgl",kernelFunc:X7};var Zv=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=MA(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},P$={kernelName:fa,backendName:"webgl",kernelFunc:Zv};var Y7="return 1.0 / x;",Z7=ve({opSnippet:Y7}),M$={kernelName:Ii,backendName:"webgl",kernelFunc:Z7};var J7=hr+`
  return (x < 0.0) ? 0.0 : x;
`,Q7=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,eY=ve({opSnippet:J7,packedOpSnippet:Q7}),L$={kernelName:vo,backendName:"webgl",kernelFunc:eY};var tY=hr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,rY=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,nY=ve({opSnippet:tY,packedOpSnippet:rY}),z$={kernelName:Io,backendName:"webgl",kernelFunc:nY};var Jv=class{constructor(e,t,n,o,s){this.variableNames=["A"],this.outputShape=[];let[a,i,l,u]=e;this.outputShape=[a,t,n,u];let c=[o&&t>1?i-1:i,o&&n>1?l-1:l],p=[o&&t>1?t-1:t,o&&n>1?n-1:n],m;s?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var Qv=class{constructor(e,t,n,o,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,i,l,u]=e;this.outputShape=[a,t,n,u];let c=[o&&t>1?i-1:i,o&&n>1?l-1:l],p=[o&&t>1?t-1:t,o&&n>1?n-1:n],m;s?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function oY(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[l,u]=i,c=W().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Qv(o.shape,l,u,s,a):new Jv(o.shape,l,u,s,a);return t.runWebGLProgram(c,[o],"float32")}var B$={kernelName:Co,backendName:"webgl",kernelFunc:oY};var e0=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,o,s]=t,[,a,i]=e,l=[n&&a>1?o-1:o,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],c=l[0]/u[0],p=l[1]/u[1],m=1/c,f=1/p,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function sY(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new e0(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var V$={kernelName:mu,backendName:"webgl",kernelFunc:sY};var t0=class{constructor(e,t,n,o,s){this.variableNames=["A"],this.outputShape=[];let[a,i,l,u]=e;this.outputShape=[a,t,n,u];let c=[o&&t>1?i-1:i,o&&n>1?l-1:l],p=[o&&t>1?t-1:t,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};function iY(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[l,u]=i,c=new t0(o.shape,l,u,s,a);return t.runWebGLProgram(c,[o],o.dtype)}var G$={kernelName:da,backendName:"webgl",kernelFunc:iY};var r0=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,o,s]=t,[,a,i]=e,l=[n&&a>1?o-1:o,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],c=l[0]/u[0],p=l[1]/u[1],m=1/c,f=1/p,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function aY(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new r0(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var j$={kernelName:pu,backendName:"webgl",kernelFunc:aY};var n0=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let o=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,s=e.map((i,l)=>o(l)).join(","),a=Le(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var o0=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let o=Wt("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Le(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(o.slice())};
          if(${s}){
            result.g = ${u(o.slice())};
          }
          if(${a}) {
            result.b = ${c(o.slice())};
            if(${s}) {
              result.a = ${p(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(d){return m(d)}function u(d){return d[n-1]="("+d[n-1]+" + 1)",m(d)}function c(d){return d[n-2]="("+d[n-2]+" + 1)",m(d)}function p(d){return d[n-1]="("+d[n-1]+" + 1)",d[n-2]="("+d[n-2]+" + 1)",m(d)}function m(d){let h=e.map((b,w)=>f(w,d)),g=h.join(","),x=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function f(d,h){return t.indexOf(d)!==-1&&e[d]!==1?`${e[d]} - ${h[d]} - 1`:`${h[d]}`}}};function lY(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return Ut({inputs:{x:o},backend:t});let l=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new o0(o.shape,i):new n0(o.shape,i);return t.runWebGLProgram(l,[o],o.dtype)}var W$={kernelName:No,backendName:"webgl",kernelFunc:lY};var s0=class{constructor(e,t,n,o){this.variableNames=["Image"],this.outputShape=[];let s=e[1],a=e[2],i=Math.sin(t).toFixed(3),l=Math.cos(t).toFixed(3);this.outputShape=e;let[u,c]=N.getImageCenter(o,s,a),p=u.toFixed(3),m=c.toFixed(3),f="";typeof n=="number"?f=`float outputValue = ${n.toFixed(2)};`:f=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - ${p}) * ${l} - (float(y) - ${m}) * ${i};
          float coordYFloat = (float(x) - ${p}) * ${i} + (float(y) - ${m}) * ${l};
          int coordX = int(round(coordXFloat + ${p}));
          int coordY = int(round(coordYFloat + ${m}));
          ${f}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var U$={kernelName:Fi,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,l=new s0(n.shape,o,s,a);return i.runWebGLProgram(l,[n],n.dtype)}};var uY=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,cY=ve({opSnippet:uY}),q$={kernelName:So,backendName:"webgl",kernelFunc:cY};var pY="return inversesqrt(x);",mY=ve({opSnippet:pY,cpuKernelImpl:LA}),H$={kernelName:To,backendName:"webgl",kernelFunc:mY};var Lf=class{constructor(e,t,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let l=Le(s.length),u=Le(a.length),c="";n===1?c="i":n===2&&(c="i, j");let p=`getIndices(${c})`,m="";o===1?m="i":o===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,d=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${s});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${p});
              flattenedIndex += index * ${d};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function fY(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=N.calculateShapes(s,o,a),m=[p/u,u];if(p===0)return t.makeTensorInfo(a,o.dtype);let f=ce({inputs:{x:o},backend:t,attrs:{shape:[l,i]}}),d=ce({inputs:{x:s},backend:t,attrs:{shape:[l,u]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new Lf(l,i,f.shape.length,d.shape.length,c,m),x=t.runWebGLProgram(g,[d,f,h],d.dtype),b=ce({inputs:{x},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(h),b}var K$={kernelName:Ni,backendName:"webgl",kernelFunc:fY};var i0=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<t.length;c++)u.push(`${i[c]}`),c<e&&l.push(`${i[c]}`);o=l.join(),s=u.join()}let a=Le(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function dY(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new i0(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(a,[n,o,s],fr(o.dtype,s.dtype))}var X$={kernelName:xs,backendName:"webgl",kernelFunc:dY};var hY=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${N.SELU_SCALEALPHA};
  float scale = ${N.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,gY=ve({opSnippet:hY}),Y$={kernelName:Si,backendName:"webgl",kernelFunc:gY};var xY="return 1.0 / (1.0 + exp(-1.0 * x));",yY=ve({opSnippet:xY}),Z$={kernelName:Ao,backendName:"webgl",kernelFunc:yY};var bY=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,wY=ve({opSnippet:bY}),J$={kernelName:Ei,backendName:"webgl",kernelFunc:wY};var _Y=Qg+`
  return sin(x);
`,kY=ve({opSnippet:_Y}),Q$={kernelName:Eo,backendName:"webgl",kernelFunc:kY};var vY=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,CY=ve({opSnippet:vY}),eR={kernelName:Ti,backendName:"webgl",kernelFunc:CY};var IY=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,NY=ve({opSnippet:IY}),tR={kernelName:Ai,backendName:"webgl",kernelFunc:NY};var SY=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((x,b)=>x*b),l=[[0,0]];l.push(...a);for(let x=1+s.length;x<o.shape.length;++x)l.push([0,0]);let u=[],c=Yv({inputs:{x:o},backend:t,attrs:{paddings:l,constantValue:0}}),p=N.getReshaped(c.shape,s,i,!1),m=N.getPermuted(p.length,s.length,!1),f=N.getReshapedPermuted(c.shape,s,i,!1),d=ce({inputs:{x:c},backend:t,attrs:{shape:p}}),h=zt({inputs:{x:d},backend:t,attrs:{perm:m}}),g=ce({inputs:{x:h},backend:t,attrs:{shape:f}});return u.push(c),u.push(d),u.push(h),u.forEach(x=>t.disposeIntermediateTensorInfo(x)),g},rR={kernelName:ha,backendName:"webgl",kernelFunc:SY};function TY(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:l,numUpdates:u,strides:c,outputSize:p}=N.calculateShapes(s,o,i),m=!1,f=new Lf(u,l,o.shape.length,s.shape.length,c,[p,1],m),d=t.runWebGLProgram(f,[s,o,a],s.dtype),h=ce({inputs:{x:d},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(d),h}var nR={kernelName:fu,backendName:"webgl",kernelFunc:TY};function EY(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],l=N.prepareSplitSize(o,s,i),u=o.shape.length,c=new Array(u).fill(0),p=o.shape.slice();return l.map(m=>{let f=[...p];f[i]=m;let d=Ba({inputs:{x:o},backend:t,attrs:{begin:c,size:f}});return c[i]+=m,d})}var oR={kernelName:bs,backendName:"webgl",kernelFunc:EY};var AY="return sqrt(x);",DY=ve({opSnippet:AY}),sR={kernelName:Do,backendName:"webgl",kernelFunc:DY};var $Y="return x * x;",RY=ve({opSnippet:$Y}),iR={kernelName:ga,backendName:"webgl",kernelFunc:RY};var aR="return (a - b) * (a - b);",FY=it({opSnippet:aR,packedOpSnippet:aR}),lR={kernelName:Fo,backendName:"webgl",kernelFunc:FY};function OY({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=hr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new rn(n.shape,o);return t.runWebGLProgram(s,[n],n.dtype)}var uR={kernelName:Rn,backendName:"webgl",kernelFunc:OY};var a0=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let o=n.length,s=Le(n.length),a=Le(n.length),i="";if(o===1)i="coords * strides + begin";else{let l=0;i=n.map((u,c)=>(l++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function PY(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n,{nonStrided:f,$begin:d,$strides:h,size:g,newShape:x,outShape:b}=or.sliceInfo(o.shape,s,a,i,l,u,c,p,m),w=ce({inputs:{x:o},backend:t,attrs:{shape:x}}),_;if(f){let E=Ba({inputs:{x:w},backend:t,attrs:{begin:d,size:g}});_=ce({inputs:{x:E},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(E)}else if(b.some(E=>E===0))_=t.makeTensorInfo(b,o.dtype,[]);else if(t.shouldExecuteOnCPU([w])){let R=t.texData.get(w.dataId).values,F=Ce(w.shape,w.dtype,R),L=BA(b,F,h,d);_=t.makeTensorInfo(b,w.dtype,L.values)}else{let S=new a0(d,h,b);_=t.runWebGLProgram(S,[w],w.dtype)}let k=ce({inputs:{x:_},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(_),k}var cR={kernelName:Di,backendName:"webgl",kernelFunc:PY};var MY="return tan(x);",LY=ve({opSnippet:MY}),pR={kernelName:$i,backendName:"webgl",kernelFunc:LY};var zY=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,BY=ve({opSnippet:zY}),mR={kernelName:Po,backendName:"webgl",kernelFunc:BY};var l0=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let o=Le(this.rank),s=VY(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function VY(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${t[o]}, ${r[o]})`);return n.join()}function u0(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(o.dtype==="string"){let u=t.readSync(o.dataId).map(m=>y.decodeString(m)),c=Ce(o.shape,o.dtype,u),p=GA(c,s);return t.makeTensorInfo(p.shape,p.dtype,p.values)}let a=new l0(o.shape,s);return t.runWebGLProgram(a,[o],o.dtype)}var fR={kernelName:yn,backendName:"webgl",kernelFunc:u0};function GY(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=t.readSync(o.dataId),[l,u]=jA(i,o.shape,o.dtype,s,a);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}var dR={kernelName:Ri,backendName:"webgl",kernelFunc:GY};function jY(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;Fs(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=n.readSync(s.dataId),{outputValues:i,outputShape:l,indices:u}=WA(a,o,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,i),n.makeTensorInfo([u.length],"int32",u)]}var hR={kernelName:du,backendName:"webgl",kernelFunc:jY};function WY(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,l=o.shape[s],u=new Array(i-1),c=0;for(let h=0;h<i;h++)h!==s&&(u[c++]=a.shape[h]);let p=[],m=new Array(i).fill(0),f=a.shape.slice();f[s]=1;let d=new Array(l);for(let h=0;h<d.length;h++){m[s]=h;let g=Ba({inputs:{x:a},backend:t,attrs:{begin:m,size:f}}),x=ce({inputs:{x:g},backend:t,attrs:{shape:u}});d[h]=x,p.push(g)}return p.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var gR={kernelName:ws,backendName:"webgl",kernelFunc:WY};var c0=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,o=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[o,i];let l="0.0",u="sumValue",c=Math.floor(n/4)*4,p=n%4,m=`
        sumValue += dot(values, segFilter);
    `,f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${u});
      }
    `}};function UY(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n,i=o.shape.length,l=[],u=0,c=N.getAxesPermutation([u],i),p=o;c!=null&&(p=zt({inputs:{x:o},backend:t,attrs:{perm:c}}),l.push(p),u=N.getInnerMostAxes(1,i)[0]);let m=N.segment_util.computeOutShape(p.shape,u,a),f=y.sizeFromShape([p.shape[u]]),d=ce({inputs:{x:p},backend:t,attrs:{shape:[-1,f]}});l.push(d);let h=gu(o.dtype),g=(_,k,E,S,R)=>{let F=_.shape[0],L=_.shape[1],G=N.segment_util.segOpComputeOptimalWindowSize(L,R),j={windowSize:G,inSize:L,batchSize:F,numSegments:R},U=new c0(j,k),Y=t.compileAndRun(U,[_,E],S);if(l.push(Y),Y.shape[1]===R)return Y;let K=Zv({backend:t,attrs:{start:0,stop:R,step:1,dtype:"float32"}}),Z=u0({inputs:{x:K},backend:t,attrs:{reps:[L/G]}});return l.push(K),l.push(Z),g(Y,k,Z,S,R)},x=g(d,"unsortedSegmentSum",s,h,a),b=ce({inputs:{x},backend:t,attrs:{shape:m}}),w=b;if(c!=null){l.push(b);let _=N.getUndoAxesPermutation(c);w=zt({inputs:{x:w},backend:t,attrs:{perm:_}})}return l.forEach(_=>t.disposeIntermediateTensorInfo(_)),w}var xR={kernelName:xa,backendName:"webgl",kernelFunc:UY};var qY=[t$,r$,g2,y2,b2,w2,k2,v2,C2,I2,T2,E2,A2,D2,R2,$2,F2,P2,O2,M2,L2,z2,B2,G2,j2,H2,X2,Y2,J2,o2,tD,nD,oD,rD,iD,aD,sD,lD,uD,cD,fD,dD,hD,xD,yD,gD,bD,wD,_D,kD,vD,CD,ND,SD,ED,AD,DD,$D,FD,OD,PD,MD,LD,zD,BD,VD,GD,n2,jD,Q2,WD,UD,qD,s2,HD,KD,XD,ZD,YD,JD,QD,e$,o$,a$,i$,l$,u$,p$,s$,f$,d$,h$,g$,x$,k$,c2,C$,I$,N$,S$,W2,T$,D$,$$,R$,F$,i2,O$,P$,U2,y$,M$,z$,L$,m2,B$,V$,G$,j$,W$,U$,q$,H$,K$,X$,Y$,Z$,J$,Q$,eR,V2,_$,tR,rR,nR,oR,sR,iR,lR,uR,cR,w$,d2,pR,mR,fR,dR,h2,hR,gR,xR,E$];for(let r of qY)tl(r);var Bt;(function(r){r[r.float32=0]="float32",r[r.int32=1]="int32",r[r.bool=2]="bool",r[r.string=3]="string",r[r.complex64=4]="complex64"})(Bt||(Bt={}));var bl;(function(r){r[r.linear=0]="linear",r[r.relu=1]="relu",r[r.relu6=2]="relu6",r[r.prelu=3]="prelu",r[r.leakyrelu=4]="leakyrelu"})(bl||(bl={}));var yR;function HY(r){yR=r.wasm.cwrap(ks,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function KY(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=n,m=t.dataIdMap.get(o.dataId).id,f=t.dataIdMap.get(s.dataId).id,d=0;if(a!=null){let R=t.dataIdMap.get(a.dataId);if(R.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${R.shape.length}.`);d=R.id}let h=i==null?0:t.dataIdMap.get(i.dataId).id,g=bl[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let x=l?o.shape[2]:o.shape[1],b=u?s.shape[1]:s.shape[2],w=o.shape[0],_=t.makeOutput([w,x,b],o.dtype),k=t.dataIdMap.get(_.dataId).id,E=new Uint8Array(new Int32Array(o.shape).buffer),S=new Uint8Array(new Int32Array(s.shape).buffer);return yR(m,E,o.shape.length,f,S,s.shape.length,l,u,g,d,h,p||0,k),_}var bR={kernelName:ks,backendName:"wasm",setupFunc:HY,kernelFunc:KY};function At(r){let e;function t(o){e=o.wasm.cwrap(r,null,["number","number"])}function n(o){let{backend:s,inputs:{x:a}}=o,i=s.dataIdMap.get(a.dataId).id,l=s.makeOutput(a.shape,a.dtype),u=s.dataIdMap.get(l.dataId).id;return y.sizeFromShape(l.shape)===0||e(i,u),l}return{kernelName:r,backendName:"wasm",setupFunc:t,kernelFunc:n}}var wR=At(us);function bt(r,e,t){let n;function o(a){n=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:l}=a,{a:u,b:c}=l,p=i.dataIdMap.get(u.dataId).id,m=i.dataIdMap.get(c.dataId).id,f=t!=null?t:u.dtype,d=N.assertAndGetBroadcastShape(u.shape,c.shape),h=i.makeOutput(d,f);if(y.sizeFromShape(d)===0)return h;let g=new Uint8Array(new Int32Array(u.shape).buffer),x=new Uint8Array(new Int32Array(c.shape).buffer),b=i.dataIdMap.get(h.dataId).id,w=()=>n(p,g,u.shape.length,m,x,c.shape.length,Bt[u.dtype],b);if(e&&u.dtype==="float32")return w(),h;let _=N.getBroadcastDims(u.shape,d),k=N.getBroadcastDims(c.shape,d),E=_.every((R,F)=>R===F),S=k.every((R,F)=>R===F);if(E&&S)return w(),h;throw new Error(`Broadcasting along outer dims is not yet supported for ${u.dtype} ${r}.`)}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var XY=!0,_R=bt(xn,XY);var kR;function YY(r){kR=r.wasm.cwrap(Hn,null,["array","number","number","number"])}function ZY(r){let{inputs:e,backend:t}=r,n=t.makeOutput(e[0].shape,e[0].dtype);if(y.sizeFromShape(n.shape)===0)return n;let o=e.map(i=>t.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),a=t.dataIdMap.get(n.dataId).id;return kR(s,o.length,Bt[n.dtype],a),n}var vR={kernelName:Hn,backendName:"wasm",setupFunc:YY,kernelFunc:ZY};function sc(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(n).set(o),n}var CR={kernelName:$n,backendName:"wasm",kernelFunc:sc};var IR;function JY(r){IR=r.wasm.cwrap(Mo,null,["number","array","number","number","number","array","number"])}function Ip(r){let{inputs:e,backend:t,attrs:n}=r,[o,s]=e9(e.x.shape,n.perm),a=!0;for(let d=0;d<s.length;d++)s[d]!==d&&(a=!1);let i=QY(e.x.shape,n.perm),l={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(a){let d=sc({inputs:e,backend:t});return d.shape=i,d}let u=t.makeOutput(i,l.dtype),c=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,m=new Uint8Array(new Int32Array(s).buffer),f=new Uint8Array(new Int32Array(l.shape).buffer);return IR(c,f,l.shape.length,Bt[l.dtype],p,m,s.length),u}function QY(r,e){let t=new Array(r.length);for(let n=0;n<t.length;n++)t[n]=r[e[n]];return t}function e9(r,e){let t=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&t.push(r[o]),r[e[o]]!==1&&n.push(e[o]);for(let o=0;o<n.length;++o){let s=-1;for(let a=0;a<n.length;++a)n[a]>=o&&(s===-1||n[s]>n[a])&&(s=a);n[s]=o}return[t,n]}var NR={kernelName:Mo,backendName:"wasm",kernelFunc:Ip,setupFunc:JY};function Zo(r,e,t){let n=r.shape,o=r.shape.length,s=y.parseAxisParam(e,n),a=s,i=N.getAxesPermutation(a,o),l=null,u=!1;if(i!=null){let c=new Array(o);for(let f=0;f<c.length;f++)c[f]=n[i[f]];a=N.getInnerMostAxes(a.length,o),l=Ip({inputs:{x:r},attrs:{perm:i},backend:t});let p=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(l.dataId).id!==p&&(u=!0)}return{transposed:l,originalAxes:s,axes:a,inputWasTransposed:u}}var SR;function t9(r){SR=r.wasm.cwrap(Kn,null,["number","number","number","number","number"])}function r9(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=a,l=s,{transposed:u,axes:c,inputWasTransposed:p}=Zo(s,o,e);if(p){let x=e.dataIdMap.get(u.dataId).id;x!==a&&(l=u,i=x)}let m=l.shape.slice(0,-1),f=e.makeOutput(m,"int32"),d=e.dataIdMap.get(f.dataId).id,h=y.sizeFromShape(f.shape),g=l.shape[c[0]];return SR(i,Bt[l.dtype],h,g,d),p&&e.disposeData(u.dataId),f}var TR={kernelName:Kn,backendName:"wasm",kernelFunc:r9,setupFunc:t9};var ER;function n9(r){ER=r.wasm.cwrap(Xn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function o9(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=t,c=N.computePool2DInfo(o.shape,a,i,1,l,u),p=c.filterHeight,m=c.filterWidth,f=c.padInfo.top,d=c.padInfo.right,h=c.padInfo.bottom,g=c.padInfo.left,x=c.strideHeight,b=c.strideWidth,w=c.inChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(c.dilationWidth!==1||c.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);let _=n.makeOutput(c.outShape,"float32"),k=n.dataIdMap.get(_.dataId).id;return ER(s,o.shape[0],o.shape[1],o.shape[2],p,m,f,d,h,g,x,b,w,k),_}var AR={kernelName:Xn,backendName:"wasm",setupFunc:n9,kernelFunc:o9};function Pr(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(o,s);return y.assert(s===y.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var DR={kernelName:gs,backendName:"wasm",kernelFunc:Pr};var $R;function s9(r){$R=r.wasm.cwrap(Yn,null,["number","array","number","number","array","number","number","number","number"])}function i9(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=o.shape.length,u=s.shape.length,c=a?o.shape[l-2]:o.shape[l-1],p=i?s.shape[u-1]:s.shape[u-2],m=a?o.shape[l-1]:o.shape[l-2],f=i?s.shape[u-2]:s.shape[u-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(d),x=y.sizeFromShape(h),b=g===x||g===1||x===1;y.assert(l>=2&&u>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${d}) and (${h}).`);let _=(g>x?o.shape.slice(0,-2):s.shape.slice(0,-2)).concat([m,f]);y.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let k=a?[g,c,m]:[g,m,c],E=i?[x,f,p]:[x,p,f],S=Pr({inputs:{x:o},backend:t,attrs:{shape:k}}),R=Pr({inputs:{x:s},backend:t,attrs:{shape:E}}),F=t.dataIdMap.get(S.dataId).id,L=t.dataIdMap.get(R.dataId).id,G=a?S.shape[2]:S.shape[1],j=i?R.shape[1]:R.shape[2],U=Math.max(g,x),Y=t.makeOutput([U,G,j],S.dtype),K=t.dataIdMap.get(Y.dataId).id,Z=new Uint8Array(new Int32Array(S.shape).buffer),te=new Uint8Array(new Int32Array(R.shape).buffer);return $R(F,Z,S.shape.length,L,te,R.shape.length,a,i,K),t.disposeData(S.dataId),t.disposeData(R.dataId),Y.shape=_,Y}var RR={kernelName:Yn,backendName:"wasm",setupFunc:s9,kernelFunc:i9};function ic(r){let{inputs:{x:e},attrs:{dtype:t},backend:n}=r,o=n.makeOutput(e.shape,t),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(o).set(s),o}var FR={kernelName:An,backendName:"wasm",kernelFunc:ic};var OR=At(Zn);var PR;function a9(r){PR=r.wasm.cwrap(Dn,null,["number","number","number","number"])}function l9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i=t.dataIdMap.get(o.dataId).id,l=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(l.dataId).id;return PR(i,s,a,u),l}var MR={kernelName:Dn,backendName:"wasm",setupFunc:a9,kernelFunc:l9};function p0(r){let{inputs:e,backend:t}=r,n=y.parseAxisParam(r.attrs.axis,e[0].shape)[0],o=N.computeOutShape(e.map(f=>f.shape),n),s=e.filter(f=>y.sizeFromShape(f.shape)>0);if(s.length===1)return sc({inputs:{x:s[0]},backend:t});let a=t.makeOutput(o,e[0].dtype);if(y.sizeFromShape(o)===0)return a;let i=s.map(f=>f.shape);if(N.assertParamsConsistent(i,n),s[0].dtype==="string"){let f=s.map(w=>{let _=y.sizeFromShape(w.shape.slice(n));return Pr({inputs:{x:w},backend:t,attrs:{shape:[-1,_]}})}),d=f.map(w=>({vals:t.readSync(w.dataId),shape:w.shape}));o=N.computeOutShape(f.map(w=>w.shape),1);let h=f[0].shape[0]===1,g=df(d,o,e[0].dtype,h),x=N.computeOutShape(s.map(w=>w.shape),n);a.shape=x;let b=t.dataIdMap.get(a.dataId);return b.stringBytes=N.fromStringArrayToUint8(g),a}let l=y.sizeFromShape(s[0].shape.slice(0,n)),u=0,c=s.map(f=>{let d=y.sizeFromShape(f.shape.slice(n));return u+=d,d}),p=s.map(f=>t.typedArrayFromHeap(f)),m=t.typedArrayFromHeap(a);for(let f=0;f<l;f++){let d=f*u;for(let h=0;h<p.length;h++){let g=c[h],x=f*g,b=p[h].subarray(x,x+g);m.set(b,d),d+=g}}return a}var LR={kernelName:cs,backendName:"wasm",kernelFunc:p0};var zR;function u9(r){zR=r.wasm.cwrap(Jn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function c9(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p,dataFormat:m}=t,f=N.convertConv2DDataFormat(m),d=N.computeConv2DInfo(o.shape,s.shape,l,u,c,p,!1,f),h=d.filterHeight,g=d.filterWidth,x=d.padInfo.top,b=d.padInfo.right,w=d.padInfo.bottom,_=d.padInfo.left,k=d.dilationHeight,E=d.dilationWidth,S=d.strideHeight,R=d.strideWidth,F=d.inChannels,L=d.outChannels,G=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let j=n.makeOutput(d.outShape,"float32"),U=n.dataIdMap.get(j.dataId).id;return zR(a,o.shape[0],o.shape[1],o.shape[2],i,h,g,x,b,w,_,G,k,E,S,R,F,L,U),j}var BR={kernelName:Jn,backendName:"wasm",setupFunc:u9,kernelFunc:c9};var VR;function p9(r){VR=r.wasm.cwrap(Qn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function m9(r){let{backend:e,inputs:t,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,inputShape:c}=n,p=1,m=N.convertConv2DDataFormat(l),f=N.computeConv2DInfo(c,s.shape,a,p,i,u,!1,m),{batchSize:d,filterHeight:h,filterWidth:g,inChannels:x,inHeight:b,inWidth:w,outChannels:_,outHeight:k,outWidth:E,strideHeight:S,strideWidth:R}=f,F=h-1-f.padInfo.top,L=g-1-f.padInfo.left,G=f.dataFormat==="channelsLast",j=y.computeStrides(f.inShape),U=y.computeStrides(o.shape),[Y,K,Z]=y.computeStrides(s.shape),te=j[0],X=G?j[1]:j[2],re=G?j[2]:1,ie=G?1:j[1],se=U[0],pe=G?U[1]:U[2],ae=G?U[2]:1,xe=G?1:U[1],ge=e.makeOutput(f.inShape,"float32"),we=e.dataIdMap.get(ge.dataId).id,ke=e.dataIdMap.get(o.dataId).id,De=e.dataIdMap.get(s.dataId).id;return VR(ke,De,d,h,g,b,w,x,k,E,_,S,R,F,L,Y,K,Z,te,X,re,ie,se,pe,ae,xe,we),ge}var GR={kernelName:Qn,backendName:"wasm",setupFunc:p9,kernelFunc:m9};var jR=At(eo);var m0;(function(r){r[r.bilinear=0]="bilinear",r[r.nearest=1]="nearest"})(m0||(m0={}));var WR;function f9(r){WR=r.wasm.cwrap(ni,null,["number","number","number","number","array","number","number","number","number","number"])}function d9(r){let{backend:e,inputs:t,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:a}=n,{image:i,boxes:l,boxInd:u}=t,c=l.shape[0],[p,m]=a,f=[c,p,m,i.shape[3]],d=e.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=ic({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),d=e.dataIdMap.get(h.dataId));let g=d.id,x=e.dataIdMap.get(l.dataId).id,b=e.dataIdMap.get(u.dataId).id,w=e.makeOutput(f,"float32"),_=e.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return WR(g,x,b,c,k,p,m,m0[o],s,_),h!=null&&e.disposeData(h.dataId),w}var UR={kernelName:ni,backendName:"wasm",setupFunc:f9,kernelFunc:d9};var qR;function h9(r){qR=r.wasm.cwrap(to,null,["number","number","number","number","number","number"])}function g9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,l=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let u=N.getAxesPermutation([s],l),c=o;u!==null&&(c=Ip({inputs:{x:o},attrs:{perm:u},backend:t}));let p=N.getInnerMostAxes(1,l)[0];N.assertAxesAreInnerMostDims("cumsum",[p],l);let m=t.makeOutput(c.shape,c.dtype),f=c.shape[p],d=t.dataIdMap.get(c.dataId).id,h=t.dataIdMap.get(m.dataId).id;qR(d,a?1:0,i?1:0,f,h,Bt[o.dtype]);let g=m;if(u!==null){let x=N.getUndoAxesPermutation(u);g=Ip({inputs:{x:m},attrs:{perm:x},backend:t}),t.disposeData(c.dataId),t.disposeData(m.dataId)}return g}var HR={kernelName:to,backendName:"wasm",setupFunc:h9,kernelFunc:g9};var KR;function x9(r){KR=r.wasm.cwrap(oi,null,["number","number","number","array","number","array","array","number","number"])}function y9(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n;y.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let i=o.shape[0],l=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],c=a==="NHWC"?o.shape[3]:o.shape[1],p=l*s,m=u*s,f=c/(s*s),d=a==="NHWC"?[i,p,m,f]:[i,f,p,m],h=e.makeOutput(d,"float32"),x=e.dataIdMap.get(o.dataId).id,b=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),w=new Uint8Array(new Int32Array(d).buffer),_=new Uint8Array(new Int32Array(y.computeStrides(d)).buffer),k=e.dataIdMap.get(h.dataId).id;return KR(x,s,a==="NHWC"?1:0,b,o.shape.length-1,w,_,d.length,k),h}var XR={kernelName:oi,backendName:"wasm",setupFunc:x9,kernelFunc:y9};var YR;function b9(r){YR=r.wasm.cwrap(ro,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function w9(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p}=t,m=u==null?[1,1]:u,f=N.computeConv2DInfo(o.shape,s.shape,l,m,c,p,!0),d=f.filterHeight,h=f.filterWidth,g=f.padInfo.top,x=f.padInfo.right,b=f.padInfo.bottom,w=f.padInfo.left,_=f.dilationHeight,k=f.dilationWidth,E=f.strideHeight,S=f.strideWidth,R=f.inChannels,F=f.outChannels,L=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let G=n.makeOutput(f.outShape,"float32"),j=n.dataIdMap.get(G.dataId).id;return YR(a,o.shape[0],o.shape[1],o.shape[2],i,d,h,g,x,b,w,L,_,k,E,S,R,F,j),G}var ZR={kernelName:ro,backendName:"wasm",setupFunc:b9,kernelFunc:w9};var _9=!1,JR=bt(ai,_9,"bool");var QR=At(oo);function px(r){let{inputs:e,attrs:t,backend:n}=r,{input:o}=e,{dim:s}=t,a=o.shape.length,i=o.shape.slice(),l=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+s+1),i.splice(l,0,1),Pr({inputs:{x:o},backend:n,attrs:{shape:i}})}var eF={kernelName:ps,backendName:"wasm",kernelFunc:px};function k9(r){let{attrs:{shape:e,value:t,dtype:n},backend:o}=r,s=o.makeOutput(e,n);return o.typedArrayFromHeap(s).fill(t),s}var tF={kernelName:ua,backendName:"wasm",kernelFunc:k9};var rF;function v9(r){rF=r.wasm.cwrap(ui,null,["number","number","number","number","number","number"])}function C9(r){let{inputs:e,backend:t}=r,{image:n}=e,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,[i,l,u,c]=n.shape;return rF(s,i,l,u,c,a),o}var nF={kernelName:ui,backendName:"wasm",kernelFunc:C9,setupFunc:v9};var oF=At(so);var I9=!1,sF=bt(io,I9);var iF;function N9(r){iF=r.wasm.cwrap(ao,null,["number","number","number","number","number","number","number"])}function S9(r){let{backend:e,inputs:t,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:a,variance:i,offset:l,scale:u}=t,c=e.dataIdMap.get(s.dataId).id,p=e.dataIdMap.get(a.dataId).id,m=e.dataIdMap.get(i.dataId).id,f=l!=null?e.dataIdMap.get(l.dataId).id:0,d=u!=null?e.dataIdMap.get(u.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(y.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return iF(c,p,m,f,d,o,g),h}var aF={kernelName:ao,backendName:"wasm",setupFunc:N9,kernelFunc:S9};var lF;function T9(r){lF=r.wasm.cwrap(vs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function E9(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=N.computeConv2DInfo(o.shape,s.shape,l,c,u,m),g=bl[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedConv2D in the wasm backend.`);let x=n.dataIdMap.get(o.dataId).id,b=n.dataIdMap.get(s.dataId).id,w=h.outChannels,_=0;if(a!=null){let ae=n.dataIdMap.get(a.dataId);if(ae.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ae.shape.length}.`);if(ae.shape[0]!==w)throw new Error(`FusedConv2D bias shape (${ae.shape}) does not match the number of output channels (${w})`);_=ae.id}let k=h.filterHeight,E=h.filterWidth,S=h.padInfo.top,R=h.padInfo.right,F=h.padInfo.bottom,L=h.padInfo.left,G=h.dilationHeight,j=h.dilationWidth,U=h.strideHeight,Y=h.strideWidth,K=h.inChannels,Z=h.padInfo.type==="SAME"?1:0,te=h.batchSize,X=h.inHeight,re=h.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ie=n.makeOutput(h.outShape,"float32"),se=n.dataIdMap.get(ie.dataId).id,pe=i==null?0:n.dataIdMap.get(i.dataId).id;return lF(x,te,X,re,b,k,E,_,S,R,F,L,Z,G,j,U,Y,K,w,g,pe,d||0,se),ie}var uF={kernelName:vs,backendName:"wasm",setupFunc:T9,kernelFunc:E9};var cF;function A9(r){cF=r.wasm.cwrap(Cs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function D9(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=N.computeConv2DInfo(o.shape,s.shape,l,c,u,m,!0),g=bl[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let x=n.dataIdMap.get(o.dataId).id,b=n.dataIdMap.get(s.dataId).id,w=h.outChannels,_=0;if(a!=null){let ae=n.dataIdMap.get(a.dataId);if(ae.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ae.shape.length}.`);if(ae.shape[0]!==w)throw new Error(`FusedDepthwiseConv2D bias shape (${ae.shape}) does not match the number of output channels (${w})`);_=ae.id}let k=h.filterHeight,E=h.filterWidth,S=h.padInfo.top,R=h.padInfo.right,F=h.padInfo.bottom,L=h.padInfo.left,G=h.dilationHeight,j=h.dilationWidth,U=h.strideHeight,Y=h.strideWidth,K=h.inChannels,Z=h.padInfo.type==="SAME"?1:0,te=h.batchSize,X=h.inHeight,re=h.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ie=n.makeOutput(h.outShape,"float32"),se=n.dataIdMap.get(ie.dataId).id,pe=i==null?0:n.dataIdMap.get(i.dataId).id;return cF(x,te,X,re,b,k,E,_,S,R,F,L,Z,G,j,U,Y,K,w,g,pe,d||0,se),ie}var pF={kernelName:Cs,backendName:"wasm",setupFunc:A9,kernelFunc:D9};var mF;function $9(r){mF=r.wasm.cwrap(ci,null,["number","number","number","number","number","number","array","number"])}function R9(r){let{backend:e,inputs:t}=r,{params:n,indices:o}=t,[s,a,i,l]=ig.prepareAndValidate(n,o),u=e.makeOutput(s,n.dtype);if(a===0)return u;let c=o.shape,p=c[c.length-1],f=e.dataIdMap.get(n.dataId).id,h=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),x=e.dataIdMap.get(u.dataId).id;return mF(f,Bt[n.dtype],h,a,p,i,g,x),u}var fF={kernelName:ci,backendName:"wasm",setupFunc:$9,kernelFunc:R9};var dF;function F9(r){dF=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function O9(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,l=y.parseAxisParam(a,o.shape)[0],u=N.segment_util.collectGatherOpShapeInfo(o,s,l,i),c=Pr({inputs:{x:o},attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]},backend:e}),p=y.sizeFromShape(s.shape),m=Pr({inputs:{x:s},attrs:{shape:[u.batchSize,p/u.batchSize]},backend:e}),f=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize],d=e.makeOutput(f,o.dtype);if(y.sizeFromShape(o.shape)===0)return d;let h=c.shape.length-1,x=e.dataIdMap.get(c.dataId).id,w=e.dataIdMap.get(m.dataId).id,_=e.dataIdMap.get(d.dataId).id,k=new Uint8Array(new Int32Array(y.computeStrides(c.shape)).buffer),E=new Uint8Array(new Int32Array(y.computeStrides(f)).buffer);return dF(x,Bt[o.dtype],k,h,w,u.batchSize,E,_),e.disposeData(c.dataId),e.disposeData(m.dataId),d.shape=u.outputShape,d}var hF={kernelName:ms,backendName:"wasm",setupFunc:F9,kernelFunc:O9};var P9=!1,gF=bt(pi,P9,"bool");var M9=!1,xF=bt(lo,M9,"bool");var yF;function L9(r){yF=r.wasm.cwrap(uo,null,["number","number","number"])}function z9(r){let{inputs:{x:e},attrs:{alpha:t},backend:n}=r,o=n.dataIdMap.get(e.dataId).id,s=n.makeOutput(e.shape,e.dtype);if(y.sizeFromShape(e.shape)!==0){let a=n.dataIdMap.get(s.dataId).id;yF(o,t,a)}return s}var bF={kernelName:uo,backendName:"wasm",setupFunc:L9,kernelFunc:z9};var B9=!1,wF=bt(hi,B9,"bool");var V9=!1,_F=bt(gi,V9,"bool");var kF=At(co);var G9=!1,vF=bt(yi,G9,"bool");var CF;function j9(r){CF=r.wasm.cwrap(po,null,["number, number, number"])}function W9(r){let{backend:e,inputs:t,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:a}=t,l=e.dataIdMap.get(a.dataId).id,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Zo(a,o,e);if(f){let w=e.dataIdMap.get(c.dataId).id;u=c,l=w}let d=u.shape.length;N.assertAxesAreInnerMostDims("max",p,d);let[h,g]=N.computeOutAndReduceShapes(u.shape,p),x=y.sizeFromShape(g),b=e.makeOutput(h,a.dtype);if(y.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;CF(l,x,w)}if(f&&e.disposeData(c.dataId),s){let w=N.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var IF={kernelName:po,backendName:"wasm",setupFunc:j9,kernelFunc:W9};var U9=!1,NF=bt(mo,U9);var SF;function q9(r){SF=r.wasm.cwrap(fo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function H9(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=t,c=N.computePool2DInfo(o.shape,a,i,1,l,u),p=c.filterHeight,m=c.filterWidth,f=c.padInfo.top,d=c.padInfo.right,h=c.padInfo.bottom,g=c.padInfo.left,x=c.dilationHeight,b=c.dilationWidth,w=c.strideHeight,_=c.strideWidth,k=c.inChannels,E=c.outChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let S=n.makeOutput(c.outShape,"float32"),R=n.dataIdMap.get(S.dataId).id;return SF(s,o.shape[0],o.shape[1],o.shape[2],p,m,f,d,h,g,x,b,w,_,k,E,R),S}var TF={kernelName:fo,backendName:"wasm",setupFunc:q9,kernelFunc:H9};var EF;function K9(r){EF=r.wasm.cwrap(ho,null,["number, number, number"])}function X9(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Zo(a,o,e),d=p;if(f){let _=e.dataIdMap.get(c.dataId).id;_!==i&&(u=c,l=_,d=N.getInnerMostAxes(d.length,u.shape.length))}N.assertAxesAreInnerMostDims("mean",d,u.shape.length);let[h,g]=N.computeOutAndReduceShapes(u.shape,d),x=y.sizeFromShape(g),b=u;u.dtype!=="float32"&&(b=ic({backend:e,inputs:{x:u},attrs:{dtype:"float32"}}),l=e.dataIdMap.get(b.dataId).id);let w=e.makeOutput(h,"float32");if(y.sizeFromShape(u.shape)!==0){let _=e.dataIdMap.get(w.dataId).id;EF(l,x,_)}if(f&&e.disposeData(c.dataId),s){let _=N.expandShapeToKeepDim(w.shape,m);w.shape=_}return u.dtype!=="float32"&&e.disposeData(b.dataId),w}var AF={kernelName:ho,backendName:"wasm",setupFunc:K9,kernelFunc:X9};var DF;function Y9(r){DF=r.wasm.cwrap(go,null,["number, number, number"])}function Z9(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Zo(a,o,e);if(f){let w=e.dataIdMap.get(c.dataId).id;w!==i&&(u=c,l=w)}let d=u.shape.length;N.assertAxesAreInnerMostDims("min",p,d);let[h,g]=N.computeOutAndReduceShapes(u.shape,p),x=y.sizeFromShape(g),b=e.makeOutput(h,u.dtype);if(y.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;DF(l,x,w)}if(f&&e.disposeData(c.dataId),s){let w=N.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var $F={kernelName:go,backendName:"wasm",setupFunc:Y9,kernelFunc:Z9};var J9=!1,RF=bt(xo,J9);var Q9=!0,FF=bt(yo,Q9);var OF=At(fs);function Np(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),n=t[0],o=t[1],s=t[2],a=t[3];return r.wasm._free(e),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:a}}var PF;function eZ(r){PF=r.wasm.cwrap(_i,"number",["number","number","number","number","number"])}function tZ(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a}=n,{boxes:i,scores:l}=t,u=e.dataIdMap.get(i.dataId).id,c=e.dataIdMap.get(l.dataId).id,p=PF(u,c,s,o,a),{pSelectedIndices:m,selectedSize:f,pSelectedScores:d,pValidOutputs:h}=Np(e,p);return e.wasm._free(d),e.wasm._free(h),e.makeOutput([f],"int32",m)}var MF={kernelName:_i,backendName:"wasm",setupFunc:eZ,kernelFunc:tZ};var LF;function rZ(r){LF=r.wasm.cwrap(ki,"number",["number","number","number","number","number","bool"])}function nZ(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=n,{boxes:l,scores:u}=t,c=e.dataIdMap.get(l.dataId).id,p=e.dataIdMap.get(u.dataId).id,m=LF(c,p,s,o,a,i),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Np(e,m);e.wasm._free(h);let x=e.makeOutput([d],"int32",f),b=e.makeOutput([],"int32",g);return[x,b]}var zF={kernelName:ki,backendName:"wasm",setupFunc:rZ,kernelFunc:nZ};var BF;function oZ(r){BF=r.wasm.cwrap(vi,"number",["number","number","number","number","number","number"])}function sZ(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=n,{boxes:l,scores:u}=t,c=e.dataIdMap.get(l.dataId).id,p=e.dataIdMap.get(u.dataId).id,m=BF(c,p,s,o,a,i),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Np(e,m);e.wasm._free(g);let x=e.makeOutput([d],"int32",f),b=e.makeOutput([d],"float32",h);return[x,b]}var VF={kernelName:vi,backendName:"wasm",setupFunc:oZ,kernelFunc:sZ};var iZ=!1,GF=bt(wi,iZ,"bool");var jF;function aZ(r){jF=r.wasm.cwrap(bo,null,["number","number","number","number","number"])}function lZ(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,l=t.makeOutput([...o.shape,s],"int32"),u=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(o.dataId).id;return jF(p,s,a,i,u),l}var WF={kernelName:bo,backendName:"wasm",setupFunc:aZ,kernelFunc:lZ};function uZ(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(1),n}var UF={kernelName:ds,backendName:"wasm",kernelFunc:uZ};function cZ(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return px({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{y.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=e.map(l=>px({inputs:{input:l},backend:t,attrs:{dim:o}}));return p0({inputs:i,backend:t,attrs:{axis:o}})}var qF={kernelName:hs,backendName:"wasm",kernelFunc:cZ};var HF;function pZ(r){HF=r.wasm.cwrap(wo,null,["number","array","number","number","array","array","number","number"])}function mZ(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,constantValue:o}}=r,s=n.map((d,h)=>d[0]+e.shape[h]+d[1]),a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),l=t.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(e.shape).buffer),c=n.map(d=>d[0]),p=n.map(d=>d[1]),m=new Uint8Array(new Int32Array(c).buffer),f=new Uint8Array(new Int32Array(p).buffer);return HF(a,u,e.shape.length,Bt[e.dtype],m,f,o,l),i}var KF={kernelName:wo,backendName:"wasm",kernelFunc:mZ,setupFunc:pZ};var fZ=!1,XF=bt(_o,fZ);var YF;function dZ(r){YF=r.wasm.cwrap(ko,null,["number","number","number"])}function hZ(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,i=t.makeOutput(n.shape,"float32"),l=t.dataIdMap.get(i.dataId).id;return YF(s,a,l),i}var ZF={kernelName:ko,backendName:"wasm",setupFunc:dZ,kernelFunc:hZ};var JF;function gZ(r){JF=r.wasm.cwrap(Ci,null,["number","number","number","number"])}function xZ(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Zo(a,o,e),d=p;if(f){let w=e.dataIdMap.get(c.dataId).id;w!==i&&(u=c,l=w,d=N.getInnerMostAxes(d.length,u.shape.length))}N.assertAxesAreInnerMostDims("prod",d,u.shape.length);let[h,g]=N.computeOutAndReduceShapes(u.shape,d),x=y.sizeFromShape(g),b=e.makeOutput(h,u.dtype);if(y.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;JF(l,x,Bt[b.dtype],w)}if(f&&e.disposeData(c.dataId),s){let w=N.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var QF={kernelName:Ci,backendName:"wasm",setupFunc:gZ,kernelFunc:xZ};var yZ=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=xf(n,o,s,a),l=e.makeOutput([i.length],a);return e.typedArrayFromHeap(l).set(i),l},eO={kernelName:fa,backendName:"wasm",kernelFunc:yZ};var bZ=!0,tO=bt(no,bZ);var rO=At(vo);var nO=At(Io);var oO;function wZ(r){oO=r.wasm.cwrap(Co,null,["number","number","number","number","number","number","number","number","number","number"])}function _Z(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[l,u]=i,[c,p,m,f]=o.shape,d=[c,l,u,f],h=e.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=ic({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let x=h.id,b=e.makeOutput(d,"float32");if(y.sizeFromShape(o.shape)===0)return b;let w=e.dataIdMap.get(b.dataId).id;return oO(x,c,p,m,f,l,u,s?1:0,a?1:0,w),g!=null&&e.disposeData(g.dataId),b}var sO={kernelName:Co,backendName:"wasm",setupFunc:wZ,kernelFunc:_Z};var iO;function kZ(r){iO=r.wasm.cwrap(No,null,["number","array","number","array","number","number"])}function vZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=y.parseAxisParam(s,o.shape);if(o.shape.length===0)return sc({inputs:{x:o},backend:t});let i=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(a).buffer),p=new Uint8Array(new Int32Array(o.shape).buffer);iO(l,c,a.length,p,o.shape.length,u);let m=Pr({inputs:{x:i},attrs:{shape:o.shape},backend:t});return t.disposeData(i.dataId),m}var aO={kernelName:No,backendName:"wasm",kernelFunc:vZ,setupFunc:kZ};var lO;function CZ(r){lO=r.wasm.cwrap(Fi,null,["number","number","number","number","number","number","number","number","array","number","number"])}function IZ(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{radians:s,fillValue:a,center:i}=n,l=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(l.dataId).id,[p,m,f,d]=o.shape,[h,g]=N.getImageCenter(i,m,f),x=a===0,b=255,w=typeof a=="number"?[a,a,a,x?0:b]:[...a,b],_=new Uint8Array(new Int32Array(w).buffer);return lO(u,p,m,f,d,s,h,g,_,w.length,c),l}var uO={kernelName:Fi,backendName:"wasm",kernelFunc:IZ,setupFunc:CZ};var cO=At(So);var pO=At(To);var mO;function NZ(r){mO=r.wasm.cwrap(Ni,null,["number","number","number","number","number","number","array","number","number"])}function SZ(r){let{backend:e,inputs:t,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,i=e.makeOutput(a,s.dtype);if(y.sizeFromShape(a)===0)return i;let{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:m}=ag.calculateShapes(s,o,a),d=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(s.dataId).id,x=new Uint8Array(new Int32Array(p).buffer),b=e.dataIdMap.get(i.dataId).id;return mO(d,g,Bt[s.dtype],l,u,c,x,m,b),i}var fO={kernelName:Ni,backendName:"wasm",setupFunc:NZ,kernelFunc:SZ};var dO;function TZ(r){dO=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function EZ(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=t.makeOutput(o.shape,o.dtype),c=t.dataIdMap.get(u.dataId).id,p=n.shape.length,m=o.shape.length,f=p===0||p>1||m===1?1:y.sizeFromShape(o.shape.slice(1));return dO(a,i,l,f,c),u}var hO={kernelName:xs,backendName:"wasm",kernelFunc:EZ,setupFunc:TZ};var gO;function AZ(r){gO=r.wasm.cwrap(Ao,null,["number","number"])}function DZ(r){let{backend:e,inputs:{x:t}}=r,n=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(o.dataId).id;return y.sizeFromShape(o.shape)===0||gO(n,s),o}var xO={kernelName:"Sigmoid",backendName:"wasm",setupFunc:AZ,kernelFunc:DZ};var yO=At(Eo);function ac(r){let{inputs:{x:e},attrs:{begin:t,size:n},backend:o}=r,[s,a]=or.parseSliceParams(e,t,n),i=or.isSliceContinous(e.shape,s,a),l=o.readSync(e.dataId),u=o.makeOutput(a,e.dtype),c=y.computeStrides(e.shape),p=o.dataIdMap.get(u.dataId);if(i){let d=or.computeFlatOffset(s,c);return e.dtype==="string"?p.stringBytes=l.slice(d,d+y.sizeFromShape(a)):o.typedArrayFromHeap(u).set(l.subarray(d,d+y.sizeFromShape(a))),u}if(e.dtype==="string"){let d=yf(l,s,a,e.shape,e.dtype);return p.stringBytes=d,u}let m=o.typedArrayFromHeap(u),f=e.shape.length;if(f===2)$Z(l,c[0],m,s,a);else if(f===3)RZ(l,c[0],c[1],m,s,a);else if(f===4)FZ(l,c[0],c[1],c[2],m,s,a);else{let d=yf(l,s,a,e.shape,e.dtype);m.set(d)}return u}function $Z(r,e,t,n,o){let s=0,a=n[0],i=n[1],l=a+o[0];for(let u=a;u<l;u++){let c=u*e+i;t.set(r.subarray(c,c+o[1]),s),s+=o[1]}}function RZ(r,e,t,n,o,s){let a=0,i=o[0],l=o[1],u=o[2],c=i+s[0],p=l+s[1];for(let m=i;m<c;m++)for(let f=l;f<p;f++){let d=m*e+f*t+u;n.set(r.subarray(d,d+s[2]),a),a+=s[2]}}function FZ(r,e,t,n,o,s,a){let i=0,l=s[0],u=s[1],c=s[2],p=l+a[0],m=u+a[1],f=c+a[2],d=s[3];for(let h=l;h<p;h++)for(let g=u;g<m;g++)for(let x=c;x<f;x++){let b=h*e+g*t+x*n+d;o.set(r.subarray(b,b+a[3]),i),i+=a[3]}}var bO={kernelName:ys,backendName:"wasm",kernelFunc:ac};var wO;function OZ(r){wO=r.wasm.cwrap(Ro,null,["number","number","number","number"])}function PZ(r){let{backend:e,inputs:{logits:t},attrs:{dim:n}}=r,o=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),a=e.dataIdMap.get(s.dataId).id,i=t.shape[n],l=y.sizeFromShape(t.shape)/i;return y.sizeFromShape(s.shape)===0||wO(o,a,i,l),s}var _O={kernelName:Ro,backendName:"wasm",setupFunc:OZ,kernelFunc:PZ};function MZ(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=t,i=y.parseAxisParam(a,o.shape)[0],l=N.prepareSplitSize(o,s,i),u=new Array(o.shape.length).fill(0),c=o.shape.slice();return l.map(p=>{let m=[...c];m[i]=p;let f=ac({inputs:{x:o},attrs:{begin:u,size:m},backend:n});return u[i]+=p,f})}var kO={kernelName:bs,backendName:"wasm",kernelFunc:MZ};var vO=At(Do);var CO=At(ga);var LZ=!0,IO=bt(Fo,LZ);var NO;function zZ(r){NO=r.wasm.cwrap(Rn,null,["number","number","number"])}function BZ(r){let{backend:e,inputs:t,attrs:n}=r,{alpha:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=e.makeOutput(s.shape,s.dtype),l=e.dataIdMap.get(i.dataId).id;return NO(a,o,l),i}var SO={kernelName:Rn,backendName:"wasm",setupFunc:zZ,kernelFunc:BZ};var TO;function VZ(r){TO=r.wasm.cwrap(Di,null,["number","array","number","array","array","array","array","array","number","number"])}function GZ(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i}=n;i==null&&(i=new Array(s.length));let{beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n,f=N.slice_util.maskToAxes(c);if(f.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(c!==0&&p!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(c!==0&&m!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let d=o.shape.length-s.length,h=N.slice_util.maskToAxes(p),g=o.shape.slice();h.forEach(G=>{s[G]=0,a[G]=1,g.splice(G,0,1)});let x=Pr({inputs:{x:o},attrs:{shape:g},backend:e}),{begin:b,end:w,strides:_}=N.slice_util.getNormalizedAxes(x.shape,f,d,s,a,i,l,u,c);s=b,a=w,i=_;let k=N.slice_util.maskToAxes(m);k.forEach(G=>{a[G]=s[G]+1,i[G]=1});let E=N.slice_util.computeOutShape(s,a,i),S=E.filter((G,j)=>k.indexOf(j)===-1);if(i.every(G=>G===1)){let G=ac({inputs:{x:o},attrs:{begin:s,size:E},backend:e});e.disposeData(x.dataId);let j=Pr({inputs:{x:G},attrs:{shape:S},backend:e});return e.disposeData(G.dataId),j}let F=e.makeOutput(S,"float32");if(!S.some(G=>G===0)){let G=e.dataIdMap.get(x.dataId).id,j=new Uint8Array(new Int32Array(y.computeStrides(x.shape)).buffer),U=new Uint8Array(new Int32Array(s).buffer),Y=new Uint8Array(new Int32Array(a).buffer),K=new Uint8Array(new Int32Array(i).buffer),Z=new Uint8Array(new Int32Array(S).buffer),te=new Uint8Array(new Int32Array(y.computeStrides(S)).buffer),X=e.dataIdMap.get(F.dataId).id;TO(G,j,x.shape.length,U,Y,K,Z,te,S.length,X)}e.disposeData(x.dataId);let L=Pr({inputs:{x:F},attrs:{shape:S},backend:e});return e.disposeData(F.dataId),L}var EO={kernelName:Di,backendName:"wasm",setupFunc:VZ,kernelFunc:GZ};var jZ=!0,AO=bt(Oo,jZ);var DO;function WZ(r){DO=r.wasm.cwrap($o,null,["number, number, number"])}function UZ(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Zo(a,o,e),d=p;if(f){let w=e.dataIdMap.get(c.dataId).id;w!==i&&(u=c,l=w,d=N.getInnerMostAxes(d.length,u.shape.length))}N.assertAxesAreInnerMostDims("sum",d,u.shape.length);let[h,g]=N.computeOutAndReduceShapes(u.shape,d),x=y.sizeFromShape(g),b=e.makeOutput(h,u.dtype);if(y.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;DO(l,x,w)}if(f&&e.disposeData(c.dataId),s){let w=N.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var $O={kernelName:$o,backendName:"wasm",setupFunc:WZ,kernelFunc:UZ};var RO=At(Po);var FO;function qZ(r){FO=r.wasm.cwrap(yn,null,["number","array","number","array","number","number"])}function HZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,s=t.dataIdMap.get(o.dataId).id,{reps:a}=n,i=new Array(o.shape.length);for(let m=0;m<i.length;m++)i[m]=o.shape[m]*a[m];let l=new Uint8Array(new Int32Array(o.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),c=t.makeOutput(i,o.dtype),p=t.dataIdMap.get(c.dataId).id;return FO(s,l,o.shape.length,u,i.length,Bt[c.dtype],p),c}var OO={kernelName:yn,backendName:"wasm",setupFunc:qZ,kernelFunc:HZ};var PO;function KZ(r){PO=r.wasm.cwrap(Ri,null,["number","array","number","number","number","bool","number","number"])}var XZ=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{k:o,sorted:s}=t,a=e.dataIdMap.get(n.dataId).id,i=new Uint8Array(new Int32Array(n.shape).buffer),l=n.shape.slice();l[l.length-1]=o;let u=e.makeOutput(l,n.dtype),c=e.dataIdMap.get(u.dataId).id,p=e.makeOutput(l,"int32"),m=e.dataIdMap.get(p.dataId).id;return PO(a,i,n.shape.length,Bt[n.dtype],o,s,c,m),[u,p]},MO={kernelName:Ri,backendName:"wasm",setupFunc:KZ,kernelFunc:XZ};function YZ(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape[s],i=o.shape.length,l=new Array(i-1),u=0;for(let f=0;f<i;f++)f!==s&&(l[u++]=o.shape[f]);let c=new Array(a),p=new Array(i).fill(0),m=o.shape.slice();m[s]=1;for(let f=0;f<c.length;f++)p[s]=f,c[f]=ac({inputs:{x:o},attrs:{begin:p,size:m},backend:t});return c.map(({dataId:f,dtype:d})=>({dataId:f,dtype:d,shape:l}))}var LO={kernelName:ws,backendName:"wasm",kernelFunc:YZ};function ZZ(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(0),n}var zO={kernelName:_s,backendName:"wasm",kernelFunc:ZZ};var JZ=[wR,_R,vR,TR,AR,RR,FR,OR,MR,LR,BR,GR,jR,UR,HR,XR,ZR,JR,QR,eF,tF,nF,oF,sF,bR,aF,uF,pF,fF,hF,gF,xF,CR,bF,wF,_F,kF,vF,IF,NF,TF,AF,$F,RF,FF,OF,MF,zF,VF,GF,WF,UF,qF,KF,XF,ZF,QF,eO,tO,rO,nO,DR,sO,aO,uO,pO,cO,fO,hO,xO,yO,bO,_O,kO,vO,CO,IO,SO,EO,AO,$O,RO,OO,MO,NR,LO,zO];for(let r of JZ)tl(r);var f0=W();f0.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));f0.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(f0.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(r){return!1}});var y0=Dc(GO());var jO='var threadInfoStruct=0;var selfThreadId=0;var parentThreadId=0;var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:selfThreadId})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["DYNAMIC_BASE"]=e.data.DYNAMIC_BASE;Module["DYNAMICTOP_PTR"]=e.data.DYNAMICTOP_PTR;Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}Module=WasmBackendModuleThreadedSimd(Module);postMessage({"cmd":"loaded"})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;threadInfoStruct=e.data.threadInfoStruct;Module["__register_pthread_ptr"](threadInfoStruct,0,0);selfThreadId=e.data.selfThreadId;parentThreadId=e.data.parentThreadId;var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["dynCall_ii"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){Atomics.store(Module["HEAPU32"],threadInfoStruct+4>>2,ex instanceof Module["ExitStatus"]?ex.status:-2);Atomics.store(Module["HEAPU32"],threadInfoStruct+0>>2,1);Module["_emscripten_futex_wake"](threadInfoStruct+0,2147483647);if(!(ex instanceof Module["ExitStatus"]))throw ex}}}else if(e.data.cmd==="cancel"){if(threadInfoStruct){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(threadInfoStruct){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}';var UO=Dc(WO());var dx=class extends qs{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new Ja(this,On())}write(e,t,n){let o={id:this.dataIdNextNumber++};return this.move(o,e,t,n,1),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=y.now();return e(),{kernelMs:y.now()-t}}move(e,t,n,o,s){let a=this.dataIdNextNumber++;if(o==="string"){let c=t;this.dataIdMap.set(e,{id:a,stringBytes:c,shape:n,dtype:o,memoryOffset:null,refCount:s});return}let i=y.sizeFromShape(n),l=i*y.bytesPerElement(o),u=this.wasm._malloc(l);this.dataIdMap.set(e,{id:a,memoryOffset:u,shape:n,dtype:o,refCount:s}),this.wasm.tfjs.registerTensor(a,i,u),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,l),u)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:o,stringBytes:s}=this.dataIdMap.get(e);if(n==="string")return s;let a=this.wasm.HEAPU8.slice(t,t+y.sizeFromShape(o)*y.bytesPerElement(n));return QZ(a.buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let o;if(n==null)o=this.write(null,e,t);else{let s=this.dataIdNextNumber++;o={id:s},this.dataIdMap.set(o,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=y.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,a,n)}return{dataId:o,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let o=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),a=y.sizeFromShape(e);switch(t){case"float32":return new Float32Array(o,s,a);case"int32":return new Int32Array(o,s,a);case"bool":return new Uint8Array(o,s,a);default:throw new Error(`Unknown dtype ${t}`)}}};function eJ(r){return(e,t)=>(y.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,e).then(s=>{t(s.instance)})})}),{})}function qO(r,e,t){if(hx!=null)return hx;let n="tfjs-backend-wasm.wasm";return r&&e?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),zf!=null&&zf[n]!=null?zf[n]:t+n}async function HO(){let[r,e]=await Promise.all([W().getAsync("WASM_HAS_SIMD_SUPPORT"),W().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,n)=>{let o={};o.locateFile=(l,u)=>{if(l.endsWith(".worker.js")){let c=jO,p=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(p)}return l.endsWith(".wasm")?qO(r,e,Bf!=null?Bf:u):u+l},b0&&(o.instantiateWasm=eJ(qO(r,e,Bf!=null?Bf:"")));let s;e&&r&&hx==null?(s=y0.default(o),s.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+y0.default.toString()],{type:"text/javascript"})):s=UO.default(o);let a=null;s.tfjs={init:s.cwrap("init",null,[]),registerTensor:s.cwrap("register_tensor",null,["number","number","number"]),disposeData:s.cwrap("dispose_data",a,["number"]),dispose:s.cwrap("dispose",a,[])};let i=!1;s.onRuntimeInitialized=()=>{i=!0,Vf=!1,t({wasm:s})},s.onAbort=()=>{if(i||Vf)return;Vf=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})}})}function QZ(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var tJ=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],hx=null,Bf=null,zf={},Vf=!1,b0=!1;function rJ(r,e=!1){if(pg("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Vf)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");hx=r,b0=e}function nJ(r,e=!1){if(Vf)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")Bf=r;else{zf=r;let t=tJ.filter(n=>zf[n]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}b0=e}var w0="3.1.0";var oJ=2;bu("wasm",async()=>{let{wasm:r}=await HO();return new dx(r)},oJ);O().prototype.abs=function(){return this.throwIfDisposed(),Et(this)};O().prototype.acos=function(){return this.throwIfDisposed(),Am(this)};O().prototype.acosh=function(){return this.throwIfDisposed(),Dm(this)};O().prototype.add=function(r){return this.throwIfDisposed(),Q(this,r)};O().prototype.all=function(r,e){return this.throwIfDisposed(),_u(this,r,e)};O().prototype.any=function(r,e){return this.throwIfDisposed(),il(this,r,e)};O().prototype.argMax=function(r){return this.throwIfDisposed(),al(this,r)};O().prototype.argMin=function(r){return this.throwIfDisposed(),$m(this,r)};O().prototype.asScalar=function(){return this.throwIfDisposed(),A(this.size===1,()=>"The array must have only 1 element."),z(this,[])};O().prototype.asType=function(r){return this.throwIfDisposed(),ne(this,r)};O().prototype.as1D=function(){return this.throwIfDisposed(),z(this,[this.size])};O().prototype.as2D=function(r,e){return this.throwIfDisposed(),z(this,[r,e])};O().prototype.as3D=function(r,e,t){return this.throwIfDisposed(),z(this,[r,e,t])};O().prototype.as4D=function(r,e,t,n){return this.throwIfDisposed(),z(this,[r,e,t,n])};O().prototype.as5D=function(r,e,t,n,o){return this.throwIfDisposed(),z(this,[r,e,t,n,o])};O().prototype.asin=function(){return this.throwIfDisposed(),Rm(this)};O().prototype.asinh=function(){return this.throwIfDisposed(),Fm(this)};O().prototype.atan=function(){return this.throwIfDisposed(),Om(this)};O().prototype.atan2=function(r){return this.throwIfDisposed(),Pm(this,r)};O().prototype.atanh=function(){return this.throwIfDisposed(),Mm(this)};O().prototype.avgPool=function(r,e,t,n){return this.throwIfDisposed(),va(this,r,e,t,n)};O().prototype.batchToSpaceND=function(r,e){return this.throwIfDisposed(),Ca(this,r,e)};O().prototype.batchNorm=function(r,e,t,n,o){return this.throwIfDisposed(),zo(this,r,e,t,n,o)};O().prototype.broadcastTo=function(r){return this.throwIfDisposed(),ll(this,r)};O().prototype.cast=function(r){return this.throwIfDisposed(),ne(this,r)};O().prototype.ceil=function(){return this.throwIfDisposed(),zm(this)};O().prototype.clipByValue=function(r,e){return this.throwIfDisposed(),sr(this,r,e)};O().prototype.concat=function(r,e){return this.throwIfDisposed(),r instanceof Ve&&(r=[r]),Qe([this,...r],e)};O().prototype.conv1d=function(r,e,t,n,o,s){return this.throwIfDisposed(),Cu(this,r,e,t,n,o,s)};O().prototype.conv2dTranspose=function(r,e,t,n,o){return this.throwIfDisposed(),Iu(this,r,e,t,n,o)};O().prototype.conv2d=function(r,e,t,n,o,s){return this.throwIfDisposed(),Ur(this,r,e,t,n,o,s)};O().prototype.cos=function(){return this.throwIfDisposed(),Ia(this)};O().prototype.cosh=function(){return this.throwIfDisposed(),Nu(this)};O().prototype.cumsum=function(r,e,t){return this.throwIfDisposed(),Su(this,r,e,t)};O().prototype.depthToSpace=function(r,e){return this.throwIfDisposed(),Vm(this,r,e)};O().prototype.depthwiseConv2d=function(r,e,t,n,o,s){return this.throwIfDisposed(),Ns(this,r,e,t,n,o,s)};O().prototype.dilation2d=function(r,e,t,n,o){return this.throwIfDisposed(),Gm(this,r,e,t,n,o)};O().prototype.divNoNan=function(r){return this.throwIfDisposed(),jm(this,r)};O().prototype.div=function(r){return this.throwIfDisposed(),de(this,r)};O().prototype.dot=function(r){return this.throwIfDisposed(),Rw(this,r)};O().prototype.elu=function(){return this.throwIfDisposed(),Ss(this)};O().prototype.equal=function(r){return this.throwIfDisposed(),wn(this,r)};O().prototype.erf=function(){return this.throwIfDisposed(),Wm(this)};O().prototype.exp=function(){return this.throwIfDisposed(),Yt(this)};O().prototype.expandDims=function(r){return this.throwIfDisposed(),ir(this,r)};O().prototype.expm1=function(){return this.throwIfDisposed(),Um(this)};O().prototype.fft=function(){return this.throwIfDisposed(),Ra(this)};O().prototype.flatten=function(){return this.throwIfDisposed(),z(this,[this.size])};O().prototype.floor=function(){return this.throwIfDisposed(),Ts(this)};O().prototype.floorDiv=function(r){return this.throwIfDisposed(),wu(this,r)};O().prototype.gather=function(r,e){return this.throwIfDisposed(),Bo(this,r,e)};O().prototype.greaterEqual=function(r){return this.throwIfDisposed(),tn(this,r)};O().prototype.greater=function(r){return this.throwIfDisposed(),er(this,r)};O().prototype.ifft=function(){return this.throwIfDisposed(),Bi(this)};O().prototype.irfft=function(){return this.throwIfDisposed(),Bu(this)};O().prototype.isFinite=function(){return this.throwIfDisposed(),Fw(this)};O().prototype.isInf=function(){return this.throwIfDisposed(),Ow(this)};O().prototype.isNaN=function(){return this.throwIfDisposed(),Pw(this)};O().prototype.leakyRelu=function(r){return this.throwIfDisposed(),Sa(this,r)};O().prototype.lessEqual=function(r){return this.throwIfDisposed(),Ln(this,r)};O().prototype.less=function(r){return this.throwIfDisposed(),Eu(this,r)};O().prototype.localResponseNormalization=function(r,e,t,n){return this.throwIfDisposed(),qm(this,r,e,t,n)};O().prototype.logSigmoid=function(){return this.throwIfDisposed(),Lw(this)};O().prototype.logSoftmax=function(r){return this.throwIfDisposed(),Du(this,r)};O().prototype.logSumExp=function(r,e){return this.throwIfDisposed(),Km(this,r,e)};O().prototype.log=function(){return this.throwIfDisposed(),ar(this)};O().prototype.log1p=function(){return this.throwIfDisposed(),Au(this)};O().prototype.logicalAnd=function(r){return this.throwIfDisposed(),dr(this,r)};O().prototype.logicalNot=function(){return this.throwIfDisposed(),Ta(this)};O().prototype.logicalOr=function(r){return this.throwIfDisposed(),$u(this,r)};O().prototype.logicalXor=function(r){return this.throwIfDisposed(),Gw(this,r)};O().prototype.matMul=function(r,e,t){return this.throwIfDisposed(),je(this,r,e,t)};O().prototype.maxPool=function(r,e,t,n){return this.throwIfDisposed(),Ea(this,r,e,t,n)};O().prototype.max=function(r,e){return this.throwIfDisposed(),lr(this,r,e)};O().prototype.maximum=function(r){return this.throwIfDisposed(),Hr(this,r)};O().prototype.mean=function(r,e){return this.throwIfDisposed(),gt(this,r,e)};O().prototype.min=function(r,e){return this.throwIfDisposed(),zi(this,r,e)};O().prototype.minimum=function(r){return this.throwIfDisposed(),As(this,r)};O().prototype.mirrorPad=function(r,e){return this.throwIfDisposed(),Ym(this,r,e)};O().prototype.mod=function(r){return this.throwIfDisposed(),Zm(this,r)};O().prototype.mul=function(r){return this.throwIfDisposed(),P(this,r)};O().prototype.neg=function(){return this.throwIfDisposed(),Ue(this)};O().prototype.norm=function(r,e,t){return this.throwIfDisposed(),ju(this,r,e,t)};O().prototype.notEqual=function(r){return this.throwIfDisposed(),Go(this,r)};O().prototype.oneHot=function(r,e=1,t=0){return this.throwIfDisposed(),Is(this,r,e,t)};O().prototype.onesLike=function(){return this.throwIfDisposed(),tr(this)};O().prototype.pad=function(r,e){return this.throwIfDisposed(),Rr(this,r,e)};O().prototype.pool=function(r,e,t,n,o){return this.throwIfDisposed(),Uw(this,r,e,t,n,o)};O().prototype.pow=function(r){return this.throwIfDisposed(),Fr(this,r)};O().prototype.prelu=function(r){return this.throwIfDisposed(),Da(this,r)};O().prototype.prod=function(r,e){return this.throwIfDisposed(),Ru(this,r,e)};O().prototype.reciprocal=function(){return this.throwIfDisposed(),Jm(this)};O().prototype.relu=function(){return this.throwIfDisposed(),Nr(this)};O().prototype.relu6=function(){return this.throwIfDisposed(),Ou(this)};O().prototype.reshapeAs=function(r){return this.throwIfDisposed(),z(this,r.shape)};O().prototype.reshape=function(r){return this.throwIfDisposed(),z(this,r)};O().prototype.resizeBilinear=function(r,e,t){return this.throwIfDisposed(),Ig(this,r,e,t)};O().prototype.resizeNearestNeighbor=function(r,e,t){return this.throwIfDisposed(),Ng(this,r,e,t)};O().prototype.reverse=function(r){return this.throwIfDisposed(),Kt(this,r)};O().prototype.rfft=function(){return this.throwIfDisposed(),Fa(this)};O().prototype.round=function(){return this.throwIfDisposed(),Qm(this)};O().prototype.rsqrt=function(){return this.throwIfDisposed(),Pu(this)};O().prototype.selu=function(){return this.throwIfDisposed(),Mu(this)};O().prototype.separableConv2d=function(r,e,t,n,o,s){return this.throwIfDisposed(),ef(this,r,e,t,n,o,s)};O().prototype.sigmoid=function(){return this.throwIfDisposed(),Wr(this)};O().prototype.sign=function(){return this.throwIfDisposed(),tf(this)};O().prototype.sin=function(){return this.throwIfDisposed(),Lu(this)};O().prototype.sinh=function(){return this.throwIfDisposed(),zu(this)};O().prototype.slice=function(r,e){return this.throwIfDisposed(),Fe(this,r,e)};O().prototype.softmax=function(r){return this.throwIfDisposed(),$a(this,r)};O().prototype.softplus=function(){return this.throwIfDisposed(),Es(this)};O().prototype.spaceToBatchND=function(r,e){return this.throwIfDisposed(),Aa(this,r,e)};O().prototype.split=function(r,e){return this.throwIfDisposed(),ur(this,r,e)};O().prototype.sqrt=function(){return this.throwIfDisposed(),yt(this)};O().prototype.square=function(){return this.throwIfDisposed(),Pe(this)};O().prototype.squaredDifference=function(r){return this.throwIfDisposed(),Vu(this,r)};O().prototype.squeeze=function(r){return this.throwIfDisposed(),_n(this,r)};O().prototype.stack=function(r,e){this.throwIfDisposed();let t=r instanceof Ve?[this,r]:[this,...r];return Vt(t,e)};O().prototype.step=function(r){return this.throwIfDisposed(),$s(this,r)};O().prototype.stridedSlice=function(r,e,t,n,o,s,a,i){return this.throwIfDisposed(),of(this,r,e,t,n,o,s,a,i)};O().prototype.sub=function(r){return this.throwIfDisposed(),ue(this,r)};O().prototype.sum=function(r,e){return this.throwIfDisposed(),ye(this,r,e)};O().prototype.tan=function(){return this.throwIfDisposed(),sf(this)};O().prototype.tanh=function(){return this.throwIfDisposed(),Li(this)};O().prototype.tile=function(r){return this.throwIfDisposed(),Mn(this,r)};O().prototype.toBool=function(){return this.throwIfDisposed(),ne(this,"bool")};O().prototype.toFloat=function(){return this.throwIfDisposed(),ne(this,"float32")};O().prototype.toInt=function(){return this.throwIfDisposed(),ne(this,"int32")};O().prototype.topk=function(r,e){return this.throwIfDisposed(),af(this,r,e)};O().prototype.transpose=function(r){return this.throwIfDisposed(),We(this,r)};O().prototype.unique=function(r){return this.throwIfDisposed(),np(this,r)};O().prototype.unsortedSegmentSum=function(r,e){return this.throwIfDisposed(),lf(this,r,e)};O().prototype.unstack=function(r){return this.throwIfDisposed(),cr(this,r)};O().prototype.where=function(r,e){return this.throwIfDisposed(),Rt(r,this,e)};O().prototype.zerosLike=function(){return this.throwIfDisposed(),Ie(this)};var gx={kernelName:us,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,$s(ne(t,"float32"),-1))}}};var KO={kernelName:Xs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Pe(ne(t,"float32")),o=yt(ue(le(1),n));return Ue(de(r,o))}}}};var XO={kernelName:Ys,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=yt(ue(Pe(ne(t,"float32")),1));return de(r,n)}}}};var YO={kernelName:xn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=r,l=It(t.shape,o);return l.length>0&&(i=ye(i,l)),z(i,t.shape)},b:()=>{let i=r,l=It(n.shape,o);return l.length>0&&(i=ye(i,l)),z(i,n.shape)}}}};var ZO={kernelName:Hn,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((n,o)=>{t[o]=()=>r.clone()}),t}};var JO={kernelName:Kn,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Ie(t)}}};var QO={kernelName:na,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Ie(t)}}};var eP={kernelName:Zs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>de(r,yt(ue(le(1),Pe(ne(t,"float32")))))}}};var tP={kernelName:Js,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=yt(Q(le(1),Pe(ne(t,"float32"))));return de(r,n)}}}};var rP={kernelName:ti,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=Q(Pe(t),Pe(n)),l=P(r,de(n,i)),u=It(t.shape,o);return u.length>0&&(l=ye(l,u)),z(l,t.shape)},b:()=>{let i=Q(Pe(t),Pe(n)),l=Ue(P(r,de(t,i))),u=It(n.shape,o);return u.length>0&&(l=ye(l,u)),z(l,n.shape)}}}};var nP={kernelName:Qs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>de(r,Q(Pe(ne(t,"float32")),1))}}};var oP={kernelName:ei,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>de(r,ue(le(1),Pe(ne(t,"float32"))))}}};function sJ(r,e,t,n,o,s){let a=v(r,"dy","avgPool3dGrad"),i=v(e,"input","avgPool3dGrad"),l=a,u=i,c=!1;i.rank===4&&(c=!0,l=z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),A(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),s!=null&&A(st(o),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${o}.`);let p={dy:l,input:u},m={filterSize:t,strides:n,pad:o,dimRoundingMode:s},f=D.runKernel(Wl,p,m);return c?z(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}var sP=T({avgPool3dGrad_:sJ});var iP={kernelName:oa,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a,dimRoundingMode:i}=t;return{x:()=>sP(r,n,o,s,a,i)}}};function iJ(r,e,t,n,o){let s=v(r,"dy","avgPoolGrad"),a=v(e,"input","avgPoolGrad");A(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,l=s,u=!1;a.rank===3&&(u=!0,i=z(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=z(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),A(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let c={dy:l,input:i},p={filterSize:t,strides:n,pad:o},m=D.runKernel(jl,c,p);return u?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var aP=T({avgPoolGrad_:iJ});var lP={kernelName:Xn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a}=t;return{x:()=>aP(r,n,o,s,a)}}};var uP={kernelName:Yn,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[n,o]=e,{transposeA:s,transposeB:a}=t;return!s&&!a?{a:()=>je(r,o,!1,!0),b:()=>je(n,r,!0,!1)}:!s&&a?{a:()=>je(r,o,!1,!1),b:()=>je(r,n,!0,!1)}:s&&!a?{a:()=>je(o,r,!1,!0),b:()=>je(n,r,!1,!1)}:{a:()=>je(o,r,!0,!0),b:()=>je(r,n,!0,!0)}}};var cP={kernelName:sa,gradFunc:(r,e,t)=>{let{blockShape:n,crops:o}=t;return{x:()=>Aa(r,n,o)}}};var pP={kernelName:zb,gradFunc:(r,e,t)=>{let n=t,o=n.inputShape,s=n.shape,a=Array.from(s);for(let l=o.length-1;l>=0;l--)if(o[l]===s[l])a[l]=1;else if(o[l]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let i=[];for(let l=0;l<a.length;l++)a[l]>1&&i.push(l);return{x:()=>ye(r,i,!0)}}};var mP={kernelName:An,gradFunc:r=>({x:()=>r.clone()})};var fP={kernelName:Zn,gradFunc:r=>({x:()=>Ie(r)})};var dP={kernelName:Dn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{clipValueMin:o,clipValueMax:s}=t;return{x:()=>Rt(dr(tn(n,o),Ln(n,s)),r,Ie(r))}}};var hP={kernelName:ia,inputsToSave:["x"],gradFunc:gx.gradFunc};var gP={kernelName:cs,saveAllInputs:!0,gradFunc:(r,e,t)=>{let n=e.map(l=>l.shape),{axis:o}=t,s=Qt(o,e[0].shape)[0],a=n.map(l=>l[s]);return ur(r,a,s).map(l=>()=>l)}};var xP={kernelName:Jn,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{dilations:s,strides:a,pad:i,dataFormat:l}=t;return A(Pn(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Zc(n.shape,r,o,a,i,l),filter:()=>op(n,r,o.shape,a,i,l)}}};var yP={kernelName:Qn,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{strides:s,pad:a,dataFormat:i,dimRoundingMode:l}=t;return{dy:()=>Ur(r,o,s,a,i,1,l),filter:()=>op(r,n,o.shape,s,a,i,l)}}};function aJ(r,e,t,n,o){let s=r;r.rank===4&&(s=z(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=e;a.rank===4&&(a=z(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),A(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),A(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),A(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),A(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),A(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);let i={x:s,dy:a},l={strides:n,pad:o,filterShape:t};return D.runKernel(Kl,i,l)}var bP=T({conv3DBackpropFilter_:aJ});var wP={kernelName:aa,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s}=t;A(Pn(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[a,i]=e;return{x:()=>fg(a.shape,r,i,o,s),filter:()=>bP(a,r,i.shape,o,s)}}};var _P={kernelName:eo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(Ue(Lu(ne(t,"float32"))),r)}}};var kP={kernelName:ri,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(zu(ne(t,"float32")),r)}}};var vP={kernelName:to,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o,exclusive:s,reverse:a}=t;return{x:()=>{let i=Vw([o],n.rank),l=Su(r,o,s,!a);return i!=null&&(l=We(l,i)),l}}}};var CP={kernelName:ro,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:a}=t,i=n==null?[1,1]:n;A(Pn(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,u]=e;return A(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),A(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),A(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),A(br(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),a!=null&&A(st(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),{x:()=>kg(l.shape,r,u,o,s,n,a),filter:()=>_g(l,r,u.shape,o,s,n,a)}}};var IP={kernelName:la,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,s={x:n,filter:o,dy:r},a={x:n,filter:o,dy:r};return{x:()=>D.runKernel(Pc,s,t),filter:()=>D.runKernel(Mc,a,t)}}};var NP={kernelName:si,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,n={dy:r,y:t};return{x:()=>D.runKernel(eu,n)}}};var SP={kernelName:ii,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=P(Yt(Ue(Pe(t))),2/Math.sqrt(Math.PI));return{x:()=>P(r,n)}}};var TP={kernelName:oo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,t)}}};var EP={kernelName:ps,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>z(r,t.shape)}}};var AP={kernelName:li,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,Yt(t))}}};var DP={kernelName:so,gradFunc:r=>({x:()=>Ie(r)})};var $P={kernelName:io,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=de(r,ne(n,"float32")),l=It(t.shape,o);return l.length>0?z(ye(i,l),t.shape):i},b:()=>{let i=P(r,ne(t,"float32")),l=It(n.shape,o);l.length>0&&(i=z(ye(i,l),n.shape));let u=Pe(n);return Ue(de(i,ne(u,"float32")))}}}};var RP={kernelName:ao,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:n}=t,[o,s,a,i]=e,l=i==null?le(1):i,u=It(s.shape,o.shape),c=[];if(s.rank===1){for(let _=0;_<o.shape.length-1;++_)c.push(o.shape[_]);c.push(1)}let p=ue(o,s),m=P(r,l),f=Pu(Q(a,le(n))),d=P(P(P(f,f),f),le(-.5));return{x:()=>s.rank===1?z(P(P(r,Mn(z(f,[1,1,1,s.shape[0]]),c)),l),o.shape):z(P(P(r,f),l),o.shape),mean:()=>{let _=P(P(f,le(-1)),m);return s.rank===1&&(_=ye(_,u)),z(_,s.shape)},variance:()=>{let _=P(P(d,p),m);return s.rank===1&&(_=ye(_,u)),z(_,s.shape)},scale:()=>{let _=P(p,f),k=P(r,_);return s.rank===1&&(k=ye(k,u)),z(k,s.shape)},offset:()=>{let _=r;return s.rank===1&&(_=ye(_,u)),z(_,s.shape)}}}};var PP={kernelName:ms,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[n,o]=e,{axis:s}=t,a=Qt(s,n.shape)[0];return{x:()=>{let l=n.shape,u=o.size,c=l.slice(0,a),p=c.length,m=l.slice(s,l.length).slice(1),f=m.length,d=FP(0,p),h=FP(p+1,p+1+f),g=OP([c,[u],m]),x=z(r,g),b=z(o,[u]),w=OP([[p],d,h]),_=We(x,w),k=lf(_,b,n.shape[a]),E=Hm(w);return k=We(k,E),k},indices:()=>o}}};function FP(r,e){let t=[];for(let n=r;n<e;++n)t.push(n);return t}function OP(r){let e=[];for(let t=0;t<r.length;++t)for(let n=0;n<r[t].length;++n)e.push(r[t][n]);return e}var MP={kernelName:lo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>Ie(t),b:()=>Ie(n)}}};var LP={kernelName:$n,gradFunc:r=>({x:()=>ne(r,"float32")})};var zP={kernelName:mi,gradFunc:r=>({x:()=>Ie(r)})};var BP={kernelName:fi,gradFunc:r=>({x:()=>Ie(r)})};var VP={kernelName:di,gradFunc:r=>({x:()=>Ie(r)})};var GP={kernelName:uo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{alpha:o}=t,s=er(n,0);return{x:()=>Rt(s,r,P(r,o))}}};var jP={kernelName:xi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>de(r,Q(t,1))}}};var WP={kernelName:co,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>de(r,ne(t,"float32"))}}};var UP={kernelName:Bb,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t;return{logits:()=>{let s=!0,a=Yt(n);return ue(r,P(ye(r,o,s),a))}}}};function lJ(r,e,t,n=5,o=1,s=1,a=.5){let i={x:r,y:e,dy:t},l={depthRadius:n,bias:o,alpha:s,beta:a};return D.runKernel(su,i,l)}var qP=T({localResponseNormalizationBackprop_:lJ});var HP={kernelName:ca,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{depthRadius:s,bias:a,alpha:i,beta:l}=t;return{x:()=>qP(n,o,r,s,a,i,l)}}};function xx(r,e,t,n){return e.rank<t.rank&&(e=z(e,Vo(e.shape,n))),r.rank<t.rank&&(r=z(r,Vo(r.shape,n))),{x:()=>P(r,ne(wn(t,e),r.dtype))}}var _0={kernelName:po,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{reductionIndices:o}=n,s=e[0],a=e[1],i=Qt(o,s.shape),l=xx(r,a,s,i);return{x:()=>l.x()}}};var KP={kernelName:mo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>P(r,ne(tn(t,n),"float32")),b:()=>P(r,ne(Eu(t,n),"float32"))}}};function uJ(r,e,t,n,o,s,a){let i=v(r,"dy","maxPool3dGrad"),l=v(e,"input","maxPool3dGrad"),u=v(t,"output","maxPool3dGrad"),c=i,p=l,m=u,f=!1;l.rank===4&&(f=!0,c=z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=z(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),m=z(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),A(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),A(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),A(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),a!=null&&A(st(s),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);let d={dy:c,input:p,output:m},h={filterSize:n,strides:o,pad:s,dimRoundingMode:a},g=D.runKernel(au,d,h);return f?z(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var XP=T({maxPool3dGrad_:uJ});var YP={kernelName:pa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=t;return{x:()=>XP(r,n,o,s,a,i,l)}}};function cJ(r,e,t,n,o,s,a){let i=v(r,"dy","maxPoolGrad"),l=v(e,"input","maxPoolGrad"),u=v(t,"output","maxPoolGrad");A(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),A(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),A(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),a!=null&&A(st(s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);let c={dy:i,input:l,output:u},p={filterSize:n,strides:o,pad:s,dimRoundingMode:a};return D.runKernel(iu,c,p)}var ZP=T({maxPoolGrad_:cJ});var JP={kernelName:fo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i}=t;return{x:()=>ZP(r,n,o,s,a,i)}}};var QP={kernelName:ho,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=Qt(o,n.shape),i=Bw(n.shape,s)[1],l=ft(i);return{x:()=>{let c=n.shape.slice();s.forEach(f=>{c[f]=1});let p=z(r,c);return de(P(p,Ir(n.shape,"float32")),l)}}}};var eM={kernelName:go,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{axis:o}=n,[s,a]=e,i=Qt(o,s.shape),l=xx(r,a,s,i);return{x:()=>l.x()}}};var tM={kernelName:xo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>P(r,ne(Ln(t,n),"float32")),b:()=>P(r,ne(er(t,n),"float32"))}}};var rM={kernelName:ma,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Fe(r,s,n.shape)}}};var nM={kernelName:bi,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=It(t.shape,o);return i.length>0?z(ye(r,i),t.shape):r},b:()=>{let i=P(r,Ue(Ts(de(t,n)))),l=It(n.shape,o);return l.length>0?z(ye(i,l),n.shape):i}}}};var oM={kernelName:yo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=P(r,ne(n,"float32")),l=It(t.shape,o);return l.length>0?z(ye(i,l),t.shape):i},b:()=>{let i=P(r,ne(t,"float32")),l=It(n.shape,o);return l.length>0?z(ye(i,l),n.shape):i}}}};var sM={kernelName:fs,gradFunc:r=>({x:()=>Ue(r)})};var iM={kernelName:bo,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>xt(t.shape,"float32")}}};var aM={kernelName:ds,gradFunc:r=>({x:()=>Ie(r)})};var lM={kernelName:hs,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:n}=t;return cr(r,n).map(s=>()=>s)}};var k0={kernelName:wo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Fe(r,s,n.shape)}}};var uM={kernelName:_o,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,n,o]=e,s=t,a=n,i=ze(s.shape,a.shape);return{a:()=>{let c=ne(a,"float32"),p=P(r,P(c,Fr(s,ue(c,le(1))))),m=It(s.shape,i);return m.length>0&&(p=ye(p,m)),z(p,s.shape)},b:()=>{let c=er(s,0),p=Rt(c,ar(s),Ie(s)),m=P(r,P(o,p)),f=It(a.shape,i);return f.length>0&&(m=ye(m,f)),z(m,a.shape)}}}};var cM={kernelName:ko,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,n]=e,o=er(t,0);return{x:()=>Rt(o,r,P(r,n)),alpha:()=>{let s=Rt(o,Ie(r),P(r,t)),a=It(n.shape,r.shape);return a.length>0&&(s=ye(s,a)),z(s,n.shape)}}}};var pM={kernelName:no,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=de(r,ne(n,"float32")),l=It(t.shape,o);return l.length>0?z(ye(i,l),t.shape):i},b:()=>{let i=P(r,ne(t,"float32")),l=It(n.shape,o);l.length>0&&(i=z(ye(i,l),n.shape));let u=Pe(n);return Ue(de(i,ne(u,"float32")))}}}};var mM={kernelName:Ii,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>de(r,Ue(Pe(t)))}}};var fM={kernelName:Io,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=P(Ln(t,6),$s(t));return{x:()=>P(r,ne(n,"float32"))}}};var dM={kernelName:vo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,ne($s(t),"float32"))}}};var hM={kernelName:gs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(r,t.shape)}}};var gM={kernelName:Co,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(mu,o,t)}}};var xM={kernelName:da,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(pu,o,t)}}};var yM={kernelName:No,gradFunc:(r,e,t)=>{let{dims:n}=t,o=Qt(n,r.shape);return{x:()=>Kt(r,o)}}};var bM={kernelName:So,gradFunc:r=>({x:()=>Ie(r)})};var wM={kernelName:To,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Ue(de(r,P(Fr(t,1.5),2)))}}};var _M={kernelName:xs,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>ne(Ie(t),"float32"),t:()=>P(r,ne(t,r.dtype)),e:()=>P(r,ne(Ta(t),r.dtype))}}};var kM={kernelName:Si,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=er(t,le(0)),o=le(m_),s=le(f_),a=P(r,s),i=P(P(r,o),Yt(ne(t,"float32")));return Rt(n,a,i)}}}};var vM={kernelName:Ao,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,P(t,ue(le(1),t)))}}};var CM={kernelName:Ei,gradFunc:r=>({x:()=>Ie(r)})};var IM={kernelName:Eo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(Ia(ne(t,"float32")),r)}}};var NM={kernelName:Ti,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(Nu(ne(t,"float32")),r)}}};var SM={kernelName:ys,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{begin:o,size:s}=t,a=n.shape,[i,l]=hw(n,o,s),u=[];for(let c=0;c<r.rank;c++)u.push([i[c],a[c]-i[c]-l[c]]);return{x:()=>Rr(r,u)}}};var TM={kernelName:Ro,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{dim:o}=t,s=!0,a=P(r,n);return{logits:()=>ue(a,P(ye(a,[o],s),n))}}};var EM={kernelName:Ai,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,Wr(t))}}};var v0={kernelName:ha,gradFunc:(r,e,t)=>{let{blockShape:n,paddings:o}=t;return{x:()=>Ca(r,n,o)}}};var C0={kernelName:bs,gradFunc:(r,e,t)=>{let{axis:n}=t;return{x:()=>Qe(r,n)}}};var AM={kernelName:Do,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>de(r,P(yt(ne(t,"float32")),2))}}};var DM={kernelName:ga,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,P(ne(t,"float32"),2))}}};var $M={kernelName:Fo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=le(2);return{a:()=>P(r,P(o,ue(t,n))),b:()=>P(r,P(o,ue(n,t)))}}};var RM={kernelName:Rn,gradFunc:r=>({x:()=>Ie(r)})};var FM={kernelName:Oo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=r,l=It(t.shape,o);return l.length>0&&(i=ye(i,l)),z(i,t.shape)},b:()=>{let i=r,l=It(n.shape,o);return l.length>0&&(i=ye(i,l)),z(Ue(i),n.shape)}}}};var OM={kernelName:$o,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,o=n.shape.slice(),{axis:s}=t;Qt(s,n.shape).forEach(u=>{o[u]=1});let i=z(r,o),l=P(i,Ir(n.shape,"float32"));return{x:()=>l}}};var PM={kernelName:$i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>de(r,Pe(Ia(t)))}}};var MM={kernelName:Po,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(ue(le(1),Pe(t)),r)}}};var LM={kernelName:yn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{reps:o}=t;return{x:()=>{let a=Ie(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=Q(a,Fe(r,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let l=0;l<o[1];++l)a=Q(a,Fe(r,[i*n.shape[0],l*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let l=0;l<o[1];++l)for(let u=0;u<o[2];++u)a=Q(a,Fe(r,[i*n.shape[0],l*n.shape[1],u*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let l=0;l<o[1];++l)for(let u=0;u<o[2];++u)for(let c=0;c<o[3];++c)a=Q(a,Fe(r,[i*n.shape[0],l*n.shape[1],u*n.shape[2],c*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};var zM={kernelName:Mo,gradFunc:(r,e,t)=>{let n=t,{perm:o}=n,s=Hm(o);return{x:()=>We(r,s)}}};var BM={kernelName:ws,gradFunc:(r,e,t)=>{let n=t,{axis:o}=n;return{value:()=>Vt(r,o)}}};var VM={kernelName:xa,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>pJ(r,t)}}};function pJ(r,e){let t=Hr(e,Ie(e)),n=Bo(r,t),o=tn(e,le(0,"int32")),s=n.rank-o.rank;for(let i=0;i<s;++i)o=ir(o,i+1);o=dr(o,Ir(n.shape,"bool"));let a=Ie(n);return Rt(o,n,a)}var GM={kernelName:_s,gradFunc:r=>({x:()=>Ie(r)})};var mJ=[gx,KO,XO,YO,ZO,JO,QO,eP,tP,rP,nP,oP,iP,lP,uP,cP,pP,mP,fP,dP,hP,gP,yP,xP,wP,_P,kP,vP,CP,IP,pM,NP,SP,TP,EP,AP,$P,DP,RP,PP,MP,LP,zP,BP,VP,GP,jP,WP,UP,HP,_0,_0,KP,YP,JP,QP,eM,tM,rM,nM,oM,sM,iM,aM,lM,k0,k0,uM,cM,mM,fM,dM,hM,gM,xM,yM,bM,wM,_M,kM,vM,CM,IM,NM,SM,TM,EM,v0,v0,C0,C0,AM,$M,DM,RM,FM,OM,PM,MM,LM,zM,BM,VM,GM];for(let r of mJ)Gb(r);var E0={};Ye(E0,{maxNorm:()=>dJ,minMaxNorm:()=>xJ,nonNeg:()=>gJ,unitNorm:()=>hJ});var I0;function Zt(){return I0==null&&(I0=bw().epsilon()),I0}function Kr(){return"channelsLast"}var Cn=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Cn.prototype)}},Mr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Mr.prototype)}},B=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,B.prototype)}},Se=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Se.prototype)}},Gf=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Gf.prototype)}};function Jo(r,e){if(Array.isArray(r)){let t=[];for(let n=0;n<e;n++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function Bn(r,e){if(!r)throw new Gf(e)}function N0(r,e){let t=0;for(let n of r)n===e&&t++;return t}function gr(r){return r.length===1?r[0]:r}function wt(r){return Array.isArray(r)?r:[r]}function Qo(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Ga(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var es={};function Tp(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function S0(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>S0(e));else{let e=Object.keys(r);for(let t of e){let n=r[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[t]=n.value:S0(n))}}}function Ui(r,e={},t={},n="object",o=!1){if(typeof r=="string"){let s=r,a;if(s in t)a=t[s];else if(s in es)a=es[s];else if(a=e[s],a==null)throw new B(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new B(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,l;if(a in t?[i,l]=t[a]:a in es?[i,l]=es.className:a in e&&([i,l]=e[a]),i==null)throw new B(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let f of Object.keys(es))u[f]=es[f];for(let f of Object.keys(t))u[f]=t[f];let c=s.config;c.customObjects=u;let p=Object.assign({},es);for(let f of Object.keys(t))es[f]=t[f];S0(s.config);let m=l(i,s.config,t,o);return es=Object.assign({},p),m}else{let u=Object.assign({},es);for(let p of Object.keys(t))es[p]=t[p];let c=new i(s.config);return es=Object.assign({},u),c}}}function fJ(r,e){return r<e?-1:r>e?1:0}function jf(r,e){return-1*fJ(r,e)}function ts(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function jM(r){if(r==null)throw new B(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function qi(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new B(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function yx(r,e,t=0,n=Infinity){return Bn(t>=0),Bn(n>=t),Array.isArray(r)&&r.length>=t&&r.length<=n&&r.every(o=>typeof o===e)}function qt(r,e){Array.isArray(r)?(y.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,n)=>qt(t,`element ${n+1} of ${e}`))):y.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${WM(r)}.`)}function WM(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>WM(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function UM(r,e){let t=y.now(),n;return(...s)=>{let a=y.now();return a-t<e||(t=a,n=r(...s)),n}}function bx(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}function T0(r,e){return V(()=>yt(ye(P(r,r),e,!0)))}var Ep=class extends J.Serializable{getConfig(){return{}}},Wf=class extends Ep{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>{let t=T0(e,this.axis),n=sr(t,0,this.maxValue);return P(e,de(n,Q(Zt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Wf.className="MaxNorm";J.registerClass(Wf);var Uf=class extends Ep{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>de(e,Q(Zt(),T0(e,this.axis))))}getConfig(){return{axis:this.axis}}};Uf.className="UnitNorm";J.registerClass(Uf);var qf=class extends Ep{apply(e){return Nr(e)}};qf.className="NonNeg";J.registerClass(qf);var Hf=class extends Ep{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>{let t=T0(e,this.axis),n=Q(P(this.rate,sr(t,this.minValue,this.maxValue)),P(1-this.rate,t));return P(e,de(n,Q(Zt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Hf.className="MinMaxNorm";J.registerClass(Hf);var qM={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Mt(r){return Tp(r)}function HM(r,e={}){return Ui(r,J.SerializationMap.getMap().classNameMap,e,"constraint")}function Lt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in qM?qM[r]:r,config:{}};return HM(t)}else return r instanceof Ep?r:HM(r)}function dJ(r){return new Wf(r)}function hJ(r){return new Uf(r)}function gJ(){return new qf}function xJ(r){return new Hf(r)}var F0={};Ye(F0,{constant:()=>IJ,glorotNormal:()=>$J,glorotUniform:()=>DJ,heNormal:()=>RJ,heUniform:()=>FJ,identity:()=>EJ,leCunNormal:()=>OJ,leCunUniform:()=>PJ,ones:()=>CJ,orthogonal:()=>MJ,randomNormal:()=>SJ,randomUniform:()=>NJ,truncatedNormal:()=>TJ,varianceScaling:()=>AJ,zeros:()=>vJ});var KM=["channelsFirst","channelsLast"],XM=["nearest","bilinear"],YM=["valid","same","causal"],ZM=["max","avg"],JM=["sum","mul","concat","ave"];var Ap=new Map;function Ft(r){qi(KM,"DataFormat",r)}function QM(r){qi(XM,"InterpolationFormat",r)}function Xr(r){qi(YM,"PaddingMode",r)}function A0(r){qi(ZM,"PoolMode",r)}var Kf=[],eL="/";function Ls(r,e){Kf.push(r);try{let t=e();return Kf.pop(),t}catch(t){throw Kf.pop(),t}}function yJ(){return Kf.length===0?"":Kf.join(eL)+eL}function wx(r){if(!tL(r))throw new Error("Not a valid tensor name: '"+r+"'");return yJ()+r}function _x(r){if(!tL(r))throw new Error("Not a valid tensor name: '"+r+"'");Ap.has(r)||Ap.set(r,0);let e=Ap.get(r);if(Ap.set(r,Ap.get(r)+1),e>0){let t=`${r}_${e}`;return Ap.set(t,1),t}else return r}var bJ=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function tL(r){return!!r.match(bJ)}function rL(r){return r===parseInt(r.toString(),10)}function rs(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let n=1;for(let o=e;o<t;++o)n*=r[o];return n}function nL(r){return r=Array.isArray(r)?new Float32Array(r):r,Gt(r)}function lc(r){return zi(nL(r)).dataSync()[0]}function zs(r){return lr(nL(r)).dataSync()[0]}function Lr(r,e){if(e<r)throw new B(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let n=r;n<e;++n)t.push(n);return t}function ja(r,e){return r.asType(e)}function Wa(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),r.reshape(t)}function oL(r,e){return V(()=>{if(r.shape.length!==2)throw new B(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=Wa(r,1);return kx(t,[1,e,1])})}function sL(r){let e=[rs(r.shape)];return r.reshape(e)}function iL(r){if(r.rank<=1)throw new B(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],rs(r.shape,1)];return r.reshape(e)}function Ua(r,e,t){return V(()=>{switch(r.rank){case 1:return rf(r,e,t);case 2:return wg(r,[e,0],[t,r.shape[1]]);case 3:return nf(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return rp(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Fe(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Fe(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new B(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function D0(r,e,t){return V(()=>{switch(r.rank){case 1:return rf(r,e,t);case 2:return wg(r,[0,e],[r.shape[0],t]);case 3:return nf(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return rp(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Xf(r,e,t,n){return V(()=>{switch(r.rank){case 1:return rf(r,e,t);case 2:switch(n){case 1:return Ua(r,e,t);case 2:return D0(r,e,t);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return Ua(r,e,t);case 2:return nf(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return D0(r,e,t);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return Ua(r,e,t);case 2:return rp(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return rp(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return D0(r,e,t);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Dp(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),Qe(r,e)}function $0(r,e){switch(r.rank){case 1:return Tw([r,e]);case 2:return Ew([r,e],0);case 3:return Aw([r,e],0);case 4:return Dw([r,e],0);default:throw new B(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function kx(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new B(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return Mn(r,e)}function $p(r,e=0,t=1,n,o){return bg(r,e,t,n,o)}function ns(r,e,t,n){if(r.rank<2||e.rank<2)throw new Se(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let o=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(o!==s)throw new Se(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2){let o=!1,s=!1;return jo.matMul({a:r,b:e,transposeA:o,transposeB:s,bias:n?R0(r.rank,n,Kr()):null,activation:t})}else{let o=r.shape.slice(),s=o.pop();r=r.reshape([-1,s]);let a=e.shape.slice(),i=a.pop(),l=a.pop(),u=[...a,i],c=Array.from({length:e.rank},(d,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=e.transpose(c).reshape([l,-1]);let p=[...o,...u],m=!1,f=!1;return jo.matMul({a:r,b:e,transposeA:m,transposeB:f,bias:n?R0(r.rank,n,Kr()):null,activation:t}).reshape(p)}}function vx(r,e,t){return V(()=>(Array.isArray(e)?e=Gt(e,"int32"):e=e.toInt(),Bo(r,e,t)))}function uc(r){return P(r,r)}function R0(r,e,t){let n=e.shape;if(e.rank!==1&&e.rank!==r)throw new B(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return n.length===1?e.reshape([1,n[0],1,1,1]):e.reshape([1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?e.reshape([1,1,1,1,n[0]]):e.reshape([1].concat(n))}else if(r===4){if(t==="channelsFirst")return n.length===1?e.reshape([1,n[0],1,1]):e.reshape([1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?e.reshape([1,1,1,n[0]]):e.reshape([1].concat(n))}else if(r===3){if(t==="channelsFirst")return n.length===1?e.reshape([1,n[0],1]):e.reshape([1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?e.reshape([1,1,n[0]]):e.reshape([1].concat(n))}else if(r<3)return e;throw new B(`Unsupported input rank by biasAdd: ${e.rank}`)}function on(r,e,t){return V(()=>(t==null&&(t=Kr()),Ft(t),r.add(R0(r.rank,e,t))))}function aL(r,e=1){if(e!==1)throw new Se(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Ss(r)}function lL(r){return V(()=>de(r,Et(r).add(1)))}function Cx(r,e,t,n){return V(()=>s_(r,e,t,n))}function uL(r){return V(()=>{let e=Q(.5,P(.2,r));return sr(e,0,1)})}function wl(r,e,t=!1){return t?r():e()}var cL=["fanIn","fanOut","fanAvg"],pL=["normal","uniform","truncatedNormal"];function wJ(r){qi(cL,"FanMode",r)}function _J(r){qi(pL,"Distribution",r)}var sn=class extends J.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Yf=class extends sn{apply(e,t){return xt(e,t)}};Yf.className="Zeros";J.registerClass(Yf);var cc=class extends sn{apply(e,t){return Ir(e,t)}};cc.className="Ones";J.registerClass(cc);var Zf=class extends sn{constructor(e){super();if(typeof e!="object")throw new B(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new B(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return V(()=>P(le(this.value),Ir(e,t)))}getConfig(){return{value:this.value}}};Zf.className="Constant";J.registerClass(Zf);var Jf=class extends sn{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ds(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Jf.className="RandomUniform";J.registerClass(Jf);var Qf=class extends sn{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Se(`randomNormal does not support dType ${t}.`);return $p(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Qf.className="RandomNormal";J.registerClass(Qf);var ed=class extends sn{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Se(`truncatedNormal does not support dType ${t}.`);return Gu(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};ed.className="TruncatedNormal";J.registerClass(ed);var td=class extends sn{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return V(()=>{if(e.length!==2||e[0]!==e[1])throw new B("Identity matrix initializer can only be used for 2D square matrices.");return P(this.gain,Jc(e[0]))})}getConfig(){return{gain:this.gain}}};td.className="Identity";J.registerClass(td);function kJ(r,e="channelsLast"){let t,n;if(Ft(e),r.length===2)t=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let o=rs(r,2);t=r[1]*o,n=r[0]*o}else if(e==="channelsLast"){let o=rs(r,0,r.length-2);t=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=rs(r);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}var zr=class extends sn{constructor(e){super();if(e.scale<0)throw new B(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,wJ(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,_J(this.distribution),this.seed=e.seed}apply(e,t){let n=kJ(e),o=n[0],s=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,o):this.mode==="fanOut"?a/=Math.max(1,s):a/=Math.max(1,(o+s)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Se(`${this.getClassName()} does not support dType ${t}.`);return Gu(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return Ds(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};zr.className="VarianceScaling";J.registerClass(zr);var Rp=class extends zr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return zr.className}};Rp.className="GlorotUniform";J.registerClass(Rp);var Fp=class extends zr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return zr.className}};Fp.className="GlorotNormal";J.registerClass(Fp);var Op=class extends zr{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return zr.className}};Op.className="HeNormal";J.registerClass(Op);var Pp=class extends zr{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return zr.className}};Pp.className="HeUniform";J.registerClass(Pp);var Mp=class extends zr{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return zr.className}};Mp.className="LeCunNormal";J.registerClass(Mp);var Lp=class extends zr{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return zr.className}};Lp.className="LeCunNormal";J.registerClass(Lp);var rd=class extends sn{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Se("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return V(()=>{if(e.length<2)throw new Se("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,o=$p(n,0,1,"float32"),s=p_.gramSchmidt(o);return e[0]>e[1]&&(s=s.transpose()),P(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};rd.className="Orthogonal";J.registerClass(rd);var mL={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function fL(r,e={}){return Ui(r,J.SerializationMap.getMap().classNameMap,e,"initializer")}function Nt(r){return Tp(r)}function dt(r){if(typeof r=="string"){let e=r in mL?mL[r]:r;if(e==="GlorotNormal")return new Fp;if(e==="GlorotUniform")return new Rp;if(e==="HeNormal")return new Op;if(e==="HeUniform")return new Pp;if(e==="LeCunNormal")return new Mp;if(e==="LeCunUniform")return new Lp;{let t={};return t.className=e,t.config={},fL(t)}}else return r instanceof sn?r:fL(r)}function vJ(){return new Yf}function CJ(){return new cc}function IJ(r){return new Zf(r)}function NJ(r){return new Jf(r)}function SJ(r){return new Qf(r)}function TJ(r){return new ed(r)}function EJ(r){return new td(r)}function AJ(r){return new zr(r)}function DJ(r){return new Rp(r)}function $J(r){return new Fp(r)}function RJ(r){return new Op(r)}function FJ(r){return new Pp(r)}function OJ(r){return new Mp(r)}function PJ(r){return new Lp(r)}function MJ(r){return new rd(r)}var gC={};Ye(gC,{Layer:()=>Me,RNN:()=>cn,RNNCell:()=>Tl,activation:()=>tee,add:()=>cee,alphaDropout:()=>Hee,average:()=>pee,averagePooling1d:()=>xC,averagePooling2d:()=>yC,averagePooling3d:()=>bC,avgPool1d:()=>wee,avgPool2d:()=>kee,avgPool3d:()=>Cee,avgPooling1d:()=>_ee,avgPooling2d:()=>vee,avgPooling3d:()=>Iee,batchNormalization:()=>xee,bidirectional:()=>zee,concatenate:()=>mee,conv1d:()=>HQ,conv2d:()=>KQ,conv2dTranspose:()=>XQ,conv3d:()=>YQ,convLstm2d:()=>Oee,convLstm2dCell:()=>Pee,cropping2D:()=>JQ,dense:()=>ree,depthwiseConv2d:()=>eee,dot:()=>gee,dropout:()=>nee,elu:()=>VQ,embedding:()=>uee,flatten:()=>see,gaussianDropout:()=>qee,gaussianNoise:()=>Uee,globalAveragePooling1d:()=>Nee,globalAveragePooling2d:()=>See,globalMaxPool1d:()=>Vee,globalMaxPool2d:()=>Gee,globalMaxPooling1d:()=>KL,globalMaxPooling2d:()=>XL,gru:()=>Eee,gruCell:()=>Aee,input:()=>qx,inputLayer:()=>BQ,layerNormalization:()=>yee,leakyReLU:()=>jQ,lstm:()=>Dee,lstmCell:()=>$ee,masking:()=>Kee,maxPool1d:()=>jee,maxPool2d:()=>Wee,maxPooling1d:()=>YL,maxPooling2d:()=>ZL,maxPooling3d:()=>Tee,maximum:()=>fee,minimum:()=>dee,multiply:()=>hee,permute:()=>lee,prelu:()=>WQ,reLU:()=>GQ,repeatVector:()=>iee,reshape:()=>aee,rnn:()=>Mee,separableConv2d:()=>ZQ,simpleRNN:()=>Ree,simpleRNNCell:()=>Fee,softmax:()=>UQ,spatialDropout1d:()=>oee,stackedRNNCells:()=>Lee,thresholdedReLU:()=>qQ,timeDistributed:()=>Bee,upSampling2d:()=>QQ,zeroPadding2d:()=>bee});var LJ=0;function Ix(){return LJ++}var Nx={};function _l(r=""){return r in Nx||(Nx[r]=0),Nx[r]+=1,r+Nx[r].toString()}function Sx(r){return Array.isArray(r)&&Array.isArray(r[0])}function zp(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Oe(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new B(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function et(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new B(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function Bp(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}var dL="Variable",nd=class{constructor(e,t="float32",n=dL,o=!0,s=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=Ix(),n=n==null?dL:n,this.originalName=wx(n),this.name=_x(this.originalName),this.trainable_=o,this.constraint=s,this.val=t_(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),zJ(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function zJ(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function od(r){return r.map(e=>e.read())}function Vp(r){r.forEach(e=>{e[0].write(e[1])})}var Dt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Br=class{constructor(e,t,n,o,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=o,this.callArgs=s,this.outputTensorIndex=i,this.id=Ix(),a!=null&&(this.originalName=wx(a),this.name=_x(this.originalName)),this.rank=t.length}},BJ=0,kl=class{constructor(e,t){this.callArgs=t,this.id=BJ++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},VJ=0,Me=class extends J.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=VJ++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Qo(n)+"_"+_l(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Mr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new B(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return gr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return gr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Cn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Cn(`Layer ${this.name} is not connected, no input to return.`);return gr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Cn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Cn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return gr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=wt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=wt(this.inputSpec);if(e.length!==t.length)throw new B(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let o=e[n],s=t[n];if(s==null)continue;let a=o.rank;if(s.ndim!=null&&a!==s.ndim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(s.maxNDim!=null&&a>s.maxNDim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(s.minNDim!=null&&a<s.minNDim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new B(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let i=o.shape;for(let l in s.axes){let u=Number(l),c=s.axes[l],p=u>=0?i[u]:i[i.length+u];if(c!=null&&[c,null].indexOf(p)===-1)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${c} but got shape ${i}.`)}}if(s.shape!=null)for(let i=0;i<s.shape.length;++i){let l=s.shape[i],u=o.shape[i];if(l!=null&&u!=null&&l!==u)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=wt(e),o=!0;for(let a of n)if(!(a instanceof Br)){o=!1;break}let s=!0;for(let a of n)if(a instanceof Br){s=!1;break}if(o===s)throw new B("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ls(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of wt(e))a.push(i.shape);this.build(gr(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t),i=wt(a),l=[];for(let u of i)n.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(a=gr(l),this.activityRegularizer!=null)throw new Se("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=GJ(e),i=this.computeOutputShape(a),l,u=jJ(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?l=i.map((c,p)=>new Br(u,c,this,wt(e),t,this.name,p)):l=new Br(u,i,this,wt(e),t,this.name),this.addInboundNode(e,l,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Se("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Cn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Cn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Mr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Bp(this.weights)}build(e){this.built=!0}getWeights(e=!1){return od(e?this.trainableWeights:this.weights)}setWeights(e){V(()=>{let t=this.weights;if(t.length!==e.length)throw new B(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],o=od(t);for(let s=0;s<o.length;++s){let a=o[s],i=t[s],l=e[s];if(!y.arraysEqual(a.shape,l.shape))throw new B(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);n.push([i,l])}Vp(n)})}addWeight(e,t,n,o,s,a,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new B(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=dt("zeros"));let l=o.apply(t,n),u=new nd(l,n,e,a,i);return l.dispose(),s!=null&&this.addLoss(()=>s.apply(u.read())),a==null&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=wt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,o,s,a,i=null){let l=wt(e);t=wt(t),n=wt(n),o=wt(o),s=zp(s),a=zp(a);let u=[],c=[],p=[];for(let m of l)u.push(m.sourceLayer),c.push(m.nodeIndex),p.push(m.tensorIndex);new kl({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:p,inputTensors:l,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:a},i);for(let m=0;m<t.length;m++)t[m].sourceLayer=this,t[m].nodeIndex=this.inboundNodes.length-1,t[m].tensorIndex=m}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function GJ(r){r=wt(r);let e=[];for(let t of r)e.push(t.shape);return gr(e)}function jJ(r){return"float32"}function O0(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let a=n.inputTensors[s],i=n.inboundLayers[s],l=n.nodeIndices[s],u=O0(a,i,l);for(let c of u)o.indexOf(c)===-1&&o.push(c)}return o}}}var Hi=class extends Me{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:_l("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new B("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new B("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new B("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let o=new Br(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new kl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new B(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Hi.className="InputLayer";J.registerClass(Hi);function Tx(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new B("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new Hi({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}async function Ki(r){if(r==null)return;let e=[],t=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let a=s;e.push(a.data()),t.push(o),n.push(a)}}if(e.length>0){let o=await Promise.all(e);for(let s=0;s<o.length;++s)r[t[s]]=o[s][0];Ee(n)}}function Ex(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var hL;(function(r){r[r.SILENT=0]="SILENT",r[r.VERBOSE=1]="VERBOSE"})(hL||(hL={}));var WJ=125,vl=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Ax=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},gL=class extends vl{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let o in t){let s=t[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let a;o in this.totals?a=this.totals[o]:this.totals[o]=0;let i=V(()=>Q(this.totals[o],P(s,n)));this.totals[o]=i,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:V(()=>{let o=P(de(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),$t(t[n])}))}},Dx=class extends vl{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let a=this.history[s];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let l=a[i];e.push(l.data()),t.push(s),n.push(i)}}let o=await Promise.all(e);for(let s=0;s<o.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=o[s][0]}},$x=class extends vl{constructor(e,t){super();if(this.currentEpoch=0,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=WJ),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");y.isNumber(this.yieldEvery)&&(this.maybeWait=UM(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let o=[];this.yield!=null&&(await Ki(n),o.push(this.yield(e,t,n))),o.push(mf()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ki(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Ki(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(mf()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ki(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Ki(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(mf()):y.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Ki(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ki(e),await this.trainEnd(e))}};function Rx(r,e){return r==null&&(r={}),r instanceof vl?[r]:Array.isArray(r)&&r[0]instanceof vl?r:wt(r).map(n=>new $x(n,e))}var an=class{constructor(){}static registerCallbackConstructor(e,t){y.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),an.checkForDuplicate(t),an.constructors[e]==null&&(an.constructors[e]=[]),an.constructors[e].push(t)}static checkForDuplicate(e){for(let t in an.constructors)an.constructors[+t].forEach(o=>{if(o===e)throw new B("Duplicate callback constructor.")})}static clear(){an.constructors={}}static createCallbacks(e){let t=[];for(let n in an.constructors){let o=+n;e>=o&&t.push(...an.constructors[o])}return t.map(n=>new n)}};an.constructors={};function Fx(r,e,t,n,o,s,a,i,l){let u=new Dx,c=[new gL,...an.createCallbacks(e)];r!=null&&c.push(...r),c.push(u);let p=new Ax(c);return p.setParams({epochs:t,initialEpoch:n,samples:o,steps:s,batchSize:a,verbose:e,doValidation:i,metrics:l}),{callbackList:p,history:u}}function Yr(r,e={},t=!1){return Ui(r,J.SerializationMap.getMap().classNameMap,e,"layer",t)}function sd(r,e){return V(()=>{r.dtype!=="float32"&&(r=r.asType("float32"));let t=ye(uc(r),e,!0),n=Na(t.shape,Zt()),o=yt(Hr(t,n));return de(r,o)})}function Xi(r,e){return V(()=>gt(uc(ue(e,r)),-1))}function Gp(r,e){return V(()=>gt(Et(ue(e,r)),-1))}function Cl(r,e){return V(()=>{let t=ue(r,e),n=sr(Et(r),Zt(),Number.MAX_VALUE),o=Et(de(t,n));return P(100,gt(o,-1))})}function UJ(r,e){return V(()=>{let t=sr(e,Zt(),Number.MAX_VALUE),n=ar(Q(1,t)),o=sr(r,Zt(),Number.MAX_VALUE),s=ar(Q(1,o));return gt(uc(ue(n,s)),-1)})}function qJ(r,e){return V(()=>{let t=Hr(0,ue(1,P(r,e)));return gt(uc(t),-1)})}function HJ(r,e){return V(()=>{let t=Hr(0,ue(1,P(r,e)));return gt(t,-1)})}function KJ(r,e){return V(()=>{let t=ye(P(r,e),-1),n=lr(P(ue(1,r),e),-1);return Hr(0,Q(1,ue(n,t)))})}function XJ(r,e){return V(()=>{let t=Math.log(2),n=ue(e,r),o=ue(Q(n,Es(P(-2,n))),t);return gt(o,-1)})}function pc(r,e,t=!1){return V(()=>{if(t)e=$a(e);else{let n=ye(e,e.shape.length-1,!0);e=de(e,n)}return e=sr(e,Zt(),1-Zt()),Ue(ye(P(r.toFloat(),ar(e)),e.shape.length-1))})}function jp(r,e,t=!1){return V(()=>{let n=Ts(sL(r)).toInt();e=sr(e,Zt(),1-Zt());let o=e.shape,s=Is(n,o[o.length-1]).reshape(o);return pc(s,e,t)})}function YJ(r,e){if(!y.arraysEqual(r.shape,e.shape))throw new B(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return V(()=>{let t=e.relu(),n=e.abs().neg();return t.sub(e.mul(r)).add(n.exp().log1p())})}function Wp(r,e){return V(()=>{let t;return t=sr(e,Zt(),1-Zt()),t=ar(de(t,ue(1,t))),gt(YJ(r,t),-1)})}function ZJ(r,e){return V(()=>{let t=sr(r,Zt(),1),n=sr(e,Zt(),1);return ye(P(r,ar(de(t,n))),-1)})}function JJ(r,e){return V(()=>{let t=ar(Q(Zt(),e));return gt(ue(e,P(r,t)),-1)})}function id(r,e){return V(()=>{let t=sd(r,-1),n=sd(e,-1),o=P(t,n);return Ue(ye(o,-1))})}var ad={meanSquaredError:Xi,meanAbsoluteError:Gp,meanAbsolutePercentageError:Cl,meanSquaredLogarithmicError:UJ,squaredHinge:qJ,hinge:HJ,categoricalHinge:KJ,logcosh:XJ,categoricalCrossentropy:pc,sparseCategoricalCrossentropy:jp,binaryCrossentropy:Wp,kullbackLeiblerDivergence:ZJ,poisson:JJ,cosineProximity:id};function Ox(r){if(typeof r=="string"){if(r in ad)return ad[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new B(e)}else return r}function ld(r,e){return V(()=>{let t=P(.5,tr(e)),n=ja(er(e,t),r.dtype);return gt(wn(r,n),-1)})}function ud(r,e){return V(()=>ja(wn(al(r,-1),al(e,-1)),"float32"))}function xL(r,e){return V(()=>dr(r.equal(1),e.equal(1)).sum().cast("float32"))}function QJ(r,e){return V(()=>dr(r.equal(1),e.equal(0)).sum().cast("float32"))}function eQ(r,e){return V(()=>dr(r.equal(0),e.equal(1)).sum().cast("float32"))}function P0(r,e){return V(()=>{let t=xL(r,e),n=eQ(r,e),o=t.add(n);return Rt(er(o,0),t.div(o),0).cast("float32")})}function yL(r,e){return V(()=>{let t=xL(r,e),n=QJ(r,e),o=t.add(n);return Rt(er(o,0),t.div(o),0).cast("float32")})}function Px(r,e){return Wp(r,e)}function Mx(r,e){return r.rank===e.rank&&(r=r.squeeze([r.rank-1])),e=e.argMax(-1),e.dtype!==r.dtype&&(e=e.asType(r.dtype)),wn(r,e).asType("float32")}var tQ=Xi,rQ=Xi,nQ=Gp,oQ=Gp,sQ=Cl,iQ=Cl,cd=pc,aQ=id,M0=jp,Lx={binaryAccuracy:ld,categoricalAccuracy:ud,precision:P0,categoricalCrossentropy:cd,sparseCategoricalCrossentropy:M0,mse:tQ,MSE:rQ,mae:nQ,MAE:oQ,mape:sQ,MAPE:iQ,cosine:aQ};function bL(r){if(typeof r=="string"&&r in Lx)return Lx[r];if(typeof r!="string"&&r!=null)return r;throw new B(`Unknown metric ${r}`)}function pd(r){if(Bn(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(ad))if(ad[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(Lx))if(Lx[t]===r){e=t;break}return e!==void 0?e:r.name}}function wL(r){let e={Adagrad:()=>pl.adagrad(.01),Adadelta:()=>pl.adadelta(1,.95,Zt()),Adam:()=>pl.adam(.001,.9,.999,Zt()),Adamax:()=>pl.adamax(.002,.9,.999,Zt(),0),RMSProp:()=>pl.rmsprop(.001,.9,0,Zt()),SGD:()=>pl.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new B(`Unknown Optimizer ${r}`)}var _L=1*1024*1024;function z0(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!L0(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let n=JSON.stringify(r);n.length>_L&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${_L}.`)}}function L0(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!L0(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!L0(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function kL(r,e,t,n=console.log){let o=uQ(r),s=["Layer (type)","Output shape","Param #"];o?(e=e||65,t=t||[.45,.85,1]):(e=e||98,t=t||[.33,.55,.67,1]),t[t.length-1]<=1&&(t=t.map(c=>Math.floor(e*c)));let a;if(!o){s.push("Receives inputs"),a=[];for(let c in r.nodesByDepth)a.push(...r.nodesByDepth[c])}n("_".repeat(e)),zx(s,t,n),n("=".repeat(e));let i=r.layers;for(let c=0;c<i.length;++c)o?cQ(i[c],t,n):pQ(i[c],t,a,n),n((c===i.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let l=lQ(r),u=Bp(r.nonTrainableWeights);n(`Total params: ${l+u}`),n(`Trainable params: ${l}`),n(`Non-trainable params: ${u}`),n("_".repeat(e))}function lQ(r){let e;return r.collectedTrainableWeights!=null?e=Bp(r.collectedTrainableWeights):e=Bp(r.trainableWeights),e}function uQ(r){let e=!0,t=[],n=[];for(let o in r.nodesByDepth)t.push(r.nodesByDepth[o]);for(let o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(let o of r.layers){let s=!1;for(let a of o.inboundNodes)if(n.indexOf(a)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function zx(r,e,t=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function cQ(r,e,t){let n;try{n=JSON.stringify(r.outputShape)}catch(i){n="multiple"}let o=r.name,s=r.getClassName(),a=[`${o} (${s})`,n,r.countParams().toString()];zx(a,e,t)}function pQ(r,e,t,n){let o;try{o=JSON.stringify(r.outputShape)}catch(c){o="multiple"}let s=[];for(let c of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(c)===-1))for(let p=0;p<c.inboundLayers.length;++p){let m=c.inboundLayers[p].name,f=c.nodeIndices[p],d=c.tensorIndices[p];s.push(`${m}[${f}][${d}]`)}let a=r.name,i=r.getClassName(),l=s.length===0?"":s[0],u=[`${a} (${i})`,o,r.countParams().toString(),l];zx(u,e,n);for(let c=1;c<s.length;++c)zx(["","","",s[c]],e,n)}function vL(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function mc(r,e){if(r===null)return null;if(typeof r=="string")return Ga(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];vL(e,o,s)?t.push(s):t.push(mc(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")t[n]=o;else{let s=Ga(n);t[s]=mc(o,s)}}return t}}function Bx(r,e){if(r==null)return null;if(typeof r=="string")return Qo(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];vL(e,o,s)?t.push(s):t.push(Bx(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n],s=Qo(n);(n==="name"||n==="className")&&typeof o=="string"?t[s]=o:t[s]=Bx(o,n)}return t}}var Up="3.1.0";function mQ(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return ne(e,r.dtype)}catch(t){throw new B(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Bs=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Bs)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=mQ(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new B(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Br){if(this.id2Value[e.id]==null)throw new B(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new B(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Br){if(this.id2Value[e.id]==null)throw new B(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new B(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ee(this.id2Mask)}},B0={},CL={};function fc(r,e,t,n){let o=t==null?!1:t.training,s=Array.isArray(r),a=s?r:[r],i=a.map(d=>d.name),l=[],u=e.names();for(let d of i)u.indexOf(d)!==-1?l.push(e.getValue(d)):l.push(null);n!=null&&(n.maxNumTensors=-Infinity,n.minNumTensors=Infinity);let c=i.join(",")+"|"+e.names().join(","),p,m;if(B0[c]==null){let d=fQ(a,e);p=d.sorted,m=d.recipientCounts,B0[c]=p,CL[c]=m}p=B0[c],m={},o||Object.assign(m,CL[c]);let f=new Bs(e);for(let d=0;d<p.length;++d){if(n!=null){let F=Xc().numTensors;F>n.maxNumTensors&&(n.maxNumTensors=F),F<n.minNumTensors&&(n.minNumTensors=F)}let h=p[d],g=h.sourceLayer;if(g instanceof Hi)continue;let x=[],b=[],w=[],_=!1;for(let F of h.inputs){let L=f.getValue(F),G=f.getMask(F);x.push(L),b.push(G),G!=null&&(_=!0),o||(m[F.name]--,m[F.name]===0&&!e.hasKey(F)&&i.indexOf(F.name)===-1&&!L.isDisposed&&F.sourceLayer.stateful!==!0&&w.push(L))}_&&(t=t||{},t.mask=b[0]);let k=wt(g.apply(x,t)),E=null;g.supportsMasking&&(E=g.computeMask(x,b));let S=dQ(h),R=Array.isArray(S)?S:[S];for(let F=0;F<R.length;++F){f.hasKey(R[F])||f.add(R[F],k[F],Array.isArray(E)?E[0]:E);let L=i.indexOf(R[F].name);L!==-1&&(l[L]=k[F])}o||Ee(w)}return f.disposeMasks(),s?l:l[0]}function fQ(r,e){y.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(r.length===1){let o=IL(r[0],e);t=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:a,recipientMap:i}=IL(s,e);for(let l of a)o.has(l.name)||(t.push(l),o.add(l.name));for(let l in i)n[l]==null&&(n[l]=new Set),i[l].forEach(u=>n[l].add(u))}}return{sorted:t,recipientCounts:hQ(n)}}function hQ(r){let e={};for(let t in r)e[t]=r[t].size;return e}function IL(r,e){let t=new Set,n=[],o={};for(let i of e.names())t.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(t.has(i.name)){s.pop();continue}let l=a[a.length-1]===s.length-1;if(i.inputs.length===0||l)s.pop(),n.push(i),t.add(i.name),l&&a.pop();else{a.push(s.length-1);for(let u of i.inputs)o[u.name]==null&&(o[u.name]=new Set),o[u.name].add(i.name),!t.has(u.name)&&s.push(u)}}return{sorted:n,recipientMap:o}}function dQ(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){t=n;break}e=r.sourceLayer.getOutputAt(t)}return e}var Vn=class extends Me{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=_l(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],ts(this.inputs).length!==this.inputs.length)throw new B(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);ts(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let w=b.sourceLayer,_=b.nodeIndex,k=b.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(_),this.outputLayersTensorIndices.push(k)}for(let b of this.inputs){let w=b.sourceLayer,_=b.nodeIndex,k=b.tensorIndex;Bn(_===0,"input layer has >1 nodes"),Bn(k===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(_),this.inputLayersTensorIndices.push(k)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let w=this.inputLayers[b];if(!(w instanceof Hi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let t={},n={},o={},s={},a={},i=[],l=(b,w,_,k,E,S)=>{(k==null||E==null||S==null)&&(k=b.sourceLayer,E=b.nodeIndex,S=b.tensorIndex);let R=k.inboundNodes[E];if(_.indexOf(R)!==-1)throw new Mr(`The tensor ${b.name} at layer "${k.name}" is part of a cycle.`);if(w.indexOf(R)!==-1)return;this.containerNodes.add(Vn.nodeKey(k,E)),k.id in a||(a[k.id]=Object.keys(a).length),_.indexOf(R)===-1&&_.push(R);let F=R.inboundLayers.length;for(let L=0;L<F;L++){let G=R.inputTensors[L],j=R.inboundLayers[L],U=R.nodeIndices[L],Y=R.tensorIndices[L];l(G,w,_,j,U,Y)}for(w.push(R);_.indexOf(R)>=0;)_.splice(_.indexOf(R),1);i.push(R)},u=[],c=[];for(let b of this.outputs)l(b,u,c);let p=i.slice().reverse();for(let b of p){n[b.id]=b,b.id in t||(t[b.id]=0);let w=t[b.id],_=o[b.outboundLayer.id]==null?0:o[b.outboundLayer.id];w=Math.max(w,_),o[b.outboundLayer.id]=w,s[b.outboundLayer.id]=b.outboundLayer,t[b.id]=w;for(let k=0;k<b.inboundLayers.length;k++){let E=b.inboundLayers[k],S=b.nodeIndices[k],R=E.inboundNodes[S],F=t[R.id]==null?0:t[R.id];t[R.id]=Math.max(w+1,F),n[R.id]=R}}let m={};for(let b in t){let w=t[b];w in m||(m[w]=[]),m[w].push(n[b])}let f={};for(let b in o){let w=o[b];w in f||(f[w]=[]),f[w].push(s[b])}let d=Object.keys(f).map(b=>parseInt(b,10)).sort(jf);this.layers=[];for(let b of d){let w=f[b];w.sort((_,k)=>{let E=a[_.id],S=a[k.id];return E<S?-1:E>S?1:0});for(let _ of w)_ instanceof Vn&&this.internalContainerRefs.push(_),this.layers.push(_)}this.layersByDepth=f,d=Object.keys(m).map(b=>parseInt(b,10)).sort(jf);let h=this.inputs.slice(),g=[];for(let b of d)for(let w of m[b]){let _=w.outboundLayer;if(_!=null){for(let k of w.inputTensors)if(h.indexOf(k)===-1)throw new Mr(`Graph disconnected: cannot obtain value for tensor ${k} at layer "${_.name}". The following previous layers were accessed without issue: ${g}`);for(let k of w.outputTensors)h.push(k);g.push(_.name)}}this.nodesByDepth=m;let x=this.layers.map(b=>b.name);for(let b of x){let w=x.filter(_=>_===b).length;if(w!==1)throw new Mr(`The name "${b}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new kl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new B("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},o=0;for(let a of this.layers)for(let i of a.weights){if(n[i.originalName]!=null)throw new B(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,o++}let s=[];for(let a in e){let i=a;if(n[a]==null){let l=a.split("/");i=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(n[i]!=null)s.push([n[i],e[a]]);else if(t)throw new B(`Provided weight data has no target variable: ${a}`);delete n[i]}if(t){let a=[];for(let i in n)a.push(i);if(a.length>0)throw new B(`${a.length} of ${o} weights are not set: ${a}`)}Vp(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Up}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Bx(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return V(()=>{e=wt(e);let n=new Bs;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return fc(this.outputs,n,t)})}computeMask(e,t){return V(()=>{e=wt(e);let n;return t==null?n=Jo(null,e.length):n=wt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=zp(e);if(t.length!==this.inputLayers.length)throw new B(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let l=this.inputLayers[i],u=t[i],c=l.name+"_0_0";n[c]=u}let o=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(jf);if(o.length>1)for(let i of o){let l=this.nodesByDepth[i];for(let u of l){let c=u.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(c.id)!==-1)continue;let p=[];for(let h=0;h<u.inboundLayers.length;h++){let g=u.inboundLayers[h],x=u.nodeIndices[h],b=u.tensorIndices[h],w=`${g.name}_${x}_${b}`,_=n[w];p.push(_)}let m=c.computeOutputShape(gr(p)),f=zp(m),d=c.inboundNodes.indexOf(u);for(let h=0;h<f.length;h++){let g=`${c.name}_${d}_${h}`;n[g]=f[h]}}}let s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let l=this.outputLayers[i],u=this.outputLayersNodeIndices[i],c=this.outputLayersTensorIndices[i],p=`${l.name}_${u}_${c}`;a.push(p)}for(let i=0;i<a.length;i++){let l=a[i];Bn(l in n),s.push(n[l])}return gr(s)}runInternalGraph(e,t){t==null&&(t=Jo(null,e.length));let n={};for(let l=0;l<this.inputs.length;++l){let u=this.inputs[l],c=e[l],p=t[l];n[u.id]=[c,p]}let o=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(jf);for(let l of o){let u=this.nodesByDepth[l];for(let c of u){let p=c.outboundLayer,m=c.inputTensors,f=c.outputTensors,d=new Array;for(let h of m)h.id in n&&d.push(n[h.id]);if(d.length===m.length){let h={},g,x,b,w;if(c.callArgs!=null&&(h=c.callArgs),d.length===1){let[_,k]=d[0];h.mask==null&&(h.mask=k),b=wt(p.call(_,h)),w=wt(p.computeMask(_,k)),g=[_],x=[k]}else g=d.map(_=>_[0]),x=d.map(_=>_[1]),h.mask==null&&(h.mask=x),b=wt(p.call(g,h)),w=wt(p.computeMask(g,x));if(p.activityRegularizer)throw new Se("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let _=0;_<f.length;++_){let k=f[_],E=b[_],S=w[_];n[k.id]=[E,S]}}}}let s=[],a=[],i=[];for(let l of this.outputs){Bn(l.id in n,`Could not compute output ${l.name} : ${l.id}`);let[u,c]=n[l.id];i.push(u.shape),s.push(u),a.push(c)}return[s,a,i]}buildNodeConversionMap(e){let t={},n;for(let o of this.layers){n=o instanceof Vn?1:0;for(let s=0;s<o.inboundNodes.length;s++){let a=Vn.nodeKey(o,s);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new B(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new B("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new B(`No such layer: ${e}`)}calculateLosses(){return V(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let o=Vn.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let i=a.getClassName(),l=a.getConfig(),u=[];for(let p=0;p<a.inboundNodes.length;p++){let m=a.inboundNodes[p],f=Vn.nodeKey(a,p),d={};if(this.containerNodes.has(f)){if(m.callArgs)try{JSON.stringify(m.callArgs),d=m.callArgs}catch(h){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),d={}}if(m.inboundLayers.length>0){let h=[];for(let g=0;g<m.inboundLayers.length;g++){let x=m.inboundLayers[g],b=m.nodeIndices[g],w=m.tensorIndices[g],_=Vn.nodeKey(x,b),k=t[_];k==null&&(k=0),h.push([x.name,k,w,d])}u.push(h)}}}let c={};c.name=a.name,c.className=i,c.config=l,c.inboundNodes=u,n.push(c)}e.layers=n;let o=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],l=this.inputLayersNodeIndices[a],u=Vn.nodeKey(i,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);let p=this.inputLayersTensorIndices[a];o.push([i.name,c,p])}e.inputLayers=o;let s=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],l=this.outputLayersNodeIndices[a],u=Vn.nodeKey(i,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);let p=this.outputLayersTensorIndices[a];s.push([i.name,c,p])}return e.outputLayers=s,e}static fromConfig(e,t,n={},o=!1){let s={},a={};function i(g,x){g.name in a?a[g.name].push(x):a[g.name]=[x]}function l(g,x){let b=[],w;for(let _ of x){let k=_[0],E=_[1],S=_[2];if(w=_[3]==null?{}:_[3],!(k in s)){i(g,x);return}let R=s[k];if(R.inboundNodes.length<=E){i(g,x);return}let F=R.inboundNodes[E];b.push(F.outputTensors[S])}b.length>0&&g.apply(gr(b),w)}function u(g){let x=g.name,b=Yr(g,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(o),s[x]=b,g.inboundNodes.forEach(_=>{if(!(_ instanceof Array))throw new B(`Corrupted configuration, expected array for nodeData: ${_}`);i(b,_)})}let c=t.name,p=t.layers;for(let g of p)u(g);for(;!jM(a);)for(let g of p){let x=s[g.name];if(x.name in a){let b=a[x.name];delete a[x.name];for(let w of b)l(x,w)}}let m=[],f=[],d=t.inputLayers;for(let g of d){let x=g[0],b=g[1],w=g[2];Bn(x in s);let k=s[x].inboundNodes[b].outputTensors;m.push(k[w])}let h=t.outputLayers;for(let g of h){let x=g[0],b=g[1],w=g[2];Bn(x in s);let k=s[x].inboundNodes[b].outputTensors;f.push(k[w])}return new e({inputs:m,outputs:f,name:c})}get stateful(){if(this._stateful)throw new B("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){V(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function gQ(r,e,t){let n=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return e.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function Vx(r,e){return gQ(r,e,"classWeight")}async function Gx(r,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let o=V(()=>{if(r.shape.length===1)return r.clone();if(r.shape.length===2)if(r.shape[1]>1){let i=1;return r.argMax(i)}else{if(r.shape[1]===1)return r.reshape([r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Ee(o);let a=[];return s.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),Gt(a,"float32")}else return null}function NL(r,e){return P(r,e)}var xQ=32;function TL(r,e){let t,n,o=e;t=o.xs,n=o.ys,y.assert(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=SL("input",r.inputNames,t),a=SL("output",r.outputNames,n),i=s[0].shape[0];y.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),y.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let l=0;l<s.length;l++)y.assert(s[l].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[l]} has ${s[l].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let l=0;l<a.length;l++)y.assert(a[l].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function SL(r,e,t){if(t instanceof Ve)return[t];if(Array.isArray(t))return y.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let n=[];for(let o of e){if(t[o]==null)throw new B(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(t[o])}return n}}function yQ(r){if(r.length===3)throw new Se("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function AL(r,e,t){let n=t.batchesPerEpoch!=null;if(y.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),y.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),y.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),y.assert(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),y.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=t.validationData!=null,s,a;if(o)if(EL(t.validationData))y.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=yQ(t.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),l=r.getDedupedMetricsNames(),u;o?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let c=Rx(t.callbacks,t.yieldEvery),p=t.verbose==null?1:t.verbose,{callbackList:m,history:f}=Fx(c,p,t.epochs,null,null,bQ(e,t),null,o,u);m.setModel(r),r.history=f,await m.onTrainBegin(),r.stopTraining_=!1;let d=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;d<t.epochs;){let g={};await m.onEpochBegin(d);let x=0,b=0;for(n||(h=await e.iterator());n?x<t.batchesPerEpoch:!0;){let w=await h.next();if(n&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){let{xs:_,ys:k}=TL(r,w.value),E={};E.batch=b,E.size=_[0].shape[0],await m.onBatchBegin(b,E);let S=[];if(t.classWeight!=null){let L=Vx(t.classWeight,r.outputNames);for(let G=0;G<L.length;++G)S.push(await Gx(k[G],null,L[G]))}let R=_.concat(k).concat(S),F=i(R);Ee(R);for(let L=0;L<l.length;++L){let G=l[L],j=F[L];E[G]=j,$t(j)}await m.onBatchEnd(b,E),Ex(E),b++,x++}if(n?x>=t.batchesPerEpoch:w.done){if(o){let _;EL(t.validationData)?_=wt(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):_=wt(r.evaluate(s,a,{batchSize:t.validationBatchSize==null?xQ:t.validationBatchSize,verbose:0}));for(let k=0;k<r.metricsNames.length;++k)g[`val_${r.metricsNames[k]}`]=_[k]}break}if(r.stopTraining_)break}if(await m.onEpochEnd(d,g),d++,r.stopTraining_)break}return await m.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function bQ(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function EL(r){return typeof r.iterator=="function"}function wQ(r){return typeof r.next=="function"}async function DL(r,e,t){t=t||{};let n=t.batches!=null,o=r.testFunction,s=[];if(t.verbose>0)throw new Se("Verbose mode is not implemented yet.");y.assert(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let a=wQ(e)?e:await e.iterator(),i=0,l=0;for(;n?l<t.batches:!0;){let u=await a.next();if(s=V(()=>{if(u.value){let{xs:c,ys:p}=TL(r,u.value),m=c.concat(p),f=V(()=>o(m));if(Ee(m),l===0)for(let h=0;h<f.length;++h)s.push(le(0));let d=m[0].shape[0];for(let h=0;h<f.length;++h){let g=f[h],x=s[h];s[h]=V(()=>Q(s[h],P(d,g))),l>0&&Ee(x)}Ee(f),i+=d,++l}return s}),u.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let c=s[u];s[u]=de(s[u],i),Ee(c)}return gr(s)}function jx(r){y.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function qp(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(n=>Ua(n,e,t-e)):Ua(r,e,t-e)}function Wx(r,e){return V(()=>r==null?null:Array.isArray(r)?r.map(t=>Wx(t,e)):vx(r,e.dtype==="int32"?e:e.toInt()))}function Ux(r,e){let t=[],n=0,o=null;for(;n<r;)o=n+e,o>=r&&(o=r),t.push([n,o]),n=o;return t}async function _Q(r,e,t,n,o,s,a,i,l,u,c,p,m,f,d){o==null&&(o=32),s==null&&(s=1),c==null&&(c=!0),m==null&&(m=0);let h=!1;if(l!=null&&u!=null&&(h=!0),d!=null&&(h=!0,f==null))throw new B("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(t,o,f,"steps_per_epoch"),x;g!=null&&(x=Lr(0,g)),a==null&&(a=1);let{callbackList:b,history:w}=Fx(i,a,s,m,g,f,o,h,p);b.setModel(r),r.history=w,await b.onTrainBegin(),r.stopTraining_=!1;for(let _=m;_<s;++_){await b.onEpochBegin(_);let k={};if(f!=null)throw new Se("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new Se("batch shuffling is not implemneted yet");c&&y.shuffle(x);let E=Gt(x),S=Ux(g,o);for(let R=0;R<S.length;++R){let F={};if(await b.onBatchBegin(R,F),V(()=>{let L=S[R][0],G=S[R][1],j=Ua(E,L,G-L);F.batch=R,F.size=G-L;let U=Wx(t,j),Y=e(U);for(let K=0;K<n.length;++K){let Z=n[K],te=Y[K];F[Z]=te,$t(te)}if(R===S.length-1&&h){let K=r.testLoop(l,u,o);for(let Z=0;Z<n.length;++Z){let te=n[Z],X=K[Z];$t(X),k["val_"+te]=X}}}),await b.onBatchEnd(R,F),Ex(F),r.stopTraining_)break}E.dispose()}if(await b.onEpochEnd(_,k),r.stopTraining_)break}return await b.onTrainEnd(),await r.history.syncData(),r.history}async function $L(r,e,t,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,a,i,l,u,c;try{let p=n.batchSize==null?32:n.batchSize;jx(p);let m=!1,f=await r.standardizeUserData(e,t,n.sampleWeight,n.classWeight,m,p);o=f[0],s=f[1],c=f[2];let d=!1,h;if(n.validationData!=null&&n.validationData.length>0){if(d=!0,n.validationData.length===2)a=n.validationData[0],i=n.validationData[1];else throw n.validationData.length===3?new Se("validationData including sample weights is not supported yet."):new B(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let S=!0,R=await r.standardizeUserData(a,i,null,null,S,p);l=R[0],u=R[1],h=l.concat(u)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){d=!0;let S=Math.floor(o[0].shape[0]*(1-n.validationSplit)),R=o[0].shape[0];l=qp(o,S,R),o=qp(o,0,S),u=qp(s,S,R),s=qp(s,0,S),h=l.concat(u)}else n.validationSteps!=null&&(d=!0);let g=o.concat(s).concat(c);r.checkTrainableWeightsConsistency();let x=r.makeTrainFunction(),b=r.getDedupedMetricsNames(),w,_;d?(r.makeTestFunction(),w=r.testFunction,_=b.slice().concat(b.map(S=>"val_"+S))):(w=null,h=[],_=b.slice());let k=Rx(n.callbacks,n.yieldEvery);return await _Q(r,x,g,b,p,n.epochs,n.verbose,k,w,h,n.shuffle,_,n.initialEpoch,null,null)}finally{r.isTraining=!1,Il(o,e),Il(s,t),Il(l,a),Il(u,i),c!=null&&Ee(c)}}function V0(r){let e=[];r instanceof Ve&&(r=[r]);for(let t=0;t<r.length;++t){let n=r[t];if(n.rank===1)e.push(Wa(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function Il(r,e){if(r==null)return;let t=[];if(e instanceof Ve)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(let o in e){let s=e[o];t.push(s.id)}let n=[];if(r instanceof Ve)t.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];t.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function kQ(r){return r instanceof Ve}function G0(r){return Array.isArray(r)}function RL(r){return!kQ(r)&&!G0(r)}function FL(r,e,t,n=!0,o=""){if(e==null||e.length===0){if(r!=null){let a=!1;if(G0(r)&&r.length>0)a=!0;else if(RL(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new B(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(a=>null);let s;if(RL(r)){r=r,s=[];for(let a of e){if(r[a]==null)throw new B(`No data provided for "${a}". Need data for each key in: ${e}`);s.push(r[a])}}else if(G0(r)){if(r=r,r.length!==e.length)throw new B(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new B(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=V0(s),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new B(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<t[a].length;++l){if(l===0&&!n)continue;let u=i.shape[l],c=t[a][l];if(c!=null&&c>=0&&u!==c)throw new B(`Error when checking ${o}: expected ${e[a]} to have shape [${t[a]}], but got array with shape [${i.shape}].`)}}return s}function vQ(r,e,t){let n=ts(r.map(s=>s.shape[0]));n.sort();let o=ts(e.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new B(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new B(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!y.arraysEqual(n,o))throw new B(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function CQ(r,e,t){let n=[Xi,Wp,pc];for(let o=0;o<r.length;++o){let s=r[o],a=e[o],i=t[o];if(a!=null){if(a===pc&&s.shape[s.shape.length-1]===1)throw new B(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){let l=s.shape.slice(1),u=i.slice(1);for(let c=0;c<l.length;++c){let p=l[c],m=u[c];if(m!=null&&p!==m)throw new B(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function OL(r,e,t,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new B(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new B(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new B(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<t[a].length;++l){if(l===0&&!n)continue;let u=i.shape[l],c=t[a][l];if(c!=null&&c!==u)throw new B(`Error when checking ${o}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function IQ(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(n=>t);{let n=[];for(let o of e){let s=t.hasOwnProperty(o)?t[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var NQ="layers-model",In=class extends Vn{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new B("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");kL(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=wL(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Or))throw new B("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new B(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Ox(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new B(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>Ox(i))}else{let a=Ox(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ls("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let o=IQ(e.metrics,this.outputNames),s=(a,i,l)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([l,a])};Ls("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=o[a];(u=>{let c="",p,m,f;for(let d of u){if(typeof d=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(d)!==-1){let g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===Wp?["accuracy","acc"].indexOf(d)!==-1?m=ld:["crossentropy","ce"].indexOf(d)!==-1&&(m=Px):this.lossFunctions[a]===jp?["accuracy","acc"].indexOf(d)!==-1?m=Mx:["crossentropy","ce"].indexOf(d)!==-1&&(m=M0):["accuracy","acc"].indexOf(d)!==-1?m=ud:["crossentropy","ce"].indexOf(d)!==-1&&(m=cd);let x;["accuracy","acc"].indexOf(d)!==-1?x="acc":["crossentropy","ce"].indexOf(d)!==-1&&(x="ce"),f=m,p=c+x}else f=bL(d),p=c+pd(d);let h;Ls(p,()=>{h=f}),s(a,p,h)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let o=n.batchSize==null?32:n.batchSize;jx(o);let s=!0,a=this.standardizeUserDataXY(e,t,s,o);try{let i=a[0].concat(a[1]);this.makeTestFunction();let l=this.testFunction,u=this.testLoop(l,i,o,n.verbose,n.steps);return gr(u)}finally{Il(a[0],e),Il(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),DL(this,e,t)}checkNumSamples(e,t,n,o="steps"){let s;if(n!=null){if(s=null,t!=null)throw new B(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new B(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new B("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),o=n?t:[t],s=this.retrieveSymbolicTensors(o),a=new Bs;if(e instanceof Ve&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new B(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],e[l])}else for(let l of this.inputs){let u=e[l.name];if(u==null)throw new B(`No value is provided for the model's input ${l.name}`);a.add(l,u)}let i=fc(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Jo(null,e.length),n=e.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],a=s.map(i=>i.name);for(let i=0;i<e.length;++i){let l=a.indexOf(e[i]);if(l!==-1&&(t[i]=s[l],n--),n===0)break}if(n===0)break}if(n>0){let o=[];throw t.forEach((s,a)=>{s==null&&o.push(e[a])}),new B(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,n=!1){return V(()=>{let o=this.checkNumSamples(e);if(n)throw new Se("Verbose predictLoop() is not implemented yet.");let s=Ux(o,t),a=this.outputs.map(i=>[]);for(let i=0;i<s.length;++i)V(()=>{let u=s[i][0],c=s[i][1],p=qp(e,u,c),m=[];if(Array.isArray(p))for(let d=0;d<p.length;++d)m.push({key:this.inputs[d],value:p[d]});else m.push({key:this.inputs[0],value:p});let f=new Bs(m);return fc(this.outputs,f)}).forEach((u,c)=>a[c].push(u));return gr(a.map(i=>Qe(i,0)))})}predict(e,t={}){let n=V0(e);OL(n,this.inputNames,this.feedInputShapes,!1);try{let o=t.batchSize==null?32:t.batchSize;return jx(o),this.predictLoop(n,o)}finally{Il(n,e)}}predictOnBatch(e){OL(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,o){if(this.optimizer_==null)throw new Mr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===jp?s.push(i.slice(0,i.length-1).concat([1])):s.push(i)}if(e=FL(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=FL(t,this.feedOutputNames,s,!1,"target"),vQ(e,t,null),CQ(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!=0)throw new B(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,o,s=!0,a){let[i,l]=this.standardizeUserDataXY(e,t,s,a);if(n!=null)throw new Error("sample weight is not supported yet.");let u=null;if(o!=null){let c=Vx(o,this.outputNames);u=[];for(let p=0;p<c.length;++p)u.push(await Gx(l[p],null,c[p]))}return[i,l,u]}testLoop(e,t,n,o=0,s){return V(()=>{let a=this.checkNumSamples(t,n,s,"steps"),i=[];if(o>0)throw new Se("Verbose mode is not implemented yet.");if(s!=null)throw new Se("steps mode in testLoop() is not implemented yet");{let l=Ux(a,n),u=Gt(Lr(0,a));for(let c=0;c<l.length;++c){let p=l[c][0],m=l[c][1],f=Ua(u,p,m-p),d=Wx(t,f),h=e(d);if(c===0)for(let g=0;g<h.length;++g)i.push(le(0));for(let g=0;g<h.length;++g){let x=h[g];i[g]=Q(i[g],P(m-p,x))}}for(let c=0;c<i.length;++c)i[c]=de(i[c],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let o=e[n],s=o;N0(e,o)>1&&(s+=`_${N0(e.slice(0,n),o)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let p=[];for(let h=0;h<this.inputs.length;++h)p.push({key:this.inputs[h],value:n[h]});let m=new Bs(p),f=fc(this.outputs,m,{training:!0}),d;for(let h=0;h<this.lossFunctions.length;++h){let x=this.lossFunctions[h](o[h],f[h]);s[h]!=null&&(x=NL(x,s[h]));let b=gt(x);t.push(b),h===0?d=x:d=Q(d,x)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=t[h];else{let x=this.metricsTensors[h][0],b=this.metricsTensors[h][1];g=gt(x(o[b],f[b]))}$t(g),a.push(g)}return d=gt(d),this.calculateLosses().forEach(h=>{d=Q(d,h)}),d},l=this.collectedTrainableWeights.map(p=>p.read()),u=!0;return[this.optimizer_.minimize(i,u,l)].concat(a)}}makeTestFunction(){this.testFunction=e=>V(()=>{let t=[],n,o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:o[u]});let i=new Bs(a),l=fc(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){let c=this.lossFunctions[u],p=gt(c(s[u],l[u]));u===0?n=p:n=Q(n,p),t.push(n)}for(let u=0;u<this.metricsTensors.length;++u){let c=this.metricsTensors[u][0],p=this.metricsTensors[u][1],m=gt(c(s[p],l[p]));t.push(m)}return t})}async fit(e,t,n={}){return $L(this,e,t,n)}async fitDataset(e,t){return AL(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),o=n[0],s=n[1],i=this.makeTrainFunction()(o.concat(s)),l=[];for(let u of i){let c=await u.data();l.push(c[0])}return Ee(i),gr(l)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,o=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<o.length;++a)n&&!o[a].trainable||t.push({name:o[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Xc().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Xc().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Qo(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Qo(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let o of t)if(typeof n[o]=="string")e[o]=Qo(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Qo(pd(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Qo(pd(e)));{let e={};for(let t in this.metrics)e[t]=Qo(pd(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=mc(e.optimizer_config),n=Yr(t),o;if(typeof e.loss=="string")o=Ga(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(a=>Ga(a));else if(e.loss!=null){o={};for(let a in e.loss)o[a]=Ga(e.loss[a])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(a=>Ga(a));else if(e.metrics!=null){s={};for(let a in e.metrics)s[a]=Ga(e.metrics[a])}this.compile({loss:o,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let u=Cr.getSaveHandlers(e);if(u.length===0)throw new B(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new B(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new B("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Cr.encodeWeights(this.getNamedWeights(t)),o=!1,s=null,i={modelTopology:this.toJSON(s,o),format:NQ,generatedBy:`TensorFlow.js tfjs-layers v${Up}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let u="optimizer",{data:c,specs:p}=await Cr.encodeWeights(await this.optimizer.getWeights(),u);n.specs.push(...p),n.data=Cr.concatenateArrayBuffers([n.data,c])}if(this.userDefinedMetadata!=null){let u=!0;z0(this.userDefinedMetadata,this.name,u),i.userDefinedMetadata=this.userDefinedMetadata}return i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){z0(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};In.className="Model";J.registerClass(In);var j0=class extends In{};j0.className="Functional";J.registerClass(j0);async function PL(r,e){"modelTopology"in r||(r={modelTopology:r}),r=r;let t=r.modelTopology;t.model_config!=null&&(t=t.model_config);let n=mc(t),o=Yr(n,e);if(r.weightsManifest!=null){let s=await Cr.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(i=>i.originalName)),a={};for(let i of o.weights)a[i.originalName]=s[i.originalName];o.loadWeights(a),Ee(s)}return o}async function ML(r,e){if(e==null&&(e={}),typeof r=="string"){let t=Cr.getLoadHandlers(r,e);if(t.length===0)t.push(Cr.browserHTTPRequest(r,e));else if(t.length>1)throw new B(`Found more than one (${t.length}) load handlers for URL '${r}'`);r=t[0]}return SQ(r,void 0,e)}async function SQ(r,e,t){if(t==null&&(t={}),r.load==null)throw new B("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=t.strict==null?!0:t.strict,a=n.weightData!=null&&n.weightSpecs!=null&&s,i=Yr(mc(o),e,a),l=n.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),n.userDefinedMetadata!=null&&i.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new B("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:c}=TQ(n.weightData,n.weightSpecs);i.loadWeights(u,s),i.optimizer!=null&&c.length>0&&await i.optimizer.setWeights(c),Ee(u),Ee(c.map(p=>p.tensor))}return i}function TQ(r,e){let t=Cr.decodeWeights(r,e),n={},o=[];return e.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:t[s.name]}):n[s.name]=t[s.name]}),{modelWeights:n,optimizerWeights:o}}var Yi=class extends In{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:_l("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new B(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Yi||e instanceof In,n;if(t){if(n=e,n.outputs.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new B("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new B("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=Tx({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new B(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=O0(this.outputs[0])}this.inboundNodes=[],new kl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Jo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(et(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new In({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Mr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Mr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Mr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Mr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},o=!1){let s,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new B("Legacy serialization format not supported yet.");s=t}else y.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof Yi))throw new Se(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let l of s){let c=Yr(l,void 0,o);o&&c.setFastWeightInitDuringBuild(!0),i.add(c)}return i}set stopTraining(e){if(this.model==null)throw new B("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new B("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};Yi.className="Sequential";J.registerClass(Yi);function LL(r){return new In(r)}function zL(r){return new Yi(r)}function BL(r,e){return e==null&&(e={}),ML(r,e)}function qx(r){return Tx(r)}function VL(r,e){an.registerCallbackConstructor(r,e)}var ln=class extends J.Serializable{getConfig(){return{}}},W0=class extends ln{apply(e,t=1){return aL(e,t)}};W0.className="elu";J.registerClass(W0);var U0=class extends ln{apply(e){return Mu(e)}};U0.className="selu";J.registerClass(U0);var q0=class extends ln{apply(e){return Nr(e)}};q0.className="relu";J.registerClass(q0);var H0=class extends ln{apply(e){return V(()=>As(6,Nr(e)))}};H0.className="relu6";J.registerClass(H0);var K0=class extends ln{apply(e){return e}};K0.className="linear";J.registerClass(K0);var X0=class extends ln{apply(e){return Wr(e)}};X0.className="sigmoid";J.registerClass(X0);var Y0=class extends ln{apply(e){return uL(e)}};Y0.className="hardSigmoid";J.registerClass(Y0);var Z0=class extends ln{apply(e){return Es(e)}};Z0.className="softplus";J.registerClass(Z0);var J0=class extends ln{apply(e){return lL(e)}};J0.className="softsign";J.registerClass(J0);var Q0=class extends ln{apply(e){return Li(e)}};Q0.className="tanh";J.registerClass(Q0);var md=class extends ln{apply(e,t=-1){return $a(e,t)}};md.className="softmax";J.registerClass(md);var eC=class extends ln{apply(e,t=-1){return Du(e,t)}};eC.className="logSoftmax";J.registerClass(eC);var tC=class extends ln{apply(e,t=1){return V(()=>Wr(e.mul(t)).mul(e))}};tC.className="swish";J.registerClass(tC);function Vs(r){return r.getClassName()}function rC(r,e={}){return Ui(r,J.SerializationMap.getMap().classNameMap,e,"activation")}function Gs(r){if(r==null){let e={};return e.className="linear",e.config={},rC(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},rC(e)}else return r instanceof ln?r:rC(r)}function nC(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var oC=class extends J.Serializable{},dc=class extends oC{constructor(e){super();nC(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return V(()=>{let t=xt([1]);return this.hasL1&&(t=Q(t,ye(P(this.l1,Et(e))))),this.hasL2&&(t=Q(t,ye(P(this.l2,uc(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};dc.className="L1L2";J.registerClass(dc);function GL(r){return nC(r),new dc({l1:r!=null?r.l1:null,l2:0})}function jL(r){return nC(r),new dc({l2:r!=null?r.l2:null,l1:0})}var WL={l1l2:"L1L2"};function lt(r){return Tp(r)}function UL(r,e={}){return Ui(r,J.SerializationMap.getMap().classNameMap,e,"regularizer")}function _t(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in WL?WL[r]:r,config:{}};return UL(t)}else return r instanceof oC?r:UL(r)}var fd=class extends Me{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Oe(e);let n=Nr(e);return this.maxValue!=null&&(n=sr(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};fd.className="ReLU";J.registerClass(fd);var dd=class extends Me{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return Sa(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};dd.className="LeakyReLU";J.registerClass(dd);var hd=class extends Me{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=dt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=_t(e.alphaRegularizer),this.alphaConstraint=Lt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new B(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=et(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)n[o]=e[o];this.inputSpec=[new Dt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Oe(e),Da(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Nt(this.alphaInitializer),alphaRegularizer:lt(this.alphaRegularizer),alphaConstraint:Mt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};hd.className="PReLU";J.registerClass(hd);var gd=class extends Me{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Se(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return Ss(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};gd.className="ELU";J.registerClass(gd);var xd=class extends Me{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Oe(e);return n.mul(ja(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};xd.className="ThresholdedReLU";J.registerClass(xd);var yd=class extends Me{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new md().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Oe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};yd.className="Softmax";J.registerClass(yd);function Nl(r,e,t){if(typeof r=="number")return Jo(r,e);if(r.length!==e)throw new B(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let n=0;n<e;++n){let o=r[n];if(!rL(o))throw new B(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function un(r,e,t,n,o=1){if(r==null)return r;let s=e+(e-1)*(o-1),a;return t==="same"?a=r:a=r-s+1,Math.floor((a+n-1)/n)}function bd(r,e,t,n){if(r==null)return null;if(n==="valid")r=r*e+zs([t-e,0]);else if(n==="same")r=r*e;else throw new B(`Unsupport padding mode: ${n}.`);return r}function wd(r,e){return V(()=>(Ft(e),e==="channelsFirst"?We(r,[0,2,3,1]):r))}function sC(r,e){return V(()=>(Ft(e),e==="channelsFirst"?We(r,[0,2,3,4,1]):r))}function EQ(r,e,t,n=1,o="valid",s,a=1){return V(()=>{if(s==null&&(s=Kr()),Ft(s),r.shape.length!==3)throw new B(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new B(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new B(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=We(r,[0,2,1])),o==="causal")throw new Se("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Cu(r,e,n,o==="same"?"same":"valid","NWC",a);return t!=null&&(i=on(i,t)),i})}function qL(r,e,t,n=[1,1],o="valid",s,a,i=null){return V(()=>{if(s==null&&(s=Kr()),Ft(s),r.rank!==3&&r.rank!==4)throw new B(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new B(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let l=wd(r,s);if(o==="causal")throw new Se("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=jo.conv2d({x:l,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),s==="channelsFirst"&&(l=We(l,[0,3,1,2])),l})}function AQ(r,e,t,n=[1,1,1],o="valid",s,a){return V(()=>{if(s==null&&(s=Kr()),Ft(s),r.rank!==4&&r.rank!==5)throw new B(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new B(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=sC(r,s);if(o==="causal")throw new Se("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Bm(i,e,n,o==="same"?"same":"valid","NDHWC",a),t!=null&&(i=on(i,t)),s==="channelsFirst"&&(i=We(i,[0,4,1,2,3])),i})}var Hp=class extends Me{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Hp.verifyArgs(t),this.rank=e,qt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Se(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Nl(t.kernelSize,e,"kernelSize"),this.strides=Nl(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Xr(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ft(this.dataFormat),this.activation=Gs(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=dt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Lt(t.biasConstraint),this.biasRegularizer=_t(t.biasRegularizer),this.activityRegularizer=_t(t.activityRegularizer),this.dilationRate=Nl(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new B(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new B(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new B(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Bn("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!yx(e.kernelSize,"number",1,3))throw new B(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Vs(this.activation),useBias:this.useBias,biasInitializer:Nt(this.biasInitializer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),biasConstraint:Mt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},hc=class extends Hp{constructor(e,t){super(e,t);this.kernel=null,hc.verifyArgs(t),this.filters=t.filters,qt(this.filters,"filters"),this.kernelInitializer=dt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Lt(t.kernelConstraint),this.kernelRegularizer=_t(t.kernelRegularizer)}build(e){e=et(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return V(()=>{e=Oe(e);let n,o=this.bias==null?null:this.bias.read(),s=bx(this.activation.getClassName());if(s!=null&&this.rank===2)n=qL(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=EQ(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=qL(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=AQ(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Se("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=et(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let a=un(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(a)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){let e={filters:this.filters,kernelInitializer:Nt(this.kernelInitializer),kernelRegularizer:lt(this.kernelRegularizer),kernelConstraint:Mt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new B(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},Sl=class extends hc{constructor(e){super(2,e);Sl.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!yx(e.kernelSize,"number",1,2))throw new B(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};Sl.className="Conv2D";J.registerClass(Sl);var gc=class extends hc{constructor(e){super(3,e);gc.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new B(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};gc.className="Conv3D";J.registerClass(gc);var _d=class extends Sl{constructor(e){super(e);if(this.inputSpec=[new Dt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new B(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=et(e),e.length!==4)throw new B("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new B("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Dt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return V(()=>{let n=Oe(e);if(n.shape.length!==4)throw new B(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let l=o[a],u=o[i],c=this.kernelSize[0],p=this.kernelSize[1],m=this.strides[0],f=this.strides[1],d=bd(l,m,c,this.padding),h=bd(u,f,p,this.padding),g=[s,d,h,this.filters];this.dataFormat!=="channelsLast"&&(n=We(n,[0,2,3,1]));let x=Iu(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=We(x,[0,3,1,2])),this.bias!=null&&(x=on(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(e){e=et(e);let t=e.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let a=this.kernelSize[0],i=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[o]=bd(t[o],l,a,this.padding),t[s]=bd(t[s],u,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};_d.className="Conv2DTranspose";J.registerClass(_d);var iC=class extends hc{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new B("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new B("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new B(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=dt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=_t(t.depthwiseRegularizer),this.depthwiseConstraint=Lt(t.depthwiseConstraint),this.pointwiseInitializer=dt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=_t(t.pointwiseRegularizer),this.pointwiseConstraint=Lt(t.pointwiseConstraint)}build(e){if(e=et(e),e.length<this.rank+2)throw new B(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new B(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],o=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Dt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return V(()=>{e=Oe(e);let n;if(this.rank===1)throw new Se("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=We(e,[0,2,3,1])),n=ef(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=on(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=We(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Nt(this.depthwiseInitializer),e.pointwiseInitializer=Nt(this.pointwiseInitializer),e.depthwiseRegularizer=lt(this.depthwiseRegularizer),e.pointwiseRegularizer=lt(this.pointwiseRegularizer),e.depthwiseConstraint=Mt(this.depthwiseConstraint),e.pointwiseConstraint=Mt(this.pointwiseConstraint),e}};iC.className="SeparableConv";var kd=class extends iC{constructor(e){super(2,e)}};kd.className="SeparableConv2D";J.registerClass(kd);var xc=class extends hc{constructor(e){super(1,e);xc.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!yx(e.kernelSize,"number",1,1))throw new B(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};xc.className="Conv1D";J.registerClass(xc);var vd=class extends Me{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return V(()=>{if(e=Oe(e),this.dataFormat==="channelsLast"){let n=Xf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Xf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Xf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Xf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};vd.className="Cropping2D";J.registerClass(vd);var Cd=class extends Me{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ft(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,QM(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return V(()=>{let n=Oe(e),o=n.shape;if(this.dataFormat==="channelsFirst"){n=We(n,[0,2,3,1]);let s=this.size[0]*o[2],a=this.size[1]*o[3],i=this.interpolation==="nearest"?n.resizeNearestNeighbor([s,a]):n.resizeBilinear([s,a]);return We(i,[0,3,1,2])}else{let s=this.size[0]*o[1],a=this.size[1]*o[2];return this.interpolation==="nearest"?n.resizeNearestNeighbor([s,a]):n.resizeBilinear([s,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Cd.className="UpSampling2D";J.registerClass(Cd);function DQ(r,e,t=[1,1],n="valid",o,s){return V(()=>{o==null&&(o=Kr()),Ft(o);let a=wd(r,o);if(r.rank!==4)throw new B(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new B(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Ns(a,e,t,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(a=We(a,[0,3,1,2])),a})}var Id=class extends Hp{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=dt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Lt(e.depthwiseConstraint),this.depthwiseRegularizer=_t(e.depthwiseRegularizer)}build(e){if(e=et(e),e.length<4)throw new B(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new B(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{e=Oe(e);let n=DQ(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=on(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=et(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=un(t,this.kernelSize[0],this.padding,this.strides[0]),a=un(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,s,a]:[e[0],s,a,o]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Nt(this.depthwiseInitializer),e.depthwiseRegularizer=lt(this.depthwiseRegularizer),e.depthwiseConstraint=Mt(this.depthwiseRegularizer),e}};Id.className="DepthwiseConv2D";J.registerClass(Id);function aC(r,e,t,n){if(Array.isArray(r)){if(e!=null||t!=null)throw new B("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return e=o(e),t=o(t),{inputs:r,initialState:e,constants:t}}function lC(r,e,t,n=!1,o,s,a=!1,i=!1){return V(()=>{let l=e.shape.length;if(l<3)throw new B(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(Lr(2,l));if(e=We(e,u),s!=null)throw new Se("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=o.asType("bool").asType("float32"),o.rank===l-1&&(o=ir(o,-1)),o=We(o,u)),n&&(e=Kt(e,0),o!=null&&(o=Kt(o,0)));let c=[],p,m=t,f=e.shape[0],d=cr(e),h;o!=null&&(h=cr(o));for(let x=0;x<f;++x){let b=d[x],w=V(()=>r(b,m));if(o==null)p=w[0],m=w[1];else{let _=V(()=>{let k=h[x],E=tr(k).sub(k),S=w[0].mul(k).add(m[0].mul(E)),R=m.map((F,L)=>w[1][L].mul(k).add(F.mul(E)));return{output:S,newStates:R}});p=_.output,m=_.newStates}i&&c.push(p)}let g;return i&&(g=Vt(c,1)),[p,g,m]})}var cn=class extends Me{constructor(e){super(e);let t;if(e.cell==null)throw new B("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Kp({cells:e.cell}):t=e.cell,t.stateSize==null)throw new B("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Dt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Lr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Sx(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],o;if(this.returnSequences?o=[e[0],e[1],n]:o=[e[0],n],this.returnState){let s=[];for(let a of t)s.push([e[0],a]);return[o].concat(s)}else return o}computeMask(e,t){return V(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let o=this.states.map(s=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new Se("Constants support is not implemented in RNN yet.");Sx(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new Dt({shape:[n,null,...o]});let s=[e[0]].concat(e.slice(2));if(t!=null)throw new Se("Constants support is not implemented in RNN yet.");this.cell.build(s);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!y.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new B(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new Dt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){V(()=>{if(!this.stateful)throw new Cn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>xt([n,o])):this.states_=[xt([n,this.cell.stateSize])];else if(e==null)Ee(this.states_),this.keptStates!=null&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>xt([n,o])):this.states_[0]=xt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let o=0;o<this.states_.length;++o){let s=e[o],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,i=[n,a];if(!y.arraysEqual(s.shape,i))throw new B(`State ${o} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>$t(o.clone()))})}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=aC(e,n,o,this.numConstants);e=s.inputs,n=s.initialState,o=s.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let u of n)this.stateSpec.push(new Dt({shape:u.shape}));i=i.concat(this.stateSpec)}if(o!=null&&(t.constants=o,a=a.concat(o),this.numConstants=o.length),a[0]instanceof Br){let u=[e].concat(a),c=this.inputSpec.concat(i),p=this.inputSpec;this.inputSpec=c;let m=super.apply(u,t);return this.inputSpec=p,m}else return super.apply(e,t)}call(e,t){return V(()=>{let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;e=Oe(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new B(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:o},u=lC((d,h)=>{let g=this.cell.call([d].concat(h),i);return[g[0],g.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),c=u[0],p=u[1],m=u[2];this.stateful&&this.resetStates(m,o);let f=this.returnSequences?p:c;return this.returnState?[f].concat(m):f})}getInitialState(e){return V(()=>{let t=xt(e.shape);return t=ye(t,[1,2]),t=Wa(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?kx(t,[1,n]):t):this.cell.stateSize>1?[kx(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===cn.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let o=t.cell,s=Yr(o,n);return new e(Object.assign(t,{cell:s}))}};cn.className="RNN";J.registerClass(cn);var Tl=class extends Me{},Xp=class extends Tl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,qt(this.units,"units"),this.activation=Gs(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=dt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=dt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=dt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=Lt(e.kernelConstraint),this.recurrentConstraint=Lt(e.recurrentConstraint),this.biasConstraint=Lt(e.biasConstraint),this.dropout=lc([1,zs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lc([1,zs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=et(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{if(e=e,e.length!==2)throw new B(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=qa({ones:()=>tr(e),rate:this.dropout,training:o})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=qa({ones:()=>tr(n),rate:this.recurrentDropout,training:o}));let s,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?s=ns(P(e,a),this.kernel.read()):s=ns(e,this.kernel.read()),this.bias!=null&&(s=on(s,this.bias.read())),i!=null&&(n=P(n,i));let l=Q(s,ns(n,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Vs(this.activation),useBias:this.useBias,kernelInitializer:Nt(this.kernelInitializer),recurrentInitializer:Nt(this.recurrentInitializer),biasInitializer:Nt(this.biasInitializer),kernelRegularizer:lt(this.kernelRegularizer),recurrentRegularizer:lt(this.recurrentRegularizer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),kernelConstraint:Mt(this.kernelConstraint),recurrentConstraint:Mt(this.recurrentConstraint),biasConstraint:Mt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};Xp.className="SimpleRNNCell";J.registerClass(Xp);var Nd=class extends cn{constructor(e){e.cell=new Xp(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return new e(t)}};Nd.className="SimpleRNN";J.registerClass(Nd);var Yp=class extends Tl{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new B("GRUCell does not support reset_after parameter set to true.");this.units=e.units,qt(this.units,"units"),this.activation=Gs(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Gs(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=dt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=dt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=dt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=Lt(e.kernelConstraint),this.recurrentConstraint=Lt(e.recurrentConstraint),this.biasConstraint=Lt(e.biasConstraint),this.dropout=lc([1,zs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lc([1,zs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=et(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{if(e=e,e.length!==2)throw new B(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=qa({ones:()=>tr(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=qa({ones:()=>tr(o),rate:this.recurrentDropout,training:n,count:3}));let s=this.dropoutMask,a=this.recurrentDropoutMask,i,l,u;0<this.dropout&&this.dropout<1&&(e=P(e,s[0]));let c=ns(e,this.kernel.read());this.useBias&&(c=on(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=P(o,a[0]));let p=this.recurrentKernel.read(),[m,f]=ur(p,[2*this.units,this.units],p.rank-1),d=ns(o,m),[h,g,x]=ur(c,3,c.rank-1),[b,w]=ur(d,2,d.rank-1);i=this.recurrentActivation.apply(Q(h,b)),l=this.recurrentActivation.apply(Q(g,w));let _=ns(P(l,o),f);u=this.activation.apply(Q(x,_));let k=Q(P(i,o),P(Q(1,Ue(i)),u));return[k,k]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Vs(this.activation),recurrentActivation:Vs(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Nt(this.kernelInitializer),recurrentInitializer:Nt(this.recurrentInitializer),biasInitializer:Nt(this.biasInitializer),kernelRegularizer:lt(this.kernelRegularizer),recurrentRegularizer:lt(this.recurrentRegularizer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),kernelConstraint:Mt(this.kernelConstraint),recurrentConstraint:Mt(this.recurrentConstraint),biasConstraint:Mt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};Yp.className="GRUCell";J.registerClass(Yp);var Sd=class extends cn{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Yp(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Sd.className="GRU";J.registerClass(Sd);var El=class extends Tl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,qt(this.units,"units"),this.activation=Gs(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Gs(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=dt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=dt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=dt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=Lt(e.kernelConstraint),this.recurrentConstraint=Lt(e.recurrentConstraint),this.biasConstraint=Lt(e.biasConstraint),this.dropout=lc([1,zs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lc([1,zs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=et(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,a=this.units;o=new(t=class extends sn{apply(l,u){let c=s.apply([a]),p=new cc().apply([a]),m=s.apply([a*2]);return $0($0(c,p),m)}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return V(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new B(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=qa({ones:()=>tr(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=qa({ones:()=>tr(o),rate:this.recurrentDropout,training:n,count:4}));let a=this.dropoutMask,i=this.recurrentDropoutMask,l,u,c,p;0<this.dropout&&this.dropout<1&&(e=P(e,a[0]));let m=ns(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=P(o,i[0])),m=Q(m,ns(o,this.recurrentKernel.read())),this.useBias&&(m=on(m,this.bias.read()));let[f,d,h,g]=ur(m,4,m.rank-1);l=this.recurrentActivation.apply(f),u=this.recurrentActivation.apply(d),c=Q(P(u,s),P(l,this.activation.apply(h))),p=this.recurrentActivation.apply(g);let x=P(p,this.activation.apply(c));return[x,x,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Vs(this.activation),recurrentActivation:Vs(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Nt(this.kernelInitializer),recurrentInitializer:Nt(this.recurrentInitializer),biasInitializer:Nt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:lt(this.kernelRegularizer),recurrentRegularizer:lt(this.recurrentRegularizer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),kernelConstraint:Mt(this.kernelConstraint),recurrentConstraint:Mt(this.recurrentConstraint),biasConstraint:Mt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};El.className="LSTMCell";J.registerClass(El);var Td=class extends cn{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new El(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Td.className="LSTM";J.registerClass(Td);var Kp=class extends Tl{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return V(()=>{e=e;let n=e.slice(1),o=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?o.push(n.splice(0,i.stateSize.length)):o.push(n.splice(0,1));o.reverse();let s=[],a;for(let i=0;i<this.cells.length;++i){let l=this.cells[i];n=o[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=l.call(a,t),s.push(a.slice(1))}n=[];for(let i of s.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){Sx(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,o)=>{Ls(`RNNCell_${o}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),o={cells:this.cells.map(t)};return Object.assign({},e,o)}static fromConfig(e,t,n={}){let o=[];for(let s of t.cells)o.push(Yr(s,n));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return od(e)}setWeights(e){let t=[];for(let n of this.cells){let o=n.weights.length,s=e.splice(o);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],s[a]])}Vp(t)}};Kp.className="StackedRNNCells";J.registerClass(Kp);function qa(r){let{ones:e,rate:t,training:n=!1,count:o=1}=r,s=()=>Cx(e(),t),a=()=>wl(s,e,n);return!o||o<=1?$t(a().clone()):Array(o).fill(void 0).map(a).map(l=>$t(l.clone()))}var $Q=function(r,e){var t={};for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&e.indexOf(n)<0&&(t[n]=r[n]);if(r!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,n=Object.getOwnPropertySymbols(r);o<n.length;o++)e.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(r,n[o])&&(t[n[o]]=r[n[o]]);return t};var uC=class extends cn{constructor(e){if(e.unroll)throw new Se("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Se("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Dt({ndim:5})]}call(e,t){return V(()=>{if(this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new B("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return V(()=>{let{stateSize:t}=this.cell,n=e.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],a=xt(s);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){V(()=>{if(!this.stateful)throw new Cn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xt(s)):this.states_=[xt(s)];else if(e==null)Ee(this.states_),this.keptStates!=null&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xt(s)):this.states_[0]=xt(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let i=0;i<this.states_.length;++i){let l=e[i],u=s;if(!y.arraysEqual(l.shape,u))throw new B(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[i]=l}}this.states_=this.states_.map(i=>$t(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:o,padding:s,strides:a,dilationRate:i}=this.cell,l=t==="channelsFirst",u=e[l?3:2],c=e[l?4:3],p=un(u,o[0],s,a[0],i[0]),m=un(c,o[1],s,a[1],i[1]);return[...e.slice(0,2),...l?[n,p,m]:[p,m,n]]}};uC.className="ConvRNN2D";var Zp=class extends El{constructor(e){let{filters:t,kernelSize:n,strides:o,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t}));this.filters=t,qt(this.filters,"filters"),this.kernelSize=Nl(n,2,"kernelSize"),this.kernelSize.forEach(l=>qt(l,"kernelSize")),this.strides=Nl(o||1,2,"strides"),this.strides.forEach(l=>qt(l,"strides")),this.padding=s||"valid",Xr(this.padding),this.dataFormat=a||"channelsLast",Ft(this.dataFormat),this.dilationRate=Nl(i||1,2,"dilationRate"),this.dilationRate.forEach(l=>qt(l,"dilationRate"))}build(e){var t;e=et(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[n]}`);let o=e[n],s=4,a=this.kernelSize.concat([o,this.filters*s]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){let u=this.biasInitializer,c=this.filters;l=new(t=class extends sn{apply(m,f){let d=u.apply([c]),h=Ir([c]),g=u.apply([c*2]);return Dp([d,h,g])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return V(()=>{if(e.length!==3)throw new B(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,o=e[0],s=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=qa({ones:()=>tr(o),rate:this.dropout,training:n,count:i}));let l=this.dropoutMask,u=(ie,se,pe)=>!se||!se[pe]?ie:P(se[pe],ie),c=u(o,l,0),p=u(o,l,1),m=u(o,l,2),f=u(o,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=qa({ones:()=>tr(s),rate:this.recurrentDropout,training:n,count:i}));let d=this.recurrentDropoutMask,h=u(s,d,0),g=u(s,d,1),x=u(s,d,2),b=u(s,d,3),w=3,[_,k,E,S]=ur(this.kernel.read(),i,w),[R,F,L,G]=this.useBias?ur(this.bias.read(),i):[null,null,null,null];c=this.inputConv(c,_,R,this.padding),p=this.inputConv(p,k,F,this.padding),m=this.inputConv(m,E,L,this.padding),f=this.inputConv(f,S,G,this.padding);let[j,U,Y,K]=ur(this.recurrentKernel.read(),i,w);h=this.recurrentConv(h,j),g=this.recurrentConv(g,U),x=this.recurrentConv(x,Y),b=this.recurrentConv(b,K);let Z=this.recurrentActivation.apply(Q(c,h)),te=this.recurrentActivation.apply(Q(p,g)),X=Q(P(te,a),P(Z,this.activation.apply(Q(m,x)))),re=P(this.recurrentActivation.apply(Q(f,b)),this.activation.apply(X));return[re,re,X]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=$Q(e,["units"]),o={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,o)}inputConv(e,t,n,o){let s=Ur(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?on(s,n,this.dataFormat):s}recurrentConv(e,t){return Ur(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Zp.className="ConvLSTM2DCell";J.registerClass(Zp);var Ed=class extends uC{constructor(e){let t=new Zp(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};Ed.className="ConvLSTM2D";J.registerClass(Ed);var Jp=class extends Me{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return n}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(0<this.rate&&this.rate<1){let o=t.training==null?!1:t.training,s=this.getNoiseShape(n);return wl(()=>Cx(n,this.rate,s,this.seed),()=>n,o)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Jp.className="Dropout";J.registerClass(Jp);var Ad=class extends Jp{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Ad.className="SpatialDropout1D";J.registerClass(Ad);var Dd=class extends Me{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,qt(this.units,"units"),this.activation=Gs(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=dt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=dt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Lt(e.kernelConstraint),this.biasConstraint=Lt(e.biasConstraint),this.kernelRegularizer=_t(e.kernelRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.activityRegularizer=_t(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=et(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=et(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=bx(this.activation.getClassName()),s;return o!=null?s=ns(n,this.kernel.read(),o,this.bias?this.bias.read():null):(s=ns(n,this.kernel.read()),this.bias!=null&&(s=on(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:Vs(this.activation),useBias:this.useBias,kernelInitializer:Nt(this.kernelInitializer),biasInitializer:Nt(this.biasInitializer),kernelRegularizer:lt(this.kernelRegularizer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),kernelConstraint:Mt(this.kernelConstraint),biasConstraint:Mt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Dd.className="Dense";J.registerClass(Dd);var $d=class extends Me{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=et(e);for(let t of e.slice(1))if(t==null)throw new B(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],rs(e,1)]}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let o=[0];for(let s=2;s<n.rank;++s)o.push(s);o.push(1),n=n.transpose(o)}return iL(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};$d.className="Flatten";J.registerClass($d);var Rd=class extends Me{constructor(e){super(e);this.supportsMasking=!0,this.activation=Gs(e.activation)}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.activation.apply(n)})}getConfig(){let e={activation:Vs(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Rd.className="Activation";J.registerClass(Rd);var Fd=class extends Me{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return V(()=>(e=Oe(e),oL(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Fd.className="RepeatVector";J.registerClass(Fd);var Od=class extends Me{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",o=t.slice(),s=1,a=null;for(let l=0;l<o.length;++l){let u=o[l];if(this.isUnknown(u))if(a===null)a=l;else throw new B("Can only specifiy one unknown dimension.");else s*=u}let i=rs(e);if(a!==null){if(s===0||i%s!=0)throw new B(n);o[a]=i/s}else if(i!==s)throw new B(n);return o}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=n.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return n.reshape(s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Od.className="Reshape";J.registerClass(Od);var Pd=class extends Me{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Lr(1,e.dims.length+1);if(!y.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Dt({ndim:this.dims.length+1})]}computeOutputShape(e){e=et(e);let t=e.slice();return this.dims.forEach((n,o)=>{t[o+1]=e[n]}),t}call(e,t){return We(Oe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Pd.className="Permute";J.registerClass(Pd);var Md=class extends Me{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Oe(e),o=-1;return il(Go(n,this.maskValue),o)}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=-1,s=!0,a=il(Go(n,this.maskValue),o,s);return n.mul(a.asType(n.dtype))})}};Md.className="Masking";J.registerClass(Md);var Ld=class extends Me{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(wt(e.inputLength))}this.inputDim=e.inputDim,qt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,qt(this.outputDim,"outputDim"),this.embeddingsInitializer=dt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=_t(e.embeddingsRegularizer),this.activityRegularizer=_t(e.activityRegularizer),this.embeddingsConstraint=Lt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return V(()=>this.maskZero?(e=Oe(e),Go(e,Ie(e))):null)}computeOutputShape(e){if(e=et(e),this.inputLength==null)return[...e,this.outputDim];let t=wt(this.inputLength);if(t.length!==e.length-1)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let o=0;o<t.length;++o){let s=t[o],a=e[o+1];if(s!=null&&a!=null&&s!==a)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e);return n.dtype!=="int32"&&(n=ja(n,"int32")),vx(this.embeddings.read(),n.as1D()).reshape(et(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Nt(this.embeddingsInitializer),embeddingsRegularizer:lt(this.embeddingsRegularizer),activityRegularizer:lt(this.activityRegularizer),embeddingsConstraint:Mt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Ld.className="Embedding";J.registerClass(Ld);var Al=class extends Me{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Se}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){let s=e[e.length-t.length+o],a=t[o];if(s==null||a==null||s<0||a<0)n.push(null);else if(s===1)n.push(a);else if(a===1)n.push(s);else{if(s!==a)throw new B("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[et(e)]),e=e,e.length<2)throw new B(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=ts(t),t.length>1)throw new B(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let o=e.map(s=>s.length);e.indexOf(null)===-1&&ts(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return V(()=>{if(e=e,this.reshapeRequired){let n=[],o=e.map(s=>s.rank);if(o.indexOf(null)===-1){let s=zs(o);for(let a of e){let i=a.rank;for(let l=0;l<s-i;++l)a=Wa(a,1);n.push(a)}return this.mergeFunction(n)}else{let s=!1;for(let l of e){let u=l.rank;if(u==null){let c=l.shape,p=c[0],m=c.slice(1).concat([p]),f=l.reshape([p].concat(rs(c.slice(1))));f=We(f,[1,0]),f=f.reshape(m),n.push(f),s=!0}else if(u>1){let c=Lr(1,u).concat([0]);n.push(We(l,c)),s=!0}else n.push(l)}let a=this.mergeFunction(n),i=a.rank;if(s){if(i==null){let l=a.shape,u=l.length,c=l[u-1],p=[c].concat(l.slice(0,l.length-1));a=We(a.reshape([-1,c]),[1,0]).reshape(p)}else if(i>1){let l=[i-1].concat(Lr(0,i-1));a=We(a,l)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){let s=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=ts(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return V(()=>{if(t==null)return null;if(!Array.isArray(t))throw new B("`mask` should be an Array");if(!Array.isArray(e))throw new B("`inputs` should be an Array");if(t.length!==e.length)throw new B(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:ir(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=dr(n,t[o]);return n})}},zd=class extends Al{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Q(t,e[n]);return t})}};zd.className="Add";J.registerClass(zd);var Bd=class extends Al{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=P(t,e[n]);return t})}};Bd.className="Multiply";J.registerClass(Bd);var Vd=class extends Al{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Q(t,e[n]);return P(1/e.length,t)})}};Vd.className="Average";J.registerClass(Vd);var Gd=class extends Al{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Hr(t,e[n]);return t})}};Gd.className="Maximum";J.registerClass(Gd);var jd=class extends Al{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=As(t,e[n]);return t})}};jd.className="Minimum";J.registerClass(jd);var Wd=class extends Al{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new B("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let o of e)if(o!=null){t=!1;break}if(t)return;let n=[];for(let o=0;o<e.length;++o){let s=e[o].slice();s.splice(this.axis,1);let a=!1;for(let i of n)if(y.arraysEqual(i,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new B("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return V(()=>Dp(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new B("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[o]==null||s[o]==null){n[o]=null;break}n[o]+=s[o]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new B("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new B("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new B(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return V(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let o=[];for(let a=0;a<e.length;++a)t[a]==null?o.push(tr(e[a]).asType("bool")):t[a].rank<e[a].rank?o.push(ir(t[a],-1)):o.push(t[a]);let s=Qe(o,this.axis);return _u(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Wd.className="Concatenate";J.registerClass(Wd);function Ud(r,e){for(;r<0;)r+=e;return r}function RQ(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new Se("batchDot is not implemented for tensors of 4D or higher rank yet");if(y.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),y.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new Se("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);let s=t;return V(()=>{let a;if(n>o){a=n-o;let l=[];for(let u=0;u<a;++u)l.push(1);e=e.reshape(e.shape.concat(l))}else if(o>n){a=o-n;let l=[];for(let u=0;u<a;++u)l.push(1);r=r.reshape(r.shape.concat(l))}else a=0;let i;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?i=r.mul(e).sum(s[0]):i=r.transpose([1,0]).mul(e).sum(s[1]);else{let l=s[0]!==r.shape.length-1,u=s[1]===e.shape.length-1;i=r.matMul(e,l,u)}if(a>0){let l;n>o?l=n+o-3:l=n-1;let u=[];for(let c=l;c<l+a;++c)u.push(c);i=i.squeeze(u)}return i.shape.length===1&&(i=i.expandDims(1)),i})}var qd=class extends Al{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Se("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);if(t[o[0]]!==n[o[1]])throw new B(`Dimension incompatibility: ${t[o[0]]} !== ${n[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new B(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,a)=>Ud(s,e[a].shape.length)):o=[Ud(this.axes,t.shape.length),Ud(this.axes,n.shape.length)],this.normalize&&(t=sd(t,o[0]),n=sd(n,o[1])),RQ(t,n,o)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Ud(this.axes,e.length),Ud(this.axes,t.length)],n}computeOutputShape(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Se("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);t.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};qd.className="Dot";J.registerClass(qd);var Hd=class extends Me{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e);return wl(()=>$p(n.shape,0,this.stddev).add(n),()=>n,t.training||!1)})}};Hd.className="GaussianNoise";J.registerClass(Hd);var Kd=class extends Me{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.rate>0&&this.rate<1?wl(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return n.mul($p(n.shape,1,s))},()=>n,t.training||!1):n})}};Kd.className="GaussianDropout";J.registerClass(Kd);var Xd=class extends Me{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return V(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return wl(()=>{let s=Oe(e),a=1.6732632423543772,i=1.0507009873554805,l=-a*i,u=tn(Ds(n),this.rate);u=ja(u,"float32");let c=((1-this.rate)*(1+this.rate*l**2))**-.5,p=-c*l*this.rate;return s.mul(u).add(u.add(-1).mul(l)).mul(c).add(p)},()=>Oe(e),t.training||!1)}return e})}};Xd.className="AlphaDropout";J.registerClass(Xd);function Yd(r,e,t,n,o,s=.001){let a;if(r.rank===2)a=Cw(r,e,t,n,o,s);else if(r.rank===3)a=Iw(r,e,t,n,o,s);else if(r.rank===4)a=Nw(r,e,t,n,o,s);else throw new Se(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function FQ(r,e,t,n,o=.001){return V(()=>{let s=Qc(r,n),a=s.mean,i=s.variance;return[Yd(r,a,i,t,e,o),a,i]})}function OQ(r,e,t,n,o=.001){return V(()=>{let s=Qc(r,n),a=s.mean,i=s.variance,l=[];for(let d of Lr(0,r.rank))n.indexOf(d)!==-1?l.push(1):l.push(r.shape[d]);let u=a.reshape(l),c=i.reshape(l),p=e==null?null:e.reshape(l),m=t==null?null:t.reshape(l);return[Yd(r,u,c,m,p,o),a,i]})}function PQ(r,e,t,n,o=.001){return y.arraysEqual(n.slice().sort(),Lr(0,r.rank-1))?FQ(r,e,t,n,o):OQ(r,e,t,n,o)}var Zd=class extends Me{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=dt(e.betaInitializer||"zeros"),this.gammaInitializer=dt(e.gammaInitializer||"ones"),this.movingMeanInitializer=dt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=dt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Lt(e.betaConstraint),this.gammaConstraint=Lt(e.gammaConstraint),this.betaRegularizer=_t(e.betaRegularizer),this.gammaRegularizer=_t(e.gammaRegularizer)}build(e){e=et(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new B(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Dt({ndim:e.length,axes:{[t]:n}})];let o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return V(()=>{let n=t.training==null?!1:t.training,o=Oe(e),s=o.shape,a=s.length,i=Lr(0,a),l=this.axis>=0?this.axis:this.axis+a;i.splice(l,1);let u=Jo(1,a);u[l]=s[l];let c=i.slice();c.sort();let p=!y.arraysEqual(c,Lr(0,a).slice(0,a-1)),m=()=>{if(p){let b=this.movingMean.read().reshape(u),w=this.movingVariance.read().reshape(u),_=this.center?this.beta.read().reshape(u):null,k=this.scale?this.gamma.read().reshape(u):null;return Yd(o,b,w,_,k,this.epsilon)}else return Yd(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return m();let[f,d,h]=PQ(o,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(b,w,_)=>{V(()=>{let k=1-_,E=b.read(),S=E.sub(w).mul(k);b.write(E.sub(S))})};return(()=>{g(this.movingMean,d,this.momentum),g(this.movingVariance,h,this.momentum)})(),f})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Nt(this.betaInitializer),gammaInitializer:Nt(this.gammaInitializer),movingMeanInitializer:Nt(this.movingMeanInitializer),movingVarianceInitializer:Nt(this.movingVarianceInitializer),betaRegularizer:lt(this.betaRegularizer),gammaRegularizer:lt(this.gammaRegularizer),betaConstraint:Mt(this.betaConstraint),gammaConstraint:Mt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Zd.className="BatchNormalization";J.registerClass(Zd);var Jd=class extends Me{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=dt(e.betaInitializer||"zeros"),this.gammaInitializer=dt(e.gammaInitializer||"ones"),this.betaRegularizer=_t(e.betaRegularizer),this.gammaRegularizer=_t(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=et(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==ts(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){let n=Oe(e),o=n.shape,s=o.length;return V(()=>{let a=!0,{mean:i,variance:l}=Qc(n,this.axis,a),u=Jo(1,s);for(let h of this.axis)u[h]=o[h];let c=h=>h!=null&&h.shape.length!==s&&this.axis!==[s-1]?h.reshape(u):h,p=c(this.gamma.read()),m=c(this.beta.read()),f=[],d=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(f.push(o[h]),d.push(1)):(f.push(1),d.push(o[h]));return i=i.tile(f),l=l.tile(f),p=p.tile(d),m=m.tile(d),Yd(n,i,l,m,p,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Nt(this.betaInitializer),gammaInitializer:Nt(this.gammaInitializer),betaRegularizer:lt(this.betaRegularizer),gammaRegularizer:lt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Jd.className="LayerNormalization";J.registerClass(Jd);function MQ(r,e,t){return V(()=>{if(r.rank!==4)throw new B(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new B("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Kr()),t!=="channelsLast"&&t!=="channelsFirst")throw new B(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],Rr(r,n)})}var Qd=class extends Me{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Kr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new B(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new B(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new B(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Dt({ndim:4})]}computeOutputShape(e){e=et(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return V(()=>MQ(Oe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Qd.className="ZeroPadding2D";J.registerClass(Qd);function Hx(r,e,t,n,o,s){return V(()=>{Ft(o),A0(s),Xr(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=Kr()),s==null&&(s="max"),r=wd(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Ea(r,e,t,i):a=va(r,e,t,i),o==="channelsFirst"&&(a=We(a,[0,3,1,2])),a})}function HL(r,e,t,n,o,s){return V(()=>{Ft(o),A0(s),Xr(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=Kr()),s==null&&(s="max"),r=sC(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Xm(r,e,t,i):a=Lm(r,e,t,i),o==="channelsFirst"&&(a=We(a,[0,4,1,2,3])),a})}var cC=class extends Me{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new B(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(qt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new B(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);qt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Xr(this.padding),this.inputSpec=[new Dt({ndim:3})]}computeOutputShape(e){e=et(e);let t=un(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return V(()=>{this.invokeCallHook(e,t),e=Wa(Oe(e),2);let n=this.poolingFunction(Oe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return _n(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},eh=class extends cC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ft(s),Xr(o),Hx(e,t,n,o,s,"max")}};eh.className="MaxPooling1D";J.registerClass(eh);var th=class extends cC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ft(s),Xr(o),Hx(e,t,n,o,s,"avg")}};th.className="AveragePooling1D";J.registerClass(th);var pC=class extends Me{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new B(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];qt(this.poolSize,"poolSize"),qt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ft(this.dataFormat),Xr(this.padding),this.inputSpec=[new Dt({ndim:4})]}computeOutputShape(e){e=et(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=un(t,this.poolSize[0],this.padding,this.strides[0]),n=un(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return V(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},rh=class extends pC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ft(s),Xr(o),Hx(e,t,n,o,s,"max")}};rh.className="MaxPooling2D";J.registerClass(rh);var nh=class extends pC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ft(s),Xr(o),Hx(e,t,n,o,s,"avg")}};nh.className="AveragePooling2D";J.registerClass(nh);var mC=class extends Me{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new B(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];qt(this.poolSize,"poolSize"),qt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ft(this.dataFormat),Xr(this.padding),this.inputSpec=[new Dt({ndim:5})]}computeOutputShape(e){e=et(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=un(t,this.poolSize[0],this.padding,this.strides[0]),n=un(n,this.poolSize[1],this.padding,this.strides[1]),o=un(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return V(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},oh=class extends mC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ft(s),Xr(o),HL(e,t,n,o,s,"max")}};oh.className="MaxPooling3D";J.registerClass(oh);var sh=class extends mC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ft(s),Xr(o),HL(e,t,n,o,s,"avg")}};sh.className="AveragePooling3D";J.registerClass(sh);var fC=class extends Me{constructor(e){super(e);this.inputSpec=[new Dt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Se}},ih=class extends fC{constructor(e){super(e||{})}call(e,t){return V(()=>{let n=Oe(e);return gt(n,1)})}};ih.className="GlobalAveragePooling1D";J.registerClass(ih);var ah=class extends fC{constructor(e){super(e||{})}call(e,t){return V(()=>{let n=Oe(e);return lr(n,1)})}};ah.className="GlobalMaxPooling1D";J.registerClass(ah);var dC=class extends Me{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ft(this.dataFormat),this.inputSpec=[new Dt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Se}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},lh=class extends dC{call(e,t){return V(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?gt(n,[1,2]):gt(n,[2,3])})}};lh.className="GlobalAveragePooling2D";J.registerClass(lh);var uh=class extends dC{call(e,t){return V(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?lr(n,[1,2]):lr(n,[2,3])})}};uh.className="GlobalMaxPooling2D";J.registerClass(uh);var hC=class extends Me{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let o=t.layer,s=Yr(o,n);delete t.layer;let a={layer:s};return Object.assign(a,t),new e(a)}},ch=class extends hC{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=et(e),e.length<3)throw new B(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=et(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),o=e[1];return[n[0],o].concat(n.slice(1))}call(e,t){return V(()=>(e=Oe(e),lC((a,i)=>[Oe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};ch.className="TimeDistributed";J.registerClass(ch);function LQ(r){qi(JM,"BidirectionalMergeMode",r)}var zQ="concat",ph=class extends hC{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Yr(n),t.goBackwards=t.goBackwards!==!0;let o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=Yr(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?zQ:e.mergeMode,LQ(this.mergeMode),e.weights)throw new Se("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,o,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):gr(o)}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=aC(e,n,o,this.numConstants);if(e=s.inputs,n=s.initialState,o=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&o==null)return super.apply(e,t);let a=[],i=[];if(n!=null){let u=n.length;if(u%2>0)throw new B("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let c=n.map(p=>new Dt({shape:p.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),i.push(...c)}if(o!=null)throw new Se("Support for constants in Bidirectional layers is not implemented yet.");let l=a[0]instanceof Br;for(let u of a)if(u instanceof Br!==l)throw new B("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){let u=[e].concat(a),c=this.inputSpec.concat(i),p=this.inputSpec;this.inputSpec=c;let m=super.apply(u,t);return this.inputSpec=p,m}else return super.apply(e,t)}call(e,t){return V(()=>{let n=t.initialState,o,s;if(n==null)o=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let l=n.slice(0,n.length/2),u=n.slice(n.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(o)&&(a=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=Kt(s,1));let i;return this.mergeMode==="concat"?i=Dp([o,s]):this.mergeMode==="sum"?i=Q(o,s):this.mergeMode==="ave"?i=P(.5,Q(o,s)):this.mergeMode==="mul"?i=P(o,s):this.mergeMode==null&&(i=[o,s]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ls(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ls(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Yr(t.layer);if(delete t.layer,t.numConstants!=null)throw new Se("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=t;return o.layer=n,new e(o)}};ph.className="Bidirectional";J.registerClass(ph);function BQ(r){return new Hi(r)}function VQ(r){return new gd(r)}function GQ(r){return new fd(r)}function jQ(r){return new dd(r)}function WQ(r){return new hd(r)}function UQ(r){return new yd(r)}function qQ(r){return new xd(r)}function HQ(r){return new xc(r)}function KQ(r){return new Sl(r)}function XQ(r){return new _d(r)}function YQ(r){return new gc(r)}function ZQ(r){return new kd(r)}function JQ(r){return new vd(r)}function QQ(r){return new Cd(r)}function eee(r){return new Id(r)}function tee(r){return new Rd(r)}function ree(r){return new Dd(r)}function nee(r){return new Jp(r)}function oee(r){return new Ad(r)}function see(r){return new $d(r)}function iee(r){return new Fd(r)}function aee(r){return new Od(r)}function lee(r){return new Pd(r)}function uee(r){return new Ld(r)}function cee(r){return new zd(r)}function pee(r){return new Vd(r)}function mee(r){return new Wd(r)}function fee(r){return new Gd(r)}function dee(r){return new jd(r)}function hee(r){return new Bd(r)}function gee(r){return new qd(r)}function xee(r){return new Zd(r)}function yee(r){return new Jd(r)}function bee(r){return new Qd(r)}function xC(r){return new th(r)}function wee(r){return xC(r)}function _ee(r){return xC(r)}function yC(r){return new nh(r)}function kee(r){return yC(r)}function vee(r){return yC(r)}function bC(r){return new sh(r)}function Cee(r){return bC(r)}function Iee(r){return bC(r)}function Nee(r){return new ih(r)}function See(r){return new lh(r)}function KL(r){return new ah(r)}function XL(r){return new uh(r)}function YL(r){return new eh(r)}function ZL(r){return new rh(r)}function Tee(r){return new oh(r)}function Eee(r){return new Sd(r)}function Aee(r){return new Yp(r)}function Dee(r){return new Td(r)}function $ee(r){return new El(r)}function Ree(r){return new Nd(r)}function Fee(r){return new Xp(r)}function Oee(r){return new Ed(r)}function Pee(r){return new Zp(r)}function Mee(r){return new cn(r)}function Lee(r){return new Kp(r)}function zee(r){return new ph(r)}function Bee(r){return new ch(r)}var Vee=KL,Gee=XL,jee=YL,Wee=ZL;function Uee(r){return new Hd(r)}function qee(r){return new Kd(r)}function Hee(r){return new Xd(r)}function Kee(r){return new Md(r)}var wC={};Ye(wC,{MAPE:()=>ste,MSE:()=>lte,binaryAccuracy:()=>Xee,binaryCrossentropy:()=>Yee,categoricalAccuracy:()=>Jee,categoricalCrossentropy:()=>Qee,cosineProximity:()=>rte,mape:()=>ite,meanAbsoluteError:()=>nte,meanAbsolutePercentageError:()=>ote,meanSquaredError:()=>ate,mse:()=>ute,precision:()=>ete,recall:()=>tte,sparseCategoricalAccuracy:()=>Zee});function Xee(r,e){return ld(r,e)}function Yee(r,e){return Px(r,e)}function Zee(r,e){return Mx(r,e)}function Jee(r,e){return ud(r,e)}function Qee(r,e){return cd(r,e)}function ete(r,e){return P0(r,e)}function tte(r,e){return yL(r,e)}function rte(r,e){return id(r,e)}function nte(r,e){return Gp(r,e)}function ote(r,e){return Cl(r,e)}function ste(r,e){return Cl(r,e)}function ite(r,e){return Cl(r,e)}function ate(r,e){return Xi(r,e)}function lte(r,e){return Xi(r,e)}function ute(r,e){return Xi(r,e)}var _C={};Ye(_C,{modelFromJSON:()=>PL});var kC={};Ye(kC,{l1:()=>pte,l1l2:()=>cte,l2:()=>mte});function cte(r){return new dc(r)}function pte(r){return GL(r)}function mte(r){return jL(r)}var Kx=class extends vl{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof In))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Xx(r,e){return r<e}function JL(r,e){return r>e}var Yx=class extends Kx{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Se("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Xx:this.mode==="max"?this.monitorFunc=JL:this.monitor.indexOf("acc")!==-1?this.monitorFunc=JL:this.monitorFunc=Xx,this.monitorFunc===Xx&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Xx?Infinity:-Infinity}async onEpochEnd(e,t){await Ki(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function fte(r){return new Yx(r)}var QL={earlyStopping:fte};var os;(function(r){r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(os||(os={}));var ez;(function(r){let e;(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(ez||(ez={}));var vC={};function tz(r,e){let t={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e};vC[r]=t}function Zx(r){return vC[r]}function rz(r){delete vC[r]}function C(r,e,t,n,o){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd;if(s.type==="tensor")return xr(e.inputNames[s.inputIndexStart],t,n,o);if(s.type==="tensors")return e.inputNames.slice(i,l).map(m=>xr(m,t,n,o));let u=xr(e.inputNames.slice(i)[0],t,n,o),c=u.dataSync();return s.type==="number"?c[0]:y.toNestedArray(u.shape,c)}let a=e.attrParams[r];return a&&a.value}function xr(r,e,t,n){let[o,s]=Zr(r);if(n!=null){let i=n.getHashTableHandleByName(o);if(i!=null)return i}let a=t.currentContextIds.find(i=>!!e[Jx(o,i)]);return a!==void 0?e[Jx(o,a)][s]:void 0}function nz(r,e,t){return e[Jx(r,t.currentContextId)]}function js(r,e){let[t,n]=Zr(r);return[Jx(t,e&&e.currentContextId),n]}function Jx(r,e){return e?`${r}-${e}`:r}function Zr(r){let e=r.split(":");return e.length===1?[r,0]:[e[0],Number(e[e.length-1])]}function mh(r,e,t){let n=C("pad",r,e,t);if(n==="explicit"){n=C("explicitPaddings",r,e,t);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Ws(r){return r.kept?r:Fn(r)}var CC={};Ye(CC,{json:()=>dte});var dte=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var IC={};Ye(IC,{json:()=>hte});var hte=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var NC={};Ye(NC,{json:()=>gte});var gte=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];var SC={};Ye(SC,{json:()=>xte});var xte=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var TC={};Ye(TC,{json:()=>yte});var yte=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var EC={};Ye(EC,{json:()=>bte});var bte=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var AC={};Ye(AC,{json:()=>wte});var wte=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var DC={};Ye(DC,{json:()=>_te});var _te=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var $C={};Ye($C,{json:()=>kte});var kte=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}];var RC={};Ye(RC,{json:()=>vte});var vte=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];var FC={};Ye(FC,{json:()=>Cte});var Cte=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var OC={};Ye(OC,{json:()=>Ite});var Ite=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var PC={};Ye(PC,{json:()=>Nte});var Nte=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var MC={};Ye(MC,{json:()=>Ste});var Ste=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var LC={};Ye(LC,{json:()=>Tte});var Tte=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var zC={};Ye(zC,{json:()=>Ete});var Ete=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var BC={};Ye(BC,{json:()=>Ate});var Ate=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];var Qx=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[CC,IC,NC,SC,TC,EC,AC,FC,RC,DC,OC,PC,MC,LC,zC,BC,$C],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){let n=e.node,o=[],s=[],a=[],i=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),l=[],u=[],c={},p={};t!=null&&(c=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));let m=Object.keys(i);m.forEach(h=>{let g=i[h];g.inputNames.forEach(x=>{let[b]=js(x);g.inputs.push(i[b]),i[b].children.push(g)})}),Object.keys(p).length===0?m.forEach(h=>{let g=i[h];g.children.length===0&&u.push(g)}):Object.keys(p).forEach(h=>{let[g]=js(h),x=i[g];x!=null&&(x.signatureKey=p[h],u.push(x))}),Object.keys(c).length>0?Object.keys(c).forEach(h=>{let[g]=js(h),x=i[g];x&&(x.signatureKey=c[h],l.push(x))}):l=o;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let d={nodes:i,inputs:l,outputs:u,weights:s,placeholders:o,signature:t,functions:f};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=Zx(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.substr(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,s)=>{let a=s.type,i;switch(s.type){case"string":i=ey(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ey(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=ay(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ay(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=ry(e.attr,s.tfName,s.defaultValue||0),i===void 0&&!!s.tfDeprecatedName&&(i=ry(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=iy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=iy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=ty(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ty(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=uy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=uy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=sy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=sy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=ly(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ly(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=ny(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ny(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=oy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=oy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=oz(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=oz(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return o[s.name]={value:i,type:a},o},{})),n}mapFunction(e){let t=e.nodeDef,n=[],o=[],s={};t!=null&&(s=t.reduce((p,m)=>(p[m.name]=this.mapNode(m),m.op==="Const"&&o.push(p[m.name]),p),{}));let a=[],i=[];e.signature.inputArg.forEach(p=>{let[m]=js(p.name),f={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:VC(p.type),type:"dtype"}},children:[]};f.signatureKey=p.name,a.push(f),s[m]=f}),Object.keys(s).forEach(p=>{let m=s[p];m.inputNames.forEach(f=>{let[d]=js(f);m.inputs.push(s[d]),s[d].children.push(m)})});let u=e.ret;e.signature.outputArg.forEach(p=>{let[m,f]=js(u[p.name]),d=s[m];d!=null&&(d.defaultOutput=f,i.push(d))});let c=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:i,weights:o,placeholders:n,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function Dte(r){let e=W().global;if(typeof e.atob!="undefined")return e.atob(r);if(typeof Buffer!="undefined")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function sz(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):Dte(r);return e?t:t.toLowerCase()}function ey(r,e,t,n=!1){let o=r[e];return o!=null?sz(o.s,n):t}function ty(r,e,t){let n=r[e];return n?n.b:t}function ry(r,e,t){let n=r[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function VC(r){switch(typeof r=="string"&&(r=os[r]),r){case os.DT_FLOAT:return"float32";case os.DT_INT32:case os.DT_INT64:case os.DT_INT8:case os.DT_UINT8:return"int32";case os.DT_BOOL:return"bool";case os.DT_DOUBLE:return"float32";case os.DT_STRING:return"string";default:return null}}function oz(r,e,t){let n=r[e];return n&&n.func?n.func.name:t}function ny(r,e,t){let n=r[e];return n&&n.type?VC(n.type):t}function oy(r,e,t){let n=r[e];return n&&n.list&&n.list.type?n.list.type.map(o=>VC(o)):t}function iz(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function sy(r,e,t){let n=r[e];return n&&n.shape?iz(n.shape):t}function iy(r,e,t){let n=r[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function ay(r,e,t,n=!1){let o=r[e];return o&&o.list&&o.list.s?o.list.s.map(s=>sz(s,n)):t}function ly(r,e,t){let n=r[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>iz(o)):t}function uy(r,e,t){let n=r[e];return n&&n.list&&n.list.b?n.list.b:t}var GC=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(e){return xr(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return xr(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return ry(this.node.rawAttrs,e,t);if(n.s!=null)return ey(this.node.rawAttrs,e,t);if(n.b!=null)return ty(this.node.rawAttrs,e,t);if(n.shape!=null)return sy(this.node.rawAttrs,e,t);if(n.type!=null)return ny(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return iy(this.node.rawAttrs,e,t);if(n.list.s!=null)return ay(this.node.rawAttrs,e,t);if(n.list.shape!=null)return ly(this.node.rawAttrs,e,t);if(n.list.b!=null)return uy(this.node.rawAttrs,e,t);if(n.list.type!=null)return oy(this.node.rawAttrs,e,t)}return t}};var az=(r,e,t)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[Q(C("a",r,e,t),C("b",r,e,t))];case"AddN":return[ww(C("tensors",r,e,t))];case"FloorMod":case"Mod":return[Zm(C("a",r,e,t),C("b",r,e,t))];case"Mul":return[P(C("a",r,e,t),C("b",r,e,t))];case"RealDiv":case"Div":return[de(C("a",r,e,t),C("b",r,e,t))];case"DivNoNan":return[jm(C("a",r,e,t),C("b",r,e,t))];case"FloorDiv":return[wu(C("a",r,e,t),C("b",r,e,t))];case"Sub":return[ue(C("a",r,e,t),C("b",r,e,t))];case"Minimum":return[As(C("a",r,e,t),C("b",r,e,t))];case"Maximum":return[Hr(C("a",r,e,t),C("b",r,e,t))];case"Pow":return[Fr(C("a",r,e,t),C("b",r,e,t))];case"SquaredDifference":return[Vu(C("a",r,e,t),C("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var lz=(r,e,t)=>{switch(r.op){case"Abs":case"ComplexAbs":return[Et(C("x",r,e,t))];case"Acos":return[Am(C("x",r,e,t))];case"Acosh":return[Dm(C("x",r,e,t))];case"Asin":return[Rm(C("x",r,e,t))];case"Asinh":return[Fm(C("x",r,e,t))];case"Atan":return[Om(C("x",r,e,t))];case"Atan2":return[Pm(C("x",r,e,t),C("y",r,e,t))];case"Atanh":return[Mm(C("x",r,e,t))];case"Ceil":return[zm(C("x",r,e,t))];case"Complex":return[bn(C("real",r,e,t),C("imag",r,e,t))];case"Cos":return[Ia(C("x",r,e,t))];case"Cosh":return[Nu(C("x",r,e,t))];case"Elu":return[Ss(C("x",r,e,t))];case"Erf":return[Wm(C("x",r,e,t))];case"Exp":return[Yt(C("x",r,e,t))];case"Expm1":return[Um(C("x",r,e,t))];case"Floor":return[Ts(C("x",r,e,t))];case"Log":return[ar(C("x",r,e,t))];case"Log1p":return[Au(C("x",r,e,t))];case"Imag":return[Tu(C("x",r,e,t))];case"Neg":return[Ue(C("x",r,e,t))];case"Reciprocal":return[Jm(C("x",r,e,t))];case"Real":return[ul(C("x",r,e,t))];case"Relu":return[Nr(C("x",r,e,t))];case"Round":return[Qm(C("x",r,e,t))];case"Selu":return[Mu(C("x",r,e,t))];case"Sigmoid":return[Wr(C("x",r,e,t))];case"Sin":return[Lu(C("x",r,e,t))];case"Sign":return[tf(C("x",r,e,t))];case"Sinh":return[zu(C("x",r,e,t))];case"Softplus":return[Es(C("x",r,e,t))];case"Sqrt":return[yt(C("x",r,e,t))];case"Square":return[Pe(C("x",r,e,t))];case"Tanh":return[Li(C("x",r,e,t))];case"Tan":return[sf(C("x",r,e,t))];case"ClipByValue":return[sr(C("x",r,e,t),C("clipValueMin",r,e,t),C("clipValueMax",r,e,t))];case"Relu6":return[Ou(C("x",r,e,t))];case"Rsqrt":return[Pu(xr(r.inputNames[0],e,t))];case"Prod":return[Ru(C("x",r,e,t),C("axes",r,e,t))];case"LeakyRelu":return[Sa(C("x",r,e,t),C("alpha",r,e,t))];case"Prelu":return[Da(C("x",r,e,t),C("alpha",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Nn(r,e,t=""){if(!(typeof r=="number"||typeof e=="number")){y.assert(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=e[n];y.assert(o<0||s<0||o===s,()=>t+` Shapes ${r} and ${e} must match`)}}}function uz(r){return!(typeof r=="number"||r.some(e=>e<0))}function Qp(r,e,t){let n=cy(r,t),o=!uz(n);if(o&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&e.forEach(s=>{n=cy(s.shape,n)}),!uz(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function cy(r,e){if(typeof r=="number")return e;if(typeof e=="number")return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);let t=[];for(let n=0;n<r.length;++n){let o=r[n],s=e[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[n]=o>=0?o:s}return t}var jC=class{constructor(e,t,n,o,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=o,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=le(0),$t(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Nn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,$t(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return $r([],[0].concat(this.elementShape));let n=this.readMany(e);return Nn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Vt(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return $r([],[0].concat(this.elementShape));let t=[];for(let o=0;o<this.size();o++)t.push(o);let n=this.readMany(t);return Nn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Qe(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,cr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,o=e.map(l=>(n+=l,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,a=[];V(()=>{t=z(t,[1,n,s]);for(let l=0;l<e.length;++l){let u=l===0?0:o[l-1],c=[0,u,0],p=[1,e[l],s];a[l]=z(Fe(t,c,p),this.elementShape)}return a});let i=[];for(let l=0;l<e.length;l++)i[l]=l;this.writeMany(i,a)}};var yc=class{constructor(e,t,n,o=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Nn(t,s.shape,"TensorList shape mismatch: "),$t(s)}),this.idTensor=le(0),this.maxNumElements=o,$t(this.idTensor)}get id(){return this.idTensor.id}copy(){return new yc([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Nn(e,this.elementShape,"TensorList shape mismatch: ");let o=Qp(this.elementShape,this.tensors,e);return V(()=>{let s=this.tensors.map(a=>z(a,o));return Vt(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Qp(this.elementShape,this.tensors,e),o=this.tensors.pop();return Nn(o.shape,e,"TensorList shape mismatch: "),z(o,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Nn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");$t(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Nn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let o=Qp(this.elementShape,this.tensors,t);return z(this.tensors[e],o)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Nn(this.elementShape,t.shape,"TensorList shape mismatch: "),$t(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Nn(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let o=Qp(this.elementShape,this.tensors,n);return e.length===0?$r([],[0].concat(o)):V(()=>{let s=e.map(a=>z(this.tensors[a],o));return Vt(s,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Nn(this.elementShape,t,"TensorList shape mismatch: ");let n=Qp(this.elementShape,this.tensors,t);return this.size()===0?$r([],[0].concat(n)):V(()=>{let o=this.tensors.map(s=>z(s,n));return Qe(o,0)})}};function cz(r,e,t){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let o=r.shape.slice(1);Nn(o,e,"TensorList shape mismatch: ");let s=cr(r);return new yc(s,e,n)}function pz(r,e,t){return new yc([],r,e,t)}function mz(r,e,t,n){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new yc([],t,r.dtype,n),a=cr(r,0);return e.forEach((i,l)=>{s.setItem(i,a[l])}),s}function fz(r,e,t){let n=0,o=e.map(c=>(n+=c,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),a=cy(s,t),i=n===0?0:r.size/n,l=V(()=>{let c=[];r=z(r,[1,n,i]);for(let p=0;p<e.length;++p){let m=p===0?0:o[p-1],f=[0,m,0],d=[1,e[p],i];c[p]=z(Fe(r,f,d),a)}return r.dispose(),c}),u=new yc([],t,r.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}var dz=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let n=C("thenBranch",r,e,t),o=C("elseBranch",r,e,t),s=C("cond",r,e,t),a=C("args",r,e,t);return(await s.data())[0]?t.functionMap[n].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let n=C("body",r,e,t),o=C("cond",r,e,t),s=C("args",r,e,t),a=await t.functionMap[o].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),i=s.map(c=>c.id),l=await a[0].data();a.forEach(c=>{!c.kept&&i.indexOf(c.id)===-1&&c.dispose()});let u=s;for(;l[0];){let c=u;u=await t.functionMap[n].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);let p=u.map(f=>f.id);c.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()});let m=await t.functionMap[o].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);l=await m[0].data(),m.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()})}return u}case"LoopCond":{let n=C("pred",r,e,t);return[Ws(n)]}case"Switch":{let n=C("pred",r,e,t),o=C("data",r,e,t);return o.kept||(o=Ws(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>xr(o,e,t)!==void 0);if(n){let o=xr(n,e,t);return[Ws(o)]}return}case"Enter":{let n=C("frameName",r,e,t),o=C("tensor",r,e,t);return t.enterFrame(n),[Ws(o)]}case"Exit":{let n=C("tensor",r,e,t);return t.exitFrame(),[Ws(n)]}case"NextIteration":{let n=C("tensor",r,e,t);return t.nextIteration(),[Ws(n)]}case"TensorArrayV3":{let n=C("size",r,e,t),o=C("dtype",r,e,t),s=C("elementShape",r,e,t),a=C("dynamicSize",r,e,t),i=C("clearAfterRead",r,e,t),l=C("identicalElementShapes",r,e,t),u=C("name",r,e,t),c=new jC(u,o,n,s,l,a,i);return t.addTensorArray(c),[c.idTensor,le(1)]}case"TensorArrayWriteV3":{let n=C("tensorArrayId",r,e,t),o=C("index",r,e,t),s=C("tensor",r,e,t),a=t.getTensorArray(n.id);return a.write(o,s),[a.idTensor]}case"TensorArrayReadV3":{let n=C("tensorArrayId",r,e,t),o=C("index",r,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=C("tensorArrayId",r,e,t),o=C("indices",r,e,t),s=C("dtype",r,e,t);return[t.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=C("tensorArrayId",r,e,t),o=C("indices",r,e,t),s=C("tensor",r,e,t),a=t.getTensorArray(n.id);return a.scatter(o,s),[a.idTensor]}case"TensorArrayConcatV3":{let n=C("tensorArrayId",r,e,t),o=t.getTensorArray(n.id),s=C("dtype",r,e,t);return[o.concat(s)]}case"TensorArraySplitV3":{let n=C("tensorArrayId",r,e,t),o=C("tensor",r,e,t),s=C("lengths",r,e,t),a=t.getTensorArray(n.id);return a.split(s,o),[a.idTensor]}case"TensorArraySizeV3":{let n=C("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return[le(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=C("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=C("tensorListId",r,e,t),o=C("index",r,e,t),s=C("tensor",r,e,t),a=t.getTensorList(n.id);return a.setItem(o,s),[a.idTensor]}case"TensorListGetItem":{let n=C("tensorListId",r,e,t),o=C("index",r,e,t),s=C("elementShape",r,e,t),a=C("elementDType",r,e,t);return[t.getTensorList(n.id).getItem(o,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let n=C("indices",r,e,t),o=C("tensor",r,e,t),s=C("elementShape",r,e,t),a=C("numElements",r,e,t),i=mz(o,n,s,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=C("elementShape",r,e,t),o=C("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=C(s,r,e,t),i=pz(n,o,a);return t.addTensorList(i),[i.idTensor]}case"TensorListGather":{let n=C("tensorListId",r,e,t),o=C("indices",r,e,t),s=C("elementShape",r,e,t),a=C("elementDType",r,e,t);return[t.getTensorList(n.id).gather(o,a,s)]}case"TensorListStack":{let n=C("tensorListId",r,e,t),o=C("elementShape",r,e,t),s=C("elementDType",r,e,t),a=C("numElements",r,e,t);return[t.getTensorList(n.id).stack(o,s,a)]}case"TensorListFromTensor":{let n=C("tensor",r,e,t),o=C("elementShape",r,e,t),s=C("elementDType",r,e,t),a=cz(n,o,s);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":{let n=C("tensorListId",r,e,t),o=t.getTensorList(n.id),s=C("dtype",r,e,t),a=C("elementShape",r,e,t);return[o.concat(s,a)]}case"TensorListPushBack":{let n=C("tensorListId",r,e,t),o=C("tensor",r,e,t),s=t.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=C("tensorListId",r,e,t),o=C("elementShape",r,e,t),s=C("elementDType",r,e,t);return[t.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=C("tensor",r,e,t),o=C("elementShape",r,e,t),s=C("lengths",r,e,t),a=fz(n,s,o);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function hz(r,e,t){let[n,o]=C("fusedOps",r,e,t),s=n==="biasadd",a=o==="prelu",i=n==="fusedbatchnorm",l=C("numArgs",r,e,t);if(s){if(a&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");let u=C("strides",r,e,t),c=mh(r,e,t),p=C("dataFormat",r,e,t).toUpperCase(),m=C("dilations",r,e,t),[f,d]=C("args",r,e,t),h=C("leakyreluAlpha",r,e,t);return{stride:u,pad:c,dataFormat:p,dilations:m,biasArg:f,preluArg:d,activationFunc:o,leakyreluAlpha:h}}var gz=(r,e,t)=>{switch(r.op){case"Conv1D":{let n=C("stride",r,e,t),o=C("pad",r,e,t),s=C("dataFormat",r,e,t).toUpperCase(),a=C("dilation",r,e,t);return[Cu(C("x",r,e,t),C("filter",r,e,t),n,o,s,a)]}case"Conv2D":{let n=C("strides",r,e,t),o=mh(r,e,t),s=C("dataFormat",r,e,t).toUpperCase(),a=C("dilations",r,e,t);return[Ur(C("x",r,e,t),C("filter",r,e,t),[n[1],n[2]],o,s,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:n,pad:o,dataFormat:s,dilations:a,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=hz(r,e,t);return[jo.conv2d({x:C("x",r,e,t),filter:C("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:o,dataFormat:s,dilations:a,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=hz(r,e,t);return[jo.depthwiseConv2d({x:C("x",r,e,t),filter:C("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=C("outputShape",r,e,t),o=C("strides",r,e,t),s=mh(r,e,t);return[Iu(C("x",r,e,t),C("filter",r,e,t),n,[o[1],o[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=C("strides",r,e,t),o=mh(r,e,t),s=C("dilations",r,e,t),a=C("dataFormat",r,e,t).toUpperCase();return[Ns(C("input",r,e,t),C("filter",r,e,t),[n[1],n[2]],o,a,[s[1],s[2]])]}case"Conv3D":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("dataFormat",r,e,t).toUpperCase(),a=C("dilations",r,e,t);return[Bm(C("x",r,e,t),C("filter",r,e,t),[n[1],n[2],n[3]],o,s,[a[1],a[2],a[3]])]}case"AvgPool":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t);return[va(C("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPool":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t);return[Ea(C("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPoolWithArgmax":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t),a=C("includeBatchInIndex",r,e,t),{result:i,indexes:l}=jw(C("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o,a);return[i,l]}case"AvgPool3D":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t);return[Lm(C("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"MaxPool3D":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t);return[Xm(C("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"Dilation2D":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("dilations",r,e,t),a=n[1],i=n[2],l=s[1],u=s[2];return[Gm(C("x",r,e,t),C("filter",r,e,t),[a,i],o,[l,u],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var xz=(r,e,t)=>{switch(r.op){case"Fill":{let n=C("shape",r,e,t),o=C("dtype",r,e,t),s=C("value",r,e,t);return[Na(n,s,o)]}case"LinSpace":{let n=C("start",r,e,t),o=C("stop",r,e,t),s=C("num",r,e,t);return[Mw(n,o,s)]}case"Multinomial":{let n=C("logits",r,e,t),o=C("numSamples",r,e,t),s=C("seed",r,e,t);return[Ww(n,o,s)]}case"OneHot":{let n=C("indices",r,e,t),o=C("depth",r,e,t),s=C("onValue",r,e,t),a=C("offValue",r,e,t);return[Is(n,o,s,a)]}case"Ones":return[Ir(C("shape",r,e,t),C("dtype",r,e,t))];case"OnesLike":return[tr(C("x",r,e,t))];case"RandomUniform":return[Ds(C("shape",r,e,t),C("minval",r,e,t),C("maxval",r,e,t),C("dtype",r,e,t))];case"Range":{let n=C("start",r,e,t),o=C("stop",r,e,t),s=C("step",r,e,t);return[tp(n,o,s,C("dtype",r,e,t))]}case"TruncatedNormal":{let n=C("shape",r,e,t),o=C("mean",r,e,t),s=C("stdDev",r,e,t),a=C("seed",r,e,t);return[Gu(n,o,s,C("dtype",r,e,t),a)]}case"Zeros":return[xt(C("shape",r,e,t),C("dtype",r,e,t))];case"ZerosLike":return[Ie(C("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function WC(r,e,t){let n=C("boxes",r,e,t),o=C("scores",r,e,t),s=C("maxOutputSize",r,e,t),a=C("iouThreshold",r,e,t),i=C("scoreThreshold",r,e,t),l=C("softNmsSigma",r,e,t);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:l}}var yz=async(r,e,t)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:l}=WC(r,e,t),u=await Rs.nonMaxSuppressionWithScoreAsync(n,o,s,a,i,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=WC(r,e,t),l=C("padToMaxOutputSize",r,e,t),u=await Rs.nonMaxSuppressionPaddedAsync(n,o,s,a,i,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=WC(r,e,t);return[await Rs.nonMaxSuppressionAsync(n,o,s,a,i)]}case"Where":{let n=ne(C("condition",r,e,t),"bool"),o=[await uf(n)];return n.dispose(),o}case"ListDiff":return e_(C("x",r,e,t),C("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var bz=(r,e,t)=>{switch(r.op){case"TopKV2":{let n=C("x",r,e,t),o=C("k",r,e,t),s=C("sorted",r,e,t),a=af(n,o,s);return[a.values,a.indices]}case"Unique":{let n=C("x",r,e,t),o=np(n);return[o.values,o.indices]}case"UniqueV2":{let n=C("x",r,e,t),o=C("axis",r,e,t),s=np(n,o);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var wz=(r,e,t)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let n=C("default",r,e,t);return[xr(r.name,e,t)||n];case"Placeholder":return[xr(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let u=C("x",r,e,t);return[Ws(u)]}case"IdentityN":return C("x",r,e,t).map(u=>Ws(u));case"Snapshot":let o=C("x",r,e,t);return[Ws(o)];case"Shape":return[Gt(C("x",r,e,t).shape,"int32")];case"ShapeN":return C("x",r,e,t).map(u=>Gt(u.shape));case"Size":return[le(C("x",r,e,t).size,"int32")];case"Rank":return[le(C("x",r,e,t).rank,"int32")];case"NoOp":return[le(1)];case"Print":let s=C("x",r,e,t),a=C("data",r,e,t),i=C("message",r,e,t),l=C("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let u=0;u<a.length;u++)console.log(Array.prototype.slice.call(a[u].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var UC=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=le(0),this.tensorMap=new Map,$t(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),V(()=>{let o=cr(t),s=n.length,a=o.length;y.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let l=n[i],u=o[i];$t(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return V(()=>{let o=[];for(let s=0;s<n.length;s++){let a=n[s],i=this.findWithDefault(a,t);o.push(i)}return Vt(o)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var _z=async(r,e,t,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=C("keyDType",r,e,t),s=C("valueDType",r,e,t),a=new UC(o,s);return n.addHashTable(r.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=C("tableHandle",r,e,t,n),s=C("keys",r,e,t),a=C("values",r,e,t);return[await n.getHashTableById(o.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let o=C("tableHandle",r,e,t,n),s=C("keys",r,e,t),a=C("defaultValue",r,e,t);return[await n.getHashTableById(o.id).find(s,a)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var kz=(r,e,t)=>{switch(r.op){case"ResizeBilinear":{let n=C("images",r,e,t),o=C("size",r,e,t),s=C("alignCorners",r,e,t),a=C("halfPixelCenters",r,e,t);return[Rs.resizeBilinear(n,[o[0],o[1]],s,a)]}case"ResizeNearestNeighbor":{let n=C("images",r,e,t),o=C("size",r,e,t),s=C("alignCorners",r,e,t),a=C("halfPixelCenters",r,e,t);return[Rs.resizeNearestNeighbor(n,[o[0],o[1]],s,a)]}case"CropAndResize":{let n=C("image",r,e,t),o=C("boxes",r,e,t),s=C("boxInd",r,e,t),a=C("cropSize",r,e,t),i=C("method",r,e,t),l=C("extrapolationValue",r,e,t);return[Rs.cropAndResize(n,o,s,a,i,l)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var vz=(r,e,t)=>{switch(r.op){case"Equal":return[wn(C("a",r,e,t),C("b",r,e,t))];case"NotEqual":return[Go(C("a",r,e,t),C("b",r,e,t))];case"Greater":return[er(C("a",r,e,t),C("b",r,e,t))];case"GreaterEqual":return[tn(C("a",r,e,t),C("b",r,e,t))];case"Less":return[Eu(C("a",r,e,t),C("b",r,e,t))];case"LessEqual":return[Ln(C("a",r,e,t),C("b",r,e,t))];case"LogicalAnd":return[dr(C("a",r,e,t),C("b",r,e,t))];case"LogicalNot":return[Ta(C("a",r,e,t))];case"LogicalOr":return[$u(C("a",r,e,t),C("b",r,e,t))];case"Select":case"SelectV2":return[Rt(C("condition",r,e,t),C("a",r,e,t),C("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Cz=(r,e,t)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[je(C("a",r,e,t),C("b",r,e,t),C("transposeA",r,e,t),C("transposeB",r,e,t))];case"Transpose":return[We(C("x",r,e,t),C("perm",r,e,t))];case"_FusedMatMul":let[n,o]=C("fusedOps",r,e,t),s=n==="biasadd",a=o==="prelu",i=C("numArgs",r,e,t),l=C("leakyreluAlpha",r,e,t);if(s){if(a&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,c]=C("args",r,e,t);return[jo.matMul({a:C("a",r,e,t),b:C("b",r,e,t),transposeA:C("transposeA",r,e,t),transposeB:C("transposeB",r,e,t),bias:u,activation:o,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Iz=(r,e,t)=>{switch(r.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[zo(C("x",r,e,t),C("mean",r,e,t),C("variance",r,e,t),C("offset",r,e,t),C("scale",r,e,t),C("epsilon",r,e,t))];case"FusedBatchNormV3":return[zo(C("x",r,e,t),C("mean",r,e,t),C("variance",r,e,t),C("offset",r,e,t),C("scale",r,e,t),C("epsilon",r,e,t))];case"LRN":return[qm(C("x",r,e,t),C("radius",r,e,t),C("bias",r,e,t),C("alpha",r,e,t),C("beta",r,e,t))];case"Softmax":return[$a(C("x",r,e,t))];case"LogSoftmax":return[Du(C("x",r,e,t))];case"SparseToDense":return[cf(C("sparseIndices",r,e,t),C("outputShape",r,e,t),C("sparseValues",r,e,t),C("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Nz=(r,e,t)=>{switch(r.op){case"Max":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[lr(C("x",r,e,t),a,i)]}case"Mean":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[gt(C("x",r,e,t),a,i)]}case"Min":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[zi(C("x",r,e,t),a,i)]}case"Sum":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[ye(C("x",r,e,t),a,i)]}case"All":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[_u(C("x",r,e,t),a,i)]}case"Any":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[il(C("x",r,e,t),a,i)]}case"ArgMax":{let a=C("axis",r,e,t);return[al(C("x",r,e,t),a)]}case"ArgMin":{let a=C("axis",r,e,t);return[$m(C("x",r,e,t),a)]}case"Prod":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[Ru(C("x",r,e,t),a,i)]}case"Cumsum":{let a=C("axis",r,e,t),i=C("exclusive",r,e,t),l=C("reverse",r,e,t);return[Su(C("x",r,e,t),a,i,l)]}case"Bincount":let n=C("x",r,e,t),o=C("weights",r,e,t),s=C("size",r,e,t);return[Sw(n,o,s)];case"DenseBincount":{let a=C("x",r,e,t),i=C("weights",r,e,t),l=C("size",r,e,t),u=C("binaryOutput",r,e,t);return[$w(a,i,l,u)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Sz=(r,e,t)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=C("n",r,e,t),o=C("axis",r,e,t),s=C("tensors",r,e,t);return s=s.slice(0,n),[Qe(s,o)]}case"Gather":{let n=C("x",r,e,t),o=C("indices",r,e,t);return[Bo(n,ne(o,"int32"),0)]}case"GatherV2":{let n=C("axis",r,e,t),o=C("batchDims",r,e,t),s=C("x",r,e,t),a=C("indices",r,e,t);return[Bo(s,ne(a,"int32"),n,o)]}case"Reverse":{let n=C("dims",r,e,t),o=[];for(let a=0;a<n.length;a++)n[a]&&o.push(a);let s=C("x",r,e,t);return[Kt(s,o)]}case"ReverseV2":{let n=C("axis",r,e,t),o=C("x",r,e,t);return[Kt(o,n)]}case"Slice":{let n=C("begin",r,e,t),o=C("size",r,e,t);return[Fe(C("x",r,e,t),n,o)]}case"StridedSlice":{let n=C("begin",r,e,t),o=C("end",r,e,t),s=C("strides",r,e,t),a=C("beginMask",r,e,t),i=C("endMask",r,e,t),l=C("ellipsisMask",r,e,t),u=C("newAxisMask",r,e,t),c=C("shrinkAxisMask",r,e,t),p=C("x",r,e,t);return[of(p,n,o,s,a,i,l,u,c)]}case"Pack":return V(()=>{let n=C("axis",r,e,t),o=C("tensors",r,e,t),s=o[0].shape,a=_n(o[0]).shape,i=o.map(l=>{let u=y.arraysEqual(l.shape,s);if(!u&&!y.arraysEqual(_n(l).shape,a))throw new Error("the input tensors shape does not match");return u?l:z(l,s)});return[Vt(i,n)]});case"Unpack":{let n=C("axis",r,e,t),o=C("tensor",r,e,t);return cr(o,n)}case"Tile":{let n=C("reps",r,e,t);return[Mn(C("x",r,e,t),n)]}case"Split":case"SplitV":{let n=C("axis",r,e,t),o=C("numOrSizeSplits",r,e,t),s=C("x",r,e,t);return ur(s,o,n)}case"ScatterNd":{let n=C("indices",r,e,t),o=C("values",r,e,t),s=C("shape",r,e,t);return[n_(n,o,s)]}case"GatherNd":{let n=C("x",r,e,t),o=C("indices",r,e,t);return[o_(n,o)]}case"SparseToDense":{let n=C("sparseIndices",r,e,t),o=C("outputShape",r,e,t),s=C("sparseValues",r,e,t),a=C("defaultValue",r,e,t);return[cf(n,s,o,s.dtype===a.dtype?a:ne(a,s.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Tz=(r,e,t)=>{switch(r.op){case"FFT":return[Ra(C("x",r,e,t))];case"IFFT":return[Bi(C("x",r,e,t))];case"RFFT":return[Fa(C("x",r,e,t))];case"IRFFT":return[Bu(C("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Ez=(r,e,t)=>{switch(r.op){case"Cast":return[ne(C("x",r,e,t),C("dtype",r,e,t))];case"ExpandDims":{let n=C("axis",r,e,t);return[ir(C("x",r,e,t),n)]}case"Squeeze":{let n=C("axis",r,e,t);return[_n(C("x",r,e,t),n)]}case"Reshape":return[z(C("x",r,e,t),C("shape",r,e,t))];case"MirrorPad":return[Ym(C("x",r,e,t),C("padding",r,e,t),C("mode",r,e,t))];case"PadV2":case"Pad":return[Rr(C("x",r,e,t),C("padding",r,e,t),C("constantValue",r,e,t))];case"SpaceToBatchND":{let n=C("blockShape",r,e,t),o=C("paddings",r,e,t);return[Aa(C("x",r,e,t),n,o)]}case"BatchToSpaceND":{let n=C("blockShape",r,e,t),o=C("crops",r,e,t);return[Ca(C("x",r,e,t),n,o)]}case"DepthToSpace":{let n=C("blockSize",r,e,t),o=C("dataFormat",r,e,t).toUpperCase();return[Vm(C("x",r,e,t),n,o)]}case"BroadcastTo":return[ll(C("x",r,e,t),C("shape",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function qC(r,e,t,n){let o=((s,a,i)=>{switch(s.category){case"arithmetic":return V(()=>az(s,a,i));case"basic_math":return V(()=>lz(s,a,i));case"control":return dz(s,a,i);case"convolution":return V(()=>gz(s,a,i));case"creation":return V(()=>xz(s,a,i));case"dynamic":return yz(s,a,i);case"evaluation":return V(()=>bz(s,a,i));case"image":return V(()=>kz(s,a,i));case"graph":return V(()=>wz(s,a,i));case"logical":return V(()=>vz(s,a,i));case"matrices":return V(()=>Cz(s,a,i));case"normalization":return V(()=>Iz(s,a,i));case"reduction":return V(()=>Nz(s,a,i));case"slice_join":return V(()=>Sz(s,a,i));case"spectral":return V(()=>Tz(s,a,i));case"transformation":return V(()=>Ez(s,a,i));case"hash_table":return _z(s,a,i,n);case"custom":let l=Zx(s.op);if(l&&l.customExecutor)return l.customExecutor(new GC(s,a,i));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return y.isPromise(o)?o.then(s=>[].concat(s)):[].concat(o)}var py=class{constructor(e={},t={},n={},o={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function KC(r,e,t,n){let o=new Set,s=[],a=null,i=null,l=new Set,u=Object.keys(r).map(m=>Zr(m)[0]),c=[];n!=null&&(c=n.map(m=>Zr(m.name)[0]));let p=[...e];for(;p.length>0;){let m=p.pop();if((HC(m)||$te(m)||Rte(m))&&a==null&&(a=m,i=a.children.map(f=>f.name).filter(f=>o.has(f))),o.add(m.name),t[m.name]==null&&u.indexOf(m.name)===-1&&c.indexOf(m.name)===-1){if(m.inputs.length===0){s.push(m.name);continue}m.inputs.forEach(f=>{l.has(f.name)||(l.add(f.name),p.push(f))})}}return{inputs:r,outputs:e,usedNodes:o,missingInputs:s,dynamicNode:a,syncInputs:i}}function Az(r,e,t){let{usedNodes:n,inputs:o}=t,s=[],a=Object.keys(o).map(c=>Zr(c)[0]).map(c=>r.nodes[c]),i=r.initNodes;a.forEach(c=>{n.has(c.name)&&s.push(c)}),r.weights.forEach(c=>{n.has(c.name)&&s.push(c)}),i!=null&&i.forEach(c=>{n.has(c.name)&&s.push(c)});let l=new Set,u=[];for(;s.length>0;){let c=s.pop();l.add(c.name),e[c.name]||u.push(c),c.children.forEach(p=>{!l.has(p.name)&&n.has(p.name)&&p.inputs.every(m=>l.has(m.name))&&s.push(p)})}return u}var Fte=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Ote=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Pte=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function HC(r){return Fte.indexOf(r.op)>=0}function $te(r){return Ote.indexOf(r.op)>=0}function Rte(r){return Pte.indexOf(r.op)>=0}var em=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new em(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),o=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(e,t){let n=KC(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){let i=t.map(u=>u.name),l=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${l}]. Missing the following inputs: [${o}]`)}return Az(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let o=n.map(p=>this.graph.nodes[Zr(p)[0]]),s=t.map(p=>Zr(p)[0]),a=s.map(p=>this.graph.nodes[p]);a.length===0&&(a=this._outputs);let i=this.getCompilationKey(o,a),l=this.compiledMap.get(i);l==null&&(l=this.compile(e,a),this.compiledMap.set(i,l));let u={},c={};return V(()=>{let p=new py(this.weightMap,u,c,this.functionExecutorMap),m=Object.assign({},this.weightMap);Object.keys(e).forEach(h=>{let[g,x]=Zr(h),b=[];b[x]=e[h],m[g]=b});let f=this.getFrozenTensorIds(m),d={};for(let h=0;h<l.length;h++){let g=l[h];if(!m[g.name]){let x=qC(g,m,p,this._resourceManager);if(y.isPromise(x))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);m[g.name]=x,this.checkTensorForDisposal(g.name,g,m,p,f,s,d)}}return this.parent==null&&p.dispose(f),t.map(h=>xr(h,m,p))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,s,a,i){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(l=>{l!=null&&(i[l.id]=(i[l.id]||0)+t.children.length)}),t.inputs.forEach(l=>{if(l.category!=="control"){let u=nz(l.name,n,o);u!=null&&u.forEach(c=>{if(c&&!s.has(c.id)){let p=i[c.id];p===1?(c.dispose(),delete i[c.id]):p!=null&&i[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,o={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));let a=new py(this.weightMap,o,s,this.functionExecutorMap),i=await this.executeWithControlFlow(e,a,t,n),l=t.map(m=>xr(m,i,a)),u=l.map(m=>m.id),c=Object.keys(e).map(m=>e[m].id),p=new Set([...u,...c,...this.weightIds]);return Object.keys(i).forEach(m=>{i[m].forEach(d=>{d&&!d.isDisposed&&!p.has(d.id)&&d.dispose()})}),this.parent==null&&a.dispose(p),l}async executeFunctionAsync(e,t,n){let o=e.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){let s=Object.keys(e),a=s.map(w=>this.graph.nodes[Zr(w)[0]]),i=n.map(w=>Zr(w)[0]),l=i.map(w=>this.graph.nodes[w]);l.length===0&&(l=this._outputs);let{usedNodes:u,missingInputs:c,dynamicNode:p,syncInputs:m}=KC(e,l,this.weightMap,this._initNodes),f=[...a,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:t.currentContext})),d=Object.assign({},this.weightMap);Object.keys(e).forEach(w=>{let[_,k]=Zr(w),E=[];E[k]=e[w],d[_]=E});let h={},g=this.getFrozenTensorIds(d),x={};for(;f.length>0;){let w=this.processStack(a,f,t,d,x,g,i,h,u);await Promise.all(w)}p==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=l.filter(w=>!HC(w)&&!xr(w.name,d,t)).map(w=>w.name);if(b.length>0){let w="";throw p!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${w}`)}return d}processStack(e,t,n,o,s,a,i,l,u){let c=[];for(;t.length>0;){let p=t.pop();n.currentContext=p.contexts;let m="";if(p.node.op==="Enter"&&C("isConstant",p.node,o,n)&&([m]=js(p.node.name,n)),o[p.node.name]==null){let f=qC(p.node,o,n,this._resourceManager);m||([m]=js(p.node.name,n));let d=n.currentContext;y.isPromise(f)?c.push(f.then(h=>(o[m]=h,n.currentContext=d,this.checkTensorForDisposal(m,p.node,o,n,a,i,l),this.processChildNodes(p.node,t,n,o,s,u),h))):(o[m]=f,this.checkTensorForDisposal(m,p.node,o,n,a,i,l),this.processChildNodes(p.node,t,n,o,s,u))}else this.processChildNodes(p.node,t,n,o,s,u)}return c}processChildNodes(e,t,n,o,s,a){e.children.forEach(i=>{let[l]=js(i.name,n);s[l]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!xr(u,o,n))&&(s[l]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(u=>!!xr(u,o,n))&&(s[l]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[o]=Zr(t),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((l,u)=>a[u]===-1||a[u]===l);y.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&y.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];t[o.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[o]=Zr(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=Zr(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}};var XC=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var Mte="?tfjs-format=file",Lte="model.json",my=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new XC}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Cr.browserHTTPRequest(e,this.loadOptions);else{let t=Cr.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Cr.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let o=Cr.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new em(Qx.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=Qx.Instance.transformGraph(e.modelInitializer);this.initializer=new em(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=Cr.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ve)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,o)=>(t[n]=e[o],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function Dz(r,e={}){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&r.load==null&&(r.endsWith("/")||(r=r+"/"),r=`${r}${Lte}${Mte}`);let t=new my(r,e);return await t.load(),t}var $z="3.1.0";var wy={};Ye(wy,{CSVDataset:()=>xh,Dataset:()=>Zi,FileDataSource:()=>kh,TextLineDataset:()=>hh,URLDataSource:()=>vh,array:()=>h3,csv:()=>I3,func:()=>N3,generator:()=>S3,microphone:()=>E3,version_data:()=>A3,webcam:()=>T3,zip:()=>g3});var d3=Dc(rI());var Qz=Dc(rI());function Kz(r,e){return dy(r,e)}function dy(r,e,t=new Map,n=new Set){if(r==null)return null;if(n.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(Dl(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let a in r){let i=r[a],l=dy(i,e,t,n);s[a]=l}return n.delete(r),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return t.set(r,o.value),o.value}function Yz(r,e=nI){return Xz(r,e)}function Xz(r,e,t=new Set){let n=r[0];if(t.has(n))throw new Error("Circular references are not supported.");let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(Dl(n)){let s=Array.isArray(n)?[]:{};t.add(n);for(let a in n){let i=r.map(u=>u[a]),l=Xz(i,e,t);s[a]=l}return t.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function nI(r){return r===null?null:Dl(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function hy(r,e){let t=new Map;dy(r,e,t);for(let o of Array.from(t.keys())){let s=t.get(o);if(y.isPromise(s)){let a=await s;t.set(o,a)}}return dy(r,e,t)}function Dl(r){return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Ve))}function Zz(r){return r==null||Ute(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Ve||y.isTypedArray(r)}function Ute(r){return r===null||typeof r!="object"&&typeof r!="function"}function Jz(r){return Kz(r,qte)}function qte(r){return r instanceof Ve?{value:r.clone(),recurse:!1}:Dl(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var fh=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}};var tm=class extends fh{constructor(){super(tm.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let o=0;o<n;o++)t[o]=this.get(this.wrap(this.begin+o));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};tm.INITIAL_CAPACITY=32;function oI(r){return new e3(r)}function dh(r){return new t3(r)}function r3(r,e){return new sI(r,e)}function o3(r,e=Ha.FAIL){return new n3(r,e)}var Xt=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new p3(this,e)}filter(e){return new u3(this,e)}map(e){return new c3(this,e)}mapAsync(e){return new iI(this,e)}serialMapAsync(e){return new iI(this,e).serial()}flatmap(e){return new m3(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new l3(this,e,t)}columnMajorBatch(e,t=!0,n=nI){return this.rowMajorBatch(e,t).map(s=>Yz(s,n))}concatenate(e,t){return new sI(oI([this,e]),t)}take(e){return e<0||e==null?this:new a3(this,e)}skip(e){return e<0||e==null?this:new i3(this,e)}prefetch(e){return new aI(this,e)}shuffle(e,t){return new f3(this,e,t)}serial(){return new s3(this)}},e3=class extends Xt{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:Jz(e),done:!1}}},t3=class extends Xt{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},s3=class extends Xt{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},i3=class extends Xt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Ee(e.value)}return this.upstream.next()}},a3=class extends Xt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},l3=class extends Xt{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},u3=class extends Xt{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ee(e.value)}}},c3=class extends Xt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Lo.getTensorsInContainer(e.value),n=this.transform(e.value),o=Lo.getTensorsInContainer(n);for(let s of t)Lo.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},p3=class extends Xt{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},iI=class extends Xt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Lo.getTensorsInContainer(e.value),n=await this.transform(e.value),o=Lo.getTensorsInContainer(n);for(let s of t)Lo.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},rm=class extends Xt{constructor(){super();this.outputQueue=new tm,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},m3=class extends rm{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Lo.getTensorsInContainer(e.value),n=this.transform(e.value),o=Lo.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)Lo.isTensorInList(s,o)||s.dispose();return!0}},sI=class extends Xt{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Ha;(function(r){r[r.FAIL=0]="FAIL",r[r.SHORTEST=1]="SHORTEST",r[r.LONGEST=2]="LONGEST"})(Ha||(Ha={}));var n3=class extends Xt{constructor(e,t=Ha.FAIL){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function o(a){return a instanceof Xt?{value:a.next().then(l=>(t++,l.done&&n++,l.value)),recurse:!1}:{value:null,recurse:!0}}let s=await hy(this.iterators,o);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Ha.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Ha.SHORTEST:return{value:null,done:!0};case Ha.LONGEST:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},aI=class extends Xt{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new fh(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},f3=class extends aI{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Qz.alea(n||y.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}};var Zi=class{constructor(){this.size=null}batch(e,t=!0){let n=this;y.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let o;return this.size===Infinity||this.size==null?o=this.size:t?o=Math.ceil(this.size/e):o=Math.floor(this.size/e),pn(async()=>(await n.iterator()).columnMajorBatch(e,t,Hte),o)}concatenate(e){let t=this,n;return this.size===Infinity||e.size===Infinity?n=Infinity:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,pn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===Infinity?n=Infinity:n=null,pn(async()=>(await t.iterator()).filter(o=>V(()=>e(o))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return pn(async()=>(await t.iterator()).map(n=>V(()=>e(n))),this.size)}mapAsync(e){let t=this;return pn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return pn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=Infinity:n=null,pn(async()=>{let o=dh(async()=>({value:await t.iterator(),done:!1}));return r3(o.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,pn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=d3.alea(t||y.now().toString());return pn(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await o.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,pn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Zi.MAX_BUFFER_SIZE=1e4;function pn(r,e=null){return new class extends Zi{constructor(){super(...arguments);this.size=e}async iterator(){return r()}}}function h3(r){return pn(async()=>oI(r),r.length)}function g3(r){if(!Dl(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=e==null?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(let t in r)e=e==null?r[t].size:Math.min(e,r[t].size);return pn(async()=>{let t=await hy(r,n=>{if(n instanceof Zi)return{value:n.iterator(),recurse:!1};if(Dl(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return o3(t,Ha.SHORTEST)},e)}function Hte(r){if(r===null)return null;let e=r[0];return Zz(e)?{value:Kte(r),recurse:!1}:{value:null,recurse:!0}}function Kte(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Ve?Vt(r):$r(r)}var hh=class extends Zi{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}};var gy='"',gh=Symbol("out"),x3=Symbol("field"),xy=Symbol("quote"),lI=Symbol("quoteafterquote"),y3=Symbol("quoteinquote"),xh=class extends Zi{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new hh(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(y.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&y.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((o,s)=>(o[s]=o[s]+1||1,o),{}),n=Object.keys(t).filter(o=>t[o]>1);if(y.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},o={};for(let s=0;s<this.fullColumnNames.length;s++){let a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!i)){let l=t[s],u=null;if(l==="")if(i&&i.default!==void 0)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{let c=Number(l);if(isNaN(c))i&&i.dtype==="bool"?u=this.getBoolean(l):u=l;else if(!i||!i.dtype)u=c;else switch(i.dtype){case"float32":u=c;break;case"int32":u=Math.floor(c);break;case"bool":u=this.getBoolean(l);break;default:u=c}}i&&i.isLabel?o[a]=u:n[a]=u}}return Object.keys(o).length===0?n:{xs:n,ys:o}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],o=0,s=e.length,a=gh;for(let i=0;i<s;i++)switch(a){case gh:switch(e.charAt(i)){case gy:o=i+1,a=xy;break;case this.delimiter:if(o=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=gh;break;default:a=x3,o=i;break}break;case x3:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i)),a=gh,o=i+1;break;default:}break;case xy:switch(e.charAt(i)){case gy:a=lI;break;default:}break;case lI:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i-1)),a=gh,o=i+1;break;case gy:a=xy;break;default:a=y3;break}break;case y3:switch(e.charAt(i)){case gy:a=xy;break;default:}break;default:}if(a===lI?n.push(e.substring(o,s-1)):n.push(e.substring(o)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}};var yh=class extends Xt{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(W().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new yh(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let o=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let o=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(o=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-Infinity&&o({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),o({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((o,s)=>n.set(o,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(y.sizeFromShape(t));return n.set(e,n.length-e.length),$r(n,t)}};var bh=class extends Xt{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Gt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,a=(1-o)/2,i=s+n,l=o+a;this.cropBox=Vi([a,s,l,i],[1,4])}else this.cropBox=Vi([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(W().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new bh(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&y.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=sg.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return V(()=>{let t=ir(ne(e,"float32"),0),n;n=Rs.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let o=n.shape;return z(n,o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var wh=class{};var yy=class extends Xt{split(e){return new b3(this,e)}},b3=class extends yy{constructor(e,t){super();this.upstream=e,this.impl=new w3(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},w3=class extends rm{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}};var uI=class extends Xt{decodeUTF8(){return new k3(this)}},k3=class extends yy{constructor(e){super();this.upstream=e,this.impl=new v3(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},v3=class extends rm{constructor(e){super();if(this.upstream=e,W().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=_3();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return W().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}};var _h=class extends uI{constructor(e,t={}){super();this.file=e,this.options=t,y.assert(e instanceof Uint8Array||(W().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,o)));else{let s=new FileReader;s.onload=i=>{let l=s.result;if(l instanceof ArrayBuffer&&(l=new Uint8Array(l)),!(l instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(l)},s.onabort=i=>n(new Error("Aborted")),s.onerror=i=>n(new Error(i.type));let a=this.file.slice(this.offset,o);s.readAsArrayBuffer(a)}this.offset=o}),done:!1}}};async function C3(r,e={}){let t,n;typeof r=="string"?t=r:(t=r.url,n=Xte(r));let o=await y.fetch(t,n);if(o.ok){let s=new Uint8Array(await o.arrayBuffer());return new _h(s,e)}else throw new Error(o.statusText)}var Xte=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function by(r){return typeof r=="string"&&r.substr(0,7)==="file://"}var kh=class extends wh{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(by(this.input)&&W().get("IS_NODE")){let e=require("fs");this.input=e.readFileSync(this.input.substr(7))}return new _h(this.input,this.options)}};var vh=class extends wh{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return by(this.url)?new kh(this.url,this.fileOptions).iterator():C3(this.url,this.fileOptions)}};function I3(r,e={}){return new xh(new vh(r),e)}function N3(r){let e=dh(r);return pn(async()=>e)}function S3(r){return pn(async()=>{let e=await r();return dh(()=>e.next())})}async function T3(r,e){return bh.create(r,e)}async function E3(r){return yh.create(r)}var A3="3.1.0";var Yte={tfjs:wI,"tfjs-core":_I,"tfjs-data":kI,"tfjs-layers":vI,"tfjs-converter":CI,"tfjs-backend-cpu":v_,"tfjs-backend-webgl":zk,"tfjs-backend-wasm":w0};export{us as Abs,Xs as Acos,Ys as Acosh,sp as AdadeltaOptimizer,ip as AdagradOptimizer,ap as AdamOptimizer,lp as AdamaxOptimizer,xn as Add,Hn as AddN,Vl as All,Gl as Any,Kn as ArgMax,na as ArgMin,Zs as Asin,Js as Asinh,Qs as Atan,ti as Atan2,ei as Atanh,Xn as AvgPool,oa as AvgPool3D,Wl as AvgPool3DGrad,jl as AvgPoolGrad,dx as BackendWasm,Yn as BatchMatMul,sa as BatchToSpaceND,Ul as Bincount,zb as BroadcastTo,Kx as Callback,Ax as CallbackList,An as Cast,Zn as Ceil,Dn as ClipByValue,ql as Complex,ia as ComplexAbs,cs as Concat,Jn as Conv2D,Hl as Conv2DBackpropFilter,Qn as Conv2DBackpropInput,aa as Conv3D,Kl as Conv3DBackpropFilterV2,Xl as Conv3DBackpropInputV2,eo as Cos,ri as Cosh,ni as CropAndResize,to as Cumsum,$x as CustomCallback,Ja as DataStorage,Yl as DenseBincount,oi as DepthToSpace,ro as DepthwiseConv2dNative,Zl as DepthwiseConv2dNativeBackpropFilter,Jl as DepthwiseConv2dNativeBackpropInput,Ql as Diag,la as Dilation2D,Mc as Dilation2DBackpropFilter,Pc as Dilation2DBackpropInput,Pb as ENV,Yx as EarlyStopping,si as Elu,eu as EluGrad,Xh as Environment,ai as Equal,ii as Erf,oo as Exp,ps as ExpandDims,li as Expm1,tu as FFT,ua as Fill,ui as FlipLeftRight,so as Floor,io as FloorDiv,Lc as FromPixels,ao as FusedBatchNorm,vs as FusedConv2D,Cs as FusedDepthwiseConv2D,Kg as GPGPUContext,ci as GatherNd,ms as GatherV2,my as GraphModel,pi as Greater,lo as GreaterEqual,Dx as History,ru as IFFT,$n as Identity,nu as Imag,Dt as InputSpec,mi as IsFinite,fi as IsInf,di as IsNan,qs as KernelBackend,ca as LRN,su as LRNGrad,nd as LayerVariable,In as LayersModel,uo as LeakyRelu,hi as Less,gi as LessEqual,ou as LinSpace,co as Log,xi as Log1p,Bb as LogSoftmax,yi as LogicalAnd,Qa as LogicalNot,el as LogicalOr,Ku as MathBackendCPU,ec as MathBackendWebGL,po as Max,fo as MaxPool,pa as MaxPool3D,au as MaxPool3DGrad,iu as MaxPoolGrad,lu as MaxPoolWithArgmax,mo as Maximum,ho as Mean,go as Min,xo as Minimum,ma as MirrorPad,bi as Mod,up as MomentumOptimizer,uu as Multinomial,yo as Multiply,fs as Neg,_i as NonMaxSuppressionV3,ki as NonMaxSuppressionV4,vi as NonMaxSuppressionV5,wi as NotEqual,jI as OP_SCOPE_SUFFIX,bo as OneHot,ds as OnesLike,Or as Optimizer,hs as Pack,wo as PadV2,bV as Pool,_o as Pow,ko as Prelu,Ci as Prod,cp as RMSPropOptimizer,cn as RNN,fa as Range,Ub as Rank,cu as Real,no as RealDiv,Ii as Reciprocal,jt as Reduction,vo as Relu,Io as Relu6,gs as Reshape,Co as ResizeBilinear,mu as ResizeBilinearGrad,da as ResizeNearestNeighbor,pu as ResizeNearestNeighborGrad,No as Reverse,Fi as RotateWithOffset,So as Round,To as Rsqrt,cl as SGDOptimizer,Ni as ScatterNd,xs as Select,Si as Selu,Yi as Sequential,Ao as Sigmoid,Ei as Sign,Eo as Sin,Ti as Sinh,ys as Slice,Ro as Softmax,Ai as Softplus,ha as SpaceToBatchND,fu as SparseToDense,bs as SplitV,Do as Sqrt,ga as Square,Fo as SquaredDifference,Rn as Step,Di as StridedSlice,Oo as Sub,$o as Sum,Br as SymbolicTensor,$i as Tan,Po as Tanh,Ve as Tensor,ct as TensorBuffer,yn as Tile,Ri as TopK,Mo as Transpose,du as Unique,ws as Unpack,xa as UnsortedSegmentSum,nl as Variable,_s as ZerosLike,ks as _FusedMatMul,Et as abs,Am as acos,Dm as acosh,Q as add,ww as addN,_u as all,il as any,al as argMax,$m as argMin,Rm as asin,Fm as asinh,Om as atan,Pm as atan2,Mm as atanh,va as avgPool,Lm as avgPool3d,bw as backend,N as backend_util,yj as basicLSTMCell,zo as batchNorm,Cw as batchNorm2d,Iw as batchNorm3d,Nw as batchNorm4d,Ca as batchToSpaceND,Sw as bincount,NU as booleanMaskAsync,ll as broadcastTo,sg as browser,Ce as buffer,QL as callbacks,ne as cast,zm as ceil,sr as clipByValue,Fn as clone,bn as complex,Qe as concat,Tw as concat1d,Ew as concat2d,Aw as concat3d,Dw as concat4d,E0 as constraints,Cu as conv1d,Ur as conv2d,Iu as conv2dTranspose,Bm as conv3d,zj as conv3dTranspose,kV as copyRegisteredKernels,Ia as cos,Nu as cosh,pf as cosineWindow,Su as cumsum,qr as customGrad,wy as data,$w as denseBincount,pg as deprecationWarn,Vm as depthToSpace,Ns as depthwiseConv2d,rz as deregisterOp,Wc as device_util,Hj as diag,Gm as dilation2d,DG as disableDeprecationWarnings,Ee as dispose,$G as disposeVariables,de as div,jm as divNoNan,Rw as dot,s_ as dropout,Ss as elu,AG as enableDebugMode,EG as enableProdMode,i_ as enclosingPowerOfTwo,On as engine,W as env,wn as equal,Wm as erf,Yt as exp,ir as expandDims,Um as expm1,Jc as eye,Ra as fft,Na as fill,LG as findBackend,zG as findBackendFactory,Ts as floor,wu as floorDiv,Bk as forceHalfFloat,jo as fused,Bo as gather,o_ as gatherND,ig as gather_util,PG as getBackend,Yh as getGradient,Bc as getKernel,Cm as getKernelsForBackend,cA as gpgpu_util,kW as grad,vW as grads,er as greater,tn as greaterEqual,Bi as ifft,Tu as imag,Rs as image,OU as inTopKAsync,F0 as initializers,qx as input,Cr as io,Bu as irfft,Fw as isFinite,Ow as isInf,Pw as isNaN,$t as keep,Tr as kernel_impls,gC as layers,Sa as leakyRelu,Eu as less,Ln as lessEqual,p_ as linalg,Mw as linspace,Dz as loadGraphModel,BL as loadLayersModel,qm as localResponseNormalization,ar as log,Au as log1p,Lw as logSigmoid,Du as logSoftmax,Km as logSumExp,dr as logicalAnd,Ta as logicalNot,$u as logicalOr,Gw as logicalXor,Sq as losses,je as matMul,wN as math,lr as max,Ea as maxPool,Xm as maxPool3d,jw as maxPoolWithArgmax,Hr as maximum,gt as mean,Xc as memory,wC as metrics,zi as min,As as minimum,Ym as mirrorPad,Zm as mod,LL as model,_C as models,Qc as moments,EU as movingAverage,P as mul,JW as multiRNNCell,Ww as multinomial,Ue as neg,mf as nextFrame,ju as norm,Go as notEqual,Is as oneHot,Ir as ones,tr as onesLike,T as op,n4 as outerProduct,Rr as pad,i4 as pad1d,l4 as pad2d,c4 as pad3d,m4 as pad4d,Uw as pool,Fr as pow,Da as prelu,uw as print,Ru as prod,RG as profile,_4 as rand,E4 as randomGamma,bg as randomNormal,Ds as randomUniform,tp as range,OG as ready,ul as real,Jm as reciprocal,bu as registerBackend,VL as registerCallbackConstructor,Gb as registerGradient,tl as registerKernel,tz as registerOp,kC as regularizers,Nr as relu,Ou as relu6,MG as removeBackend,z as reshape,Kt as reverse,L4 as reverse1d,B4 as reverse2d,G4 as reverse3d,W4 as reverse4d,Fa as rfft,Qm as round,Pu as rsqrt,le as scalar,n_ as scatterND,ag as scatter_util,Mu as selu,ef as separableConv2d,zL as sequential,J as serialization,PN as setBackend,BG as setPlatform,rJ as setWasmPath,nJ as setWasmPaths,W_ as setWebGLContext,e_ as setdiff1dAsync,Eg as shared,Wr as sigmoid,tf as sign,Nq as signal,Lu as sin,zu as sinh,Fe as slice,rf as slice1d,wg as slice2d,nf as slice3d,rp as slice4d,or as slice_util,$a as softmax,Es as softplus,Aa as spaceToBatchND,cf as sparseToDense,Iq as spectral,ur as split,yt as sqrt,Pe as square,Vu as squaredDifference,_n as squeeze,Vt as stack,$s as step,of as stridedSlice,ue as sub,ye as sum,gu as sumOutType,sf as tan,Li as tanh,$r as tensor,Gt as tensor1d,Vi as tensor2d,fw as tensor3d,gU as tensor4d,xU as tensor5d,yU as tensor6d,Lo as tensor_util,RN as test_util,V as tidy,Mn as tile,FG as time,af as topk,pl as train,We as transpose,Gu as truncatedNormal,np as unique,_V as unregisterGradient,wV as unregisterKernel,lf as unsortedSegmentSum,cr as unstack,fr as upcastType,y as util,CW as valueAndGrad,IW as valueAndGrads,t_ as variable,hg as variableGrads,Yte as version,$z as version_converter,TG as version_core,v_ as version_cpu,Up as version_layers,w0 as version_wasm,zk as version_webgl,l8 as webgl,sA as webgl_util,Rt as where,uf as whereAsync,xt as zeros,Ie as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.esm.js.map
